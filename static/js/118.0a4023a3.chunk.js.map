{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/get_binary_vars.js","../node_modules/@isle-project/components/data-explorer/menu/proptest2.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["getBinaryVars","vars","data","out","i","length","vals","encountered","Set","j","v","isNull","isnan","add","size","push","PropTest2Menu","props","defaultCategories","categorical","showDecision","t","defaultVar1","isArray","values","extractCategoriesFromValues","useState","categories","setCategories","var1","setVar1","success","setSuccess","group","setGroup","var2","setVar2","diff","setDiff","direction","setDirection","alpha","setAlpha","binary","style","fontSize","Header","as","title","content","Body","md","legend","defaultValue","options","onChange","variable","newCategories","unique","clearable","value","filter","elem","contains","min","max","step","raw","variant","block","onClick","session","addNotification","message","level","position","var","output","logAction","DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST","onCreated","disabled","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","className","createTooltip","tooltip","PINF","NINF","CreateTooltip","NumberInput","debug","logger","uid","generateUID","context","event","valid","target","validity","setState","parseFloat","bind","global","lesson","split","onBlur","state","prevProps","this","globalVal","isNumber","inline","input","padding","htmlFor","type","numbersOnly","name","width","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","tooltipPlacement","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","number","bool","oneOfType","node","func","object","oneOf","contextType","SessionContext"],"mappings":"6FAAA,uCAkCeA,IA1Bf,SAAwBC,EAAMC,GAE7B,IADA,IAAMC,EAAM,GACFC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAAM,CACvC,IAAIE,EAAOJ,EAAMD,EAAMG,IACvB,GAAKE,EAEJ,IADA,IAAMC,EAAc,IAAIC,IACdC,EAAI,EAAGA,EAAIH,EAAKD,OAAQI,IAAM,CACvC,IAAIC,EAAIJ,EAAMG,GAId,GAHME,IAAQD,IAAQE,IAAOF,IAAa,KAANA,GACnCH,EAAYM,IAAKH,GAEbH,EAAYO,KAAO,EACvB,MAEIL,IAAMH,EAAKD,OAAS,GACxBF,EAAIY,KAAMd,EAAMG,KAKpB,OAAOD,I,yOCLFa,EAAgB,SAAEC,GAAY,IAI/BC,EAHIC,EAAuCF,EAAvCE,YAAajB,EAA0Be,EAA1Bf,KAAMkB,EAAoBH,EAApBG,aAAcC,EAAMJ,EAANI,EAEnCC,EAAcH,EAAa,GAEjC,GAAKI,IAASJ,IAAiBA,EAAYd,OAAS,EAAI,CACvD,IAAMmB,EAAStB,EAAMoB,GAEpBJ,EADIM,EACgBC,YAA6BD,EAAQF,GAErC,QAGrBJ,EAAoB,GAba,MAeIQ,mBAAUR,GAfd,mBAe1BS,EAf0B,KAedC,EAfc,OAgBRF,mBAAUJ,GAhBF,mBAgB1BO,EAhB0B,KAgBpBC,EAhBoB,OAiBFJ,mBAAUC,EAAY,IAjBpB,mBAiB1BI,EAjB0B,KAiBjBC,EAjBiB,OAkBNN,mBAAU,MAlBJ,mBAkB1BO,EAlB0B,KAkBnBC,EAlBmB,OAmBRR,mBAAU,MAnBF,mBAmB1BS,EAnB0B,KAmBpBC,EAnBoB,OAoBRV,mBAAU,GApBF,mBAoB1BW,EApB0B,KAoBpBC,EApBoB,OAqBEZ,mBAAU,aArBZ,mBAqB1Ba,EArB0B,KAqBfC,EArBe,QAsBNd,mBAAU,KAtBJ,qBAsB1Be,GAtB0B,MAsBnBC,GAtBmB,MAmD5BC,GAAS3C,YAAemB,EAAajB,GAC3C,OACC,kBAAC,IAAD,CACC0C,MAAO,CAAEC,SAAU,SAEnB,kBAAC,IAAKC,OAAN,CAAaC,GAAG,MACd1B,EAAE,8BACH,kBAAC,IAAD,CAAgB2B,MAAO3B,EAAE,8BAA+B4B,QAAS5B,EAAE,6CAEpE,kBAAC,IAAK6B,KAAN,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,GAAI,GACR,kBAAC,IAAD,CACCC,OAAQ/B,EAAE,YACVgC,aAAclC,EAAa,GAC3BmC,QAASnC,EACToC,SAAU,SAAEC,GACX,IAAMhC,EAAStB,EAAMsD,GACfC,EAAgBhC,YAA6BD,EAAQgC,GAC3DE,IAAQD,GACR3B,EAAS0B,GACT5B,EAAe6B,GACfzB,EAAYyB,EAAe,QAI9B,kBAAC,IAAD,CAAKN,GAAI,GACR,kBAAC,IAAD,CACCC,OAAQ/B,EAAE,WACVgC,aAAc1B,EAAY,GAC1B2B,QAAS3B,EACT4B,SAAUvB,MAIb,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKmB,GAAI,GACR,kBAAC,IAAD,CACCC,OAAQ/B,EAAE,UACViC,QAASX,GACTgB,WAAS,EACTJ,SAAU,SAAEK,GACX1B,EAAU0B,GACVxB,EAAS,UAIZ,kBAAC,IAAD,CAAKe,GAAI,GAAG,2BAAI9B,EAAE,QAClB,kBAAC,IAAD,CAAK8B,GAAI,GACR,kBAAC,IAAD,CACCC,OAAQ/B,EAAE,mBACViC,QAASnC,EAAY0C,QAAQ,SAAAC,GAAI,OAChCC,IAAUpC,EAAYmC,MAEvBH,WAAS,EACTJ,SAAU,SAAEK,GACX1B,EAAU,MACVE,EAASwB,QAKb,kBAAC,IAAD,CACCR,OAAQ/B,EAAE,iBACVgC,aAAchB,EACd2B,IAAK,EACLC,IAAK,EACLC,KAAK,MACLX,SAAUjB,IAEX,kBAAC,IAAD,CACCc,OAAQ/B,EAAE,aACVgC,aAAcd,EACde,QAAS,CAAE,OAAQ,UAAW,aAC9BC,SAAUf,IAEX,kBAAC,IAAD,CACCY,OAAQ,8BAAO/B,EAAE,sBAAsB,kBAAC,IAAD,CAAK8C,IAAI,WAChDd,aAAcZ,GACduB,IAAK,EACLC,IAAK,EACLC,KAAK,MACLX,SAAUb,KAEX,kBAAC,IAAD,CACC0B,QAAQ,UAAUC,OAAK,EACvBC,QAjH+B,WAClC,GAAKzC,IAASI,GAASJ,IAASM,EAC/B,OAAOlB,EAAMsD,QAAQC,gBAAgB,CACpCxB,MAAO3B,EAAE,mBACToD,QAASpD,EAAE,oCACXqD,MAAO,UACPC,SAAU,OAGN1C,GAAUE,GACflB,EAAMsD,QAAQC,gBAAgB,CAC7BxB,MAAO3B,EAAE,mBACToD,QAASpD,EAAE,qCAAsC,CAAEuD,IAAK/C,IACxD6C,MAAO,UACPC,SAAU,OAGZ,IAAME,EAAS,kBAAC,IAAD,CACd3E,KAAMA,EAAMkB,aAAcA,EAC1BS,KAAMA,EAAMM,KAAMA,EAAMF,MAAOA,EAC/BI,KAAMA,EAAME,UAAWA,EAAWE,MAAOA,GAAOV,QAASA,IAE1Dd,EAAM6D,UAAWC,IAAyC,CACzDlD,OAAMI,QAAOE,OAAMJ,UAASM,OAAME,YAAWE,SAAOrB,iBAErDH,EAAM+D,UAAWH,IAyFdI,UAAW9C,IAASF,GAEnBZ,EAAE,iBAURL,EAAckE,aAAe,CAC5B/D,YAAa,KACb2D,UAF4B,aAG5B1D,cAAc,GAeAJ,a,iCC/Lf,mEAuCemE,IA1BQ,SAAElE,GACxB,IAAMmE,EAAU,kBAAC,IAAD,CAASC,GAAG,4BAC3B,kBAAC,IAAD,KAAepE,EAAM+B,OACrB,kBAAC,IAAD,KAAiB/B,EAAMgC,UAExB,OACC,kBAAC,IAAD,CAAgBqC,QAAS,CAAC,QAAS,SAAUC,UAAU,OAAOC,WAAS,EAACC,QAASL,GAChF,kBAAC,IAAD,CACCtE,KAAK,KACLsD,QAAQ,oBACRsB,UAAU,mBAEV,yBAAKA,UAAU,uB,iCCzBnB,uCAuBeC,IAff,SAAwB1E,GACvB,IAAI2E,EAAO,iBAA6B,IAAf3E,EAAMiD,KAAa,YAAc,UAA/C,KAQX,OAPKjD,EAAMgD,MAAQ4B,KAAQ5E,EAAM+C,MAAQ8B,IACxCF,GAAO,kBAAe3E,EAAM+C,IAArB,gBAAgC/C,EAAMgD,KAClChD,EAAM+C,MAAQ8B,IACzBF,GAAO,6BAA0B3E,EAAM+C,KAC5B/C,EAAMgD,MAAQ4B,MACzBD,GAAO,8BAA2B3E,EAAMgD,MAElC2B,I,iCCjBR,oBAQ6BG,EACdC,MAAf,G,iTCaMC,G,OAAQC,IAAQ,sBAChBC,EAAMC,YAAa,gBA4BnBJ,E,kDACL,WAAa/E,EAAOoF,GAAW,IAAD,sBAC7B,cAAOpF,GADsB,2CAiDf,SAAEqF,GAChBL,EAAO,mCACP,IAAIM,EAAQD,EAAME,OAAOC,SAASF,MAC9B3C,EAAQ0C,EAAME,OAAO5C,MACzB,EAAK8C,SAAS,CACb9C,UACE,WACG,EAAK3C,MAAM2C,OACd2C,GAAmB,KAAV3C,GACA,MAAVA,GAA2B,MAAVA,GAA2B,OAAVA,GAElCA,EAAQ+C,WAAY/C,GACfhD,IAAOgD,KACXA,EAAQ,IAET,EAAK3C,MAAMsC,SAAUK,GAChB,EAAK3C,MAAM2F,MACfC,EAAOC,OAAOJ,SAAS,CACtB,CAAE,EAAKzF,MAAM2F,MAAQhD,KAGZ,EAAK3C,MAAM2F,MACtBC,EAAOC,OAAOJ,SAAS,CACtB,CAAE,EAAKzF,MAAM2F,MAAQhD,UAxEK,2CA8Ef,SAAE0C,GAAY,IAAD,EACA,EAAKrF,MAAxBgD,EADmB,EACnBA,IAAKD,EADc,EACdA,IAAKE,EADS,EACTA,KAClB+B,EAAO,sBACP,IAAIrC,EAAQ0C,EAAME,OAAO5C,MACzB,GAAKG,IAAUH,EAAO,KAAQ,CAC7BqC,EAAO,6BACP,IAAI3F,EAAOsD,EAAMmD,MAAO,KACL,KAAdzG,EAAM,IAA4B,KAAdA,EAAM,KAC9BsD,EAAQ+C,WAAYrG,EAAM,IAAOqG,WAAYrG,EAAM,KAGhDM,IAAOgD,GACXA,EAAQ,GAGE,KAAVA,GAA0B,MAAVA,GACN,MAAVA,GAA2B,OAAVA,IAEjBA,EAAQ+C,WAAY/C,IAEhBA,EAAQK,EACZL,EAAQK,EAECL,EAAQI,EACjBJ,EAAQI,EAGC,IAATE,GAA0B,KAAVN,GACN,MAAVA,GAA2B,MAAVA,GAA2B,OAAVA,IAElCA,GAAgBA,EAAQ,EAAK3C,MAAMiD,MAEpC,EAAKjD,MAAMsC,SAAUK,GACrB,EAAK3C,MAAM+F,OAAQpD,GACdA,IAAU,EAAKqD,MAAMrD,OACzB,EAAK8C,SAAS,CACb9C,UACE,WACG,EAAK3C,MAAM2F,MACfC,EAAOC,OAAOJ,SAAS,CACtB,CAAE,EAAKzF,MAAM2F,MAAQhD,UAnHzB,IAAMW,EAAU8B,EAHa,OAI7B,EAAKhB,GAAKpE,EAAMoE,IAAMc,EAAKlF,GAC3B,EAAKgG,MAAQ,CACZrD,MAAO3C,EAAM2C,QAAU3C,EAAM2F,MAAQrC,EAAQ0C,MAC5C1C,EAAQ0C,MAAOhG,EAAM2F,MACrB3F,EAAMoC,cACPuC,QAAS3E,EAAM2E,SAAWD,YAAe1E,GACzCiG,UAAWjG,GAViB,E,sDAqC9B,WAEC,GADAgF,EAAO,2BACFkB,KAAKlG,MAAM2F,KAAO,CACtB,IAAMQ,EAAYP,EAAOC,OAAOG,MAAOE,KAAKlG,MAAM2F,MAC7CQ,IAAcD,KAAKF,MAAMrD,OAASyD,sBAAUF,KAAKF,MAAMrD,QAC3DuD,KAAKT,SAAS,CACb9C,MAAOwD,O,oBAkFX,WAAU,IACHxD,EAAUuD,KAAKF,MAAfrD,MAIN,GAH0B,OAArBuD,KAAKlG,MAAM2C,QACfA,EAAQuD,KAAKlG,MAAM2C,QAEO,IAAtBuD,KAAKlG,MAAMqG,OAAkB,CACjC,IAAMC,EACL,0BAAM7B,UAAU,QAAQ9C,MAAK,aAAI4E,QAAS,OAAUL,KAAKlG,MAAM2B,QAC5DuE,KAAKlG,MAAMmC,OAAS,2BAAOqE,QAASN,KAAK9B,IAArB,IAA4B8B,KAAKlG,MAAMmC,OAAvC,QAA6D,KACnF,2BACCiC,GAAI8B,KAAK9B,GACTqC,KAAMP,KAAKlG,MAAM0G,YAAc,SAAW,OAC1CC,KAAK,QACLlC,UAAU,sBACVT,SAAUkC,KAAKlG,MAAMgE,SACrBrB,MAAOA,EACPM,KAAMiD,KAAKlG,MAAMiD,KACjBF,IAAKmD,KAAKlG,MAAM+C,IAChBC,IAAKkD,KAAKlG,MAAMgD,IAChBrB,MAAK,aACJiF,MAAO,OACPC,YAAa,MACbC,WAAY,OACTZ,KAAKlG,MAAM+G,YAEfzE,SAAU4D,KAAKc,aACfjB,OAAQG,KAAKe,aACbC,WAAYhB,KAAKlG,MAAMkH,WACvBC,UAAWjB,KAAKlG,MAAMmH,UACtBC,QAASlB,KAAKlG,MAAMoH,QACpBC,aAAa,QAEZnB,KAAKlG,MAAMsH,YACZ,kCAAQpB,KAAKlG,MAAMsH,YAAnB,KACA,gCAGH,OAAOpB,KAAKlG,MAAMgE,SACjBsC,EACA,kBAAC,IAAD,CAASlC,GAAG,8BAA8BE,UAAU,MAAMK,QAASuB,KAAKF,MAAMrB,SAC5E2B,GAGJ,IAAIA,EAAQ,2BACXlC,GAAI8B,KAAK9B,GACTqC,KAAMP,KAAKlG,MAAM0G,YAAc,SAAW,OAC1CC,KAAK,QACLlC,UAAU,sBACVT,SAAUkC,KAAKlG,MAAMgE,SACrBrB,MAAOA,EACPM,KAAMiD,KAAKlG,MAAMiD,KACjBF,IAAKmD,KAAKlG,MAAM+C,IAChBC,IAAKkD,KAAKlG,MAAMgD,IAChBrB,MAAK,aACJiF,MAAO,OACPE,WAAY,QACTZ,KAAKlG,MAAM+G,YAEfzE,SAAU4D,KAAKc,aACfjB,OAAQG,KAAKe,aACbC,WAAYhB,KAAKlG,MAAMkH,WACvBC,UAAWjB,KAAKlG,MAAMmH,UACtBC,QAASlB,KAAKlG,MAAMoH,QACpBC,aAAa,QAEd,OAAS,yBAAK5C,UAAU,QAAQ9C,MAAK,aACpC4F,aAAc,MACdC,UAAW,OACRtB,KAAKlG,MAAM2B,QAEZuE,KAAKlG,MAAMmC,OACZ,8BACC,2BAAOqE,QAASN,KAAK9B,IACnBqD,sBAAUvB,KAAKlG,MAAMmC,QACrB+D,KAAKlG,MAAMmC,OAAO,IAClB+D,KAAKlG,MAAMmC,QAGX+D,KAAKlG,MAAMsH,YACZ,kCAAQpB,KAAKlG,MAAMsH,aACnB,MAEQ,KAEX,kBAAC,IAAD,CACClD,GAAG,uBAAuBE,UAAW4B,KAAKlG,MAAM0H,iBAChD/C,QAASuB,KAAKF,MAAMrB,SACpB,0BAAMF,UAAU,qBAAsB6B,Q,uCAtMzC,SAAiCqB,EAAWC,GAC3C,IAAIC,EAAW,GACP5B,EAAc2B,EAAd3B,UAaR,OAZK0B,EAAUvF,eAAiB6D,EAAU7D,aACzCyF,EAASlF,MAAQgF,EAAUvF,aAElBuF,EAAUhC,OAASM,EAAUN,OACtCkC,EAASlF,MAAQiD,EAAOC,OAAOG,MAAO2B,EAAUhC,OAE5CgC,EAAU5E,MAAQkD,EAAUlD,KAAO4E,EAAU3E,MAAQiD,EAAUjD,IACnE6E,EAASlD,QAAUgD,EAAUhD,SAAWD,YAAeiD,GAE9CA,EAAUhD,SAAWgD,EAAUhD,UAAYiD,EAAUjD,UAC9DkD,EAASlD,QAAUgD,EAAUhD,SAExBmD,IAAeD,GAKd,MAJN7C,EAAO,mCACP6C,EAAS5B,UAAY0B,EACdE,O,GAjCgBE,KA6N1BhD,EAAYd,aAAe,CAC1B0B,KAAM,GACN3B,UAAU,EACV7B,OAAQ,KACRY,IAAK8B,IACL7B,IAAK4B,IACL3B,KAAM,EACNb,aAAc,EACd2D,OAR0B,aAS1BzD,SAT0B,aAU1B6E,UAV0B,aAW1BD,WAX0B,aAY1BE,QAZ0B,aAa1Bf,QAAQ,EACRK,aAAa,EACb/E,MAAO,GACPoF,WAAY,GACZpE,MAAO,KACPgC,QAAS,KACT+C,iBAAkB,QAGnB3C,EAAYiD,UAAY,CACvBrC,KAAMsC,IAAUC,OAChB9F,aAAc6F,IAAUE,OACxBnE,SAAUiE,IAAUG,KACpB/B,OAAQ4B,IAAUG,KAClBjG,OAAQ8F,IAAUI,UAAU,CAC3BJ,IAAUC,OACVD,IAAUK,OAEXtF,IAAKiF,IAAUE,OACfpF,IAAKkF,IAAUE,OACfzB,YAAauB,IAAUG,KACvBrC,OAAQkC,IAAUM,KAClBjG,SAAU2F,IAAUM,KACpBpB,UAAWc,IAAUM,KACrBrB,WAAYe,IAAUM,KACtBnB,QAASa,IAAUM,KACnBtF,KAAMgF,IAAUI,UAAU,CACzBJ,IAAUE,OACVF,IAAUC,SAEXvG,MAAOsG,IAAUO,OACjBzB,WAAYkB,IAAUO,OACtB7F,MAAOsF,IAAUE,OACjBxD,QAASsD,IAAUC,OACnBR,iBAAkBO,IAAUQ,MAAM,CAAE,MAAO,QAAS,SAAU,UAG/D1D,EAAY2D,YAAcC,IAKX5D,Q","file":"static/js/118.0a4023a3.chunk.js","sourcesContent":["// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isNull from '@stdlib/assert/is-null';\n\n\n// MAIN //\n\nfunction getBinaryVars( vars, data ) {\n\tconst out = [];\n\tfor ( let i = 0; i < vars.length; i++ ) {\n\t\tlet vals = data[ vars[ i ] ];\n\t\tif ( vals ) {\n\t\t\tconst encountered = new Set();\n\t\t\tfor ( let j = 0; j < vals.length; j++ ) {\n\t\t\t\tlet v = vals[ j ];\n\t\t\t\tif ( !isNull( v ) && !isnan( v ) && v !== '' ) {\n\t\t\t\t\tencountered.add( v );\n\t\t\t\t}\n\t\t\t\tif ( encountered.size > 2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( j === vals.length - 1 ) {\n\t\t\t\t\tout.push( vars[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getBinaryVars;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport unique from 'uniq';\nimport PropTest2 from '@isle-project/components/tests/proptest2';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport { DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\nimport getBinaryVars from './../get_binary_vars.js';\n\n\n// MAIN //\n\nconst PropTest2Menu = ( props ) => {\n\tconst { categorical, data, showDecision, t } = props;\n\n\tconst defaultVar1 = categorical[ 0 ];\n\tlet defaultCategories;\n\tif ( isArray( categorical ) && categorical.length > 0 ) {\n\t\tconst values = data[ defaultVar1 ];\n\t\tif ( values ) {\n\t\t\tdefaultCategories = extractCategoriesFromValues( values, defaultVar1 );\n\t\t} else {\n\t\t\tdefaultCategories = [];\n\t\t}\n\t} else {\n\t\tdefaultCategories = [];\n\t}\n\tconst [ categories, setCategories ] = useState( defaultCategories );\n\tconst [ var1, setVar1 ] = useState( defaultVar1 );\n\tconst [ success, setSuccess ] = useState( categories[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ var2, setVar2 ] = useState( null );\n\tconst [ diff, setDiff ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\n\tconst calculateTwoSamplePropTest = () => {\n\t\tif ( var1 === group || var1 === var2 ) {\n\t\t\treturn props.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('group-variable-must-be-different'),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tif ( !group && !var2 ) {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('select-grouping-or-second-variable', { var: var1 }),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <PropTest2\n\t\t\tdata={data} showDecision={showDecision}\n\t\t\tvar1={var1} var2={var2} group={group}\n\t\t\tdiff={diff} direction={direction} alpha={alpha} success={success}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST, {\n\t\t\tvar1, group, var2, success, diff, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst binary = getBinaryVars( categorical, data );\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Two-Sample Proportion Test')}\n\t\t\t\t<QuestionButton title={t('Two-Sample Proportion Test')} content={t('Two-Sample Proportion Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\t\t\tdefaultValue={categorical[ 0 ]}\n\t\t\t\t\t\t\toptions={categorical}\n\t\t\t\t\t\t\tonChange={( variable ) => {\n\t\t\t\t\t\t\t\tconst values = data[ variable ];\n\t\t\t\t\t\t\t\tconst newCategories = extractCategoriesFromValues( values, variable );\n\t\t\t\t\t\t\t\tunique( newCategories );\n\t\t\t\t\t\t\t\tsetVar1( variable );\n\t\t\t\t\t\t\t\tsetCategories( newCategories );\n\t\t\t\t\t\t\t\tsetSuccess( newCategories[ 0 ] );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('success')}\n\t\t\t\t\t\t\tdefaultValue={categories[ 0 ]}\n\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\tonChange={setSuccess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('groups')}\n\t\t\t\t\t\t\toptions={binary}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( value );\n\t\t\t\t\t\t\t\tsetVar2( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={2}><p>{t('or')}</p></Col>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('second-variable')}\n\t\t\t\t\t\t\toptions={categorical.filter( elem =>\n\t\t\t\t\t\t\t\tcontains( categories, elem )\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( null );\n\t\t\t\t\t\t\t\tsetVar2( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={t('difference-h0')}\n\t\t\t\t\tdefaultValue={diff}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={1}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setDiff}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t/>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\tmin={0.0}\n\t\t\t\t\tmax={1.0}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={calculateTwoSamplePropTest}\n\t\t\t\t\tdisabled={!var2 && !group}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nPropTest2Menu.defaultProps = {\n\tcategorical: null,\n\tlogAction() {},\n\tshowDecision: true\n};\n\nPropTest2Menu.propTypes = {\n\tcategorical: PropTypes.array,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default PropTest2Menu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}