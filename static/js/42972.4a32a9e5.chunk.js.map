{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/lasso_regression.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/slider/main.js","../node_modules/@isle-project/components/input/slider/index.js"],"names":["Dashboard","Loadable","LassoRegressionMenu","props","data","categorical","quantitative","t","logAction","onCreated","onGenerate","title","content","autoStart","y","x","lambda","intercept","output","onPredict","fitted","residuals","counter","newData","copy","newQuantitative","slice","name","contains","push","DATA_EXPLORER_LASSO_REGRESSION","legend","options","defaultValue","multi","unique","concat","closeMenuOnSelect","raw","min","max","step","rangeInputStyle","width","numberInputStyle","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","variant","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","onChange","updateValue","state","session","this","globalVal","input","type","handleChange","disabled","aria-label","tooltip","inline","tooltipPlacement","style","marginLeft","role","tabIndex","color","onClick","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","debug","logger","createTooltip","PINF","NINF","SliderInput","parseFloat","valid","validity","prevProps","precision","minLabel","maxLabel","roundn","rangeInput","handleInputChange","float","display","numberInput","onBlur","finishChange","marginTop","autoComplete","padding","opacity","Badge","show","hideTooltip"],"mappings":"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","file":"static/js/42972.4a32a9e5.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport unique from 'uniq';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport TeX from '@isle-project/components/tex';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SliderInput from '@isle-project/components/input/slider';\nimport Dashboard from '@isle-project/components/dashboard';\nimport LassoRegression from '@isle-project/components/models/lasso-regression';\nimport { DATA_EXPLORER_LASSO_REGRESSION } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst LassoRegressionMenu = ( props ) => {\n\tconst { data, categorical, quantitative, t, logAction, onCreated, onGenerate } = props;\n\tconst compute = ( y, x, lambda, intercept ) => {\n\t\tconst output = <LassoRegression\n\t\t\tx={x} y={y}\n\t\t\tlambda={lambda} intercept={intercept}\n\t\t\tdata={data}\n\t\t\tquantitative={quantitative}\n\t\t\tonPredict={( fitted, residuals, counter ) => {\n\t\t\t\tconst newData = copy( data, 1 );\n\t\t\t\tconst newQuantitative = quantitative.slice();\n\t\t\t\tlet name = 'pred_lasso' + counter;\n\t\t\t\tnewData[ name ] = fitted;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'resid_lasso' + counter;\n\t\t\t\tnewData[ name ] = residuals;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tonGenerate( newQuantitative, newData );\n\t\t\t}}\n\t\t/>;\n\t\tlogAction( DATA_EXPLORER_LASSO_REGRESSION, {\n\t\t\ty, x, intercept, lambda\n\t\t});\n\t\tonCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('LASSO')}\n\t\t\t\t<QuestionButton title={t('LASSO')} content={t('LASSO-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={compute}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\toptions={quantitative}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('predictors-x')} multi\n\t\t\t\toptions={unique( quantitative.concat( categorical ) )}\n\t\t\t\tdefaultValue={quantitative[ 1 ]}\n\t\t\t\tcloseMenuOnSelect={false}\n\t\t\t/>\n\t\t\t<SliderInput\n\t\t\t\tlegend={<span>L1 Penalty Term <TeX raw=\"\\lambda\" /></span>}\n\t\t\t\tdefaultValue={1e-3}\n\t\t\t\tmin={1e-12}\n\t\t\t\tmax={1}\n\t\t\t\tstep=\"any\"\n\t\t\t\trangeInputStyle={{ width: 260 }}\n\t\t\t\tnumberInputStyle={{ width: 120 }}\n\t\t\t/>\n\t\t\t<CheckboxInput\n\t\t\t\tlegend={t('include-intercept')}\n\t\t\t\tdefaultValue={true}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nLassoRegressionMenu.defaultProps = {\n\tlogAction() {}\n};\n\nLassoRegressionMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default LassoRegressionMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Badge from 'react-bootstrap/Badge';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// FUNCTIONS //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}:`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}:`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\treturn tooltip;\n}\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nclass SliderInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\ttooltip: createTooltip( props ),\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t} else if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = createTooltip( nextProps );\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tconst { max, min, step } = this.props;\n\t\tlet value = event.target.value;\n\t\tif ( value !== '' ) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if ( step === 1.0 && value !== '' ) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( valid && value !== '' ) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tconst { legend, disabled, inline, min, max, precision, step, minLabel, maxLabel } = this.props;\n\t\tif ( value !== '' ) {\n\t\t\troundn( value, ( -1.0 )*precision );\n\t\t}\n\t\tconst rangeInput = <input\n\t\t\ttype=\"range\"\n\t\t\tclassName=\"slider-range-input\"\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tstyle={{\n\t\t\t\twidth: '160px',\n\t\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t\t...this.props.rangeInputStyle\n\t\t\t}}\n\t\t/>;\n\t\tconst numberInput = <input\n\t\t\ttype=\"number\"\n\t\t\tname=\"input\"\n\t\t\tclassName=\"slider-number-input\"\n\t\t\tdisabled={disabled}\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tstyle={{\n\t\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t\t...this.props.numberInputStyle\n\t\t\t}}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\n\t\tif ( inline ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"input\" style={{\n\t\t\t\t\tpadding: '5px',\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tooltip\n\t\t\t\tid=\"sliderTooltip\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tshow={!this.props.hideTooltip}\n\t\t\t\ttooltip={disabled ? 'The slider input is disabled right now.' : this.state.tooltip}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\nSliderInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}