{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/corrtest.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["Dashboard","Loadable","CorrTestMenu","props","quantitative","t","title","content","label","autoStart","onGenerate","var1","var2","rho0","direction","alpha","data","showDecision","output","logAction","DATA_EXPLORER_TESTS_CORRTEST","onCreated","legend","defaultValue","options","raw","step","min","max","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","variant","className","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","context","event","valid","target","validity","value","setState","parseFloat","isnan","onChange","bind","global","lesson","contains","vals","split","onBlur","state","session","createTooltip","prevProps","this","globalVal","isNumber","inline","input","style","padding","htmlFor","type","numbersOnly","name","disabled","width","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","tooltipPlacement","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext"],"mappings":"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","file":"static/js/32153.741913ac.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport TeX from '@isle-project/components/tex';\nimport CorrTest from '@isle-project/components/tests/corrtest';\nimport { DATA_EXPLORER_TESTS_CORRTEST } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst CorrTestMenu = ( props ) => {\n\tconst calculateCorrTest = ( var1, var2, rho0, direction, alpha ) => {\n\t\tconst { data, showDecision } = props;\n\t\tconst output = <CorrTest data={data} var1={var1} var2={var2} rho0={rho0} direction={direction} alpha={alpha} showDecision={showDecision} />;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_CORRTEST, {\n\t\t\tvar1, var2, rho0, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst { quantitative, t } = props;\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={\n\t\t\t\t<span>\n\t\t\t\t\t{t('Correlation Test')}\n\t\t\t\t\t<QuestionButton title={t('Correlation Test')} content={t('Correlation Test-description')} />\n\t\t\t\t</span>\n\t\t\t}\n\t\t\tlabel={t('calculate')}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={calculateCorrTest}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('second-variable')}\n\t\t\t\tdefaultValue={quantitative[ 1 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<NumberInput\n\t\t\t\tlegend={<TeX raw=\"\\rho_0\" />}\n\t\t\t\tdefaultValue={0.0}\n\t\t\t\tstep=\"any\"\n\t\t\t\tmin={-1.0}\n\t\t\t\tmax={1.0}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('direction')}\n\t\t\t\tdefaultValue=\"two-sided\"\n\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t/>\n\t\t\t<NumberInput\n\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\tdefaultValue={0.05}\n\t\t\t\tmin={0.0}\n\t\t\t\tmax={1.0}\n\t\t\t\tstep=\"any\"\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nCorrTestMenu.propTypes = {\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\nCorrTestMenu.defaultProps = {\n\tlogAction() {},\n\tshowDecision: true\n};\n\n\n// EXPORTS //\n\nexport default CorrTestMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}