{"version":3,"sources":["../node_modules/uc.micro/categories/P/regex.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/token.js","../node_modules/punycode/punycode.js","../node_modules/@isle-project/utils/file-saver/index.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/uc.micro/index.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it/lib/common/utils.js"],"names":["module","exports","encode","decode","format","parse","Ruler","this","__rules__","__cache__","prototype","__find__","name","i","length","__compile__","self","chains","forEach","rule","enabled","alt","altName","indexOf","push","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","Array","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","root","nodeType","freeGlobal","global","window","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","String","fromCharCode","error","RangeError","array","mapDomain","string","parts","split","replace","join","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","input","out","basic","j","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","test","slice","toLowerCase","RE_AUTO_BOM","throwOutside","ex","setImmediate","autoBOM","blob","Blob","saveAs","view","navigator","userAgent","saveLink","document","createElementNS","canUseSaveLink","isSafari","HTMLElement","safari","isChromeIOS","setTimeout","proto","FileSaver","msSaveOrOpenBlob","noAutoBOM","abort","readyState","INIT","WRITING","DONE","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","getURL","URL","webkitURL","revoke","file","revokeObjectURL","remove","objectURL","force","dispatchAll","filesaver","eventTypes","event","concat","listener","call","dispatch","createObjectURL","node","href","download","MouseEvent","dispatchEvent","FileReader","reader","onloadend","url","open","location","readAsDataURL","fsError","saveFactory","Any","Cc","Cf","P","Z","open_tag","close_tag","HTML_TAG_RE","RegExp","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","ch","start","pos","src","scanDelims","jump","can_open","close","can_close","curr","tokens_meta","isStrong","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","mdurl","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","str","trim","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","isString","inline","core","renderer","linkify","assign","configure","set","presets","components","Object","keys","rules","ruler","rules2","ruler2","missed","filter","use","plugin","args","arguments","apply","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","exclude","keepEscaped","l","code","nextCode","cache","toString","toUpperCase","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","exec","substr","match","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","md","skipToken","unescapeAll","ok","lines","escapeHtml","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","arrayReplaceAt","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","c","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","isSpace","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","shift","parentType","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","min","markTightParagraphs","normalizeReference","_endLine","destEndPos","destEndLineNo","label","res","title","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","source","html","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","hasOwnProperty","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","obj","sources","key","_class","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","_hasOwnProperty","object","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","ucmicro","TypeError","unescapeMd","escaped","entity","replaceEntityPattern","newElements"],"mappings":"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","file":"static/js/17.06071f31.chunk.js","sourcesContent":["module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","/*\n* Adapted from:\n*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.3.8\n* 2018-03-22 14:03:47\n*\n* By Eli Grey, https://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*\n* @source http://purl.eligrey.com/github/FileSaver.js/blob/master/src/FileSaver.js\n*/\n\n// VARIABLES //\n\nconst RE_AUTO_BOM = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nconst ARBITRARY_REVOKE_TIMEOUT = 1000 * 40; // in ms\n\n\n// FUNCTIONS //\n\nfunction click(node) {\n\tconst event = new MouseEvent( 'click' );\n\tnode.dispatchEvent( event );\n}\n\nfunction throwOutside( ex ) {\n\tsetImmediate(function throwEx() {\n\t\tthrow ex;\n\t}, 0 );\n}\n\nfunction autoBOM( blob ) {\n\t// Prepend BOM for UTF-8 XML and text/* types (including HTML). Note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\tif ( RE_AUTO_BOM.test( blob.type ) ) {\n\t\treturn new Blob([ String.fromCharCode( 0xFEFF ), blob ], {\n\t\t\ttype: blob.type\n\t\t});\n\t}\n\treturn blob;\n}\n\nfunction dispatch( filesaver, eventTypes, event ) {\n\teventTypes = [].concat( eventTypes );\n\tlet i = eventTypes.length;\n\twhile ( i-- ) {\n\t\tconst listener = filesaver[ 'on' + eventTypes[i] ];\n\t\tif ( typeof listener === 'function' ) {\n\t\t\ttry {\n\t\t\t\tlistener.call( filesaver, event || filesaver );\n\t\t\t} catch ( ex ) {\n\t\t\t\tthrowOutside( ex );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// MAIN //\n\nfunction saveFactory( view ) {\n\tif (\n\t\ttypeof view === 'undefined' ||\n\t\ttypeof navigator !== 'undefined' &&\n\t\t/MSIE [1-9]\\./.test( navigator.userAgent )\n\t) {\n\t\treturn;\n\t}\n\tconst doc = view.document;\n\t// only get URL when necessary in case Blob.js hasn't overridden it yet\n\tfunction getURL() {\n\t\treturn view.URL || view.webkitURL || view;\n\t}\n\tfunction revoke( file ) {\n\t\tfunction revoker() {\n\t\t\tif ( typeof file === 'string' ) { // file is an object URL\n\t\t\t\tgetURL().revokeObjectURL(file);\n\t\t\t} else { // file is a File\n\t\t\t\tfile.remove();\n\t\t\t}\n\t\t}\n\t\tsetTimeout( revoker, ARBITRARY_REVOKE_TIMEOUT );\n\t}\n\n\tconst saveLink = doc.createElementNS( 'http://www.w3.org/1999/xhtml', 'a' );\n\tconst canUseSaveLink = 'download' in saveLink;\n\tconst isSafari = /constructor/i.test( view.HTMLElement ) || view.safari;\n\tconst isChromeIOS =/CriOS\\/[\\d]+/.test( navigator.userAgent );\n\tconst setImmediate = view.setImmediate || view.setTimeout;\n\tconst forceSavableType = 'application/octet-stream';\n\n\tfunction FileSaver(blob, name, noAutoBOM ) {\n\t\tif ( !noAutoBOM ) {\n\t\t\tblob = autoBOM(blob);\n\t\t}\n\t\t// First try a download, then web filesystem, then object URLs:\n\t\tconst self = this;\n\t\tconst type = blob.type;\n\t\tconst force = type === forceSavableType;\n\t\tlet objectURL;\n\t\tfunction dispatchAll() {\n\t\t\tdispatch( self, 'writestart progress write writeend'.split(' ') );\n\t\t}\n\t\t// On any filesystem errors, revert to saving with object URLs:\n\t\tfunction fsError() {\n\t\t\tif ((isChromeIOS || (force && isSafari)) && view.FileReader) {\n\t\t\t\t// Safari doesn't allow downloading of blob URLs:\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onloadend = function onLoadEnd() {\n\t\t\t\t\tlet url = isChromeIOS ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\tconst popup = view.open(url, '_blank');\n\t\t\t\t\tif ( !popup ) {\n\t\t\t\t\t\tview.location.href = url;\n\t\t\t\t\t}\n\t\t\t\t\turl = void 0; // release reference before dispatching\n\t\t\t\t\tself.readyState = self.DONE;\n\t\t\t\t\tdispatchAll();\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\tself.readyState = self.INIT;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Don't create more object URLs than needed:\n\t\t\tif ( !objectURL ) {\n\t\t\t\tobjectURL = getURL().createObjectURL( blob );\n\t\t\t}\n\t\t\tif ( force ) {\n\t\t\t\tview.location.href = objectURL;\n\t\t\t} else {\n\t\t\t\tconst opened = view.open( objectURL, '_blank' );\n\t\t\t\tif ( !opened ) {\n\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\tview.location.href = objectURL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.readyState = self.DONE;\n\t\t\tdispatchAll();\n\t\t\trevoke( objectURL );\n\t\t}\n\t\tself.readyState = self.INIT;\n\n\t\tif ( canUseSaveLink ) {\n\t\t\tobjectURL = getURL().createObjectURL( blob );\n\t\t\tsetImmediate(function save() {\n\t\t\t\tsaveLink.href = objectURL;\n\t\t\t\tsaveLink.download = name;\n\t\t\t\tclick( saveLink );\n\t\t\t\tdispatchAll();\n\t\t\t\trevoke( objectURL );\n\t\t\t\tself.readyState = self.DONE;\n\t\t\t}, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tfsError();\n\t}\n\tconst proto = FileSaver.prototype;\n\tfunction saveAs( blob, name, noAutoBOM ) {\n\t\treturn new FileSaver( blob, name || blob.name || 'download', noAutoBOM );\n\t}\n\n\t// IE 10+ (native saveAs)\n\tif ( typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob ) {\n\t\treturn function saveAs( blob, name, noAutoBOM ) {\n\t\t\tname = name || blob.name || 'download';\n\t\t\tif ( !noAutoBOM ) {\n\t\t\t\tblob = autoBOM( blob );\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tproto.abort = function abort(){};\n\tproto.readyState = proto.INIT = 0;\n\tproto.WRITING = 1;\n\tproto.DONE = 2;\n\n\tproto.error = null;\n\tproto.onwritestart = null;\n\tproto.onprogress = null;\n\tproto.onwrite = null;\n\tproto.onabort = null;\n\tproto.onerror = null;\n\tproto.onwriteend = null;\n\n\treturn saveAs;\n}\n\nconst saveAs = saveFactory(\n\ttypeof self !== 'undefined' && self ||\n\ttypeof window !== 'undefined' && window ||\n\tthis.content // eslint-disable-line @babel/no-invalid-this\n);\n\n\n// EXPORTS //\n\nexport default saveAs;\n","'use strict';\n\nmodule.exports = require('./lib/');","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/lib/maps/entities.json');","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      jump: i / 2,\n      // for `~~` 1 marker = 2 characters\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump: i,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1 && delimiters[i - 1].marker === startDelim.marker;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3C\n        /* < */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 32) {\n          return result;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n        return result;\n      } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// Normalize input string\n'use strict'; // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        break;\n      }\n    } // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","// GFM table, https://github.github.com/gfm/#tables-extension-\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch !== 0x7C\n  /* | */\n  && ch !== 0x2D\n  /* - */\n  && ch !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map = [startLine, state.line];\n  return true;\n};","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos++) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  } // set offset past spaces and \">\"\n\n\n  initial = offset = state.sCount[startLine] + 1; // skip one optional space after '>'\n\n  if (state.src.charCodeAt(pos) === 0x20\n  /* space */\n  ) {\n      // ' >   test '\n      //     ^ -- position start of line here:\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n      spaceAfterMarker = true;\n    } else if (state.src.charCodeAt(pos) === 0x09\n  /* tab */\n  ) {\n      spaceAfterMarker = true;\n\n      if ((state.bsCount[startLine] + offset) % 4 === 3) {\n        // '  >\\t  test '\n        //       ^ -- position start of line here (tab has width===1)\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n      } else {\n        // ' >\\t  test '\n        //    ^ -- position start of line here + shift bsCount slightly\n        //         to make extra space appear\n        adjustTab = true;\n      }\n    } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [state.bMarks[startLine]];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [state.bsCount[startLine]];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n  lastLineEmpty = pos >= max;\n  oldSCount = [state.sCount[startLine]];\n  state.sCount[startLine] = offset - initial;\n  oldTShift = [state.tShift[startLine]];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            offset++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n  if (silent) {\n    return true;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [startLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [startLine, 0]; // change current state, then restore it after parser subcall\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine\n/*, endLine*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]];\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], ['text_collapse', require('./rules_inline/text_collapse')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      token,\n      matchStart,\n      matchEnd,\n      openerLength,\n      closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax; // scan marker length\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos; // Nothing found in the cache, scan until the end of the line (or until marker is found)\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1; // scan marker length\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    } // Some different length found, put it in cache as upper limit of where closer can be found\n\n\n    state.backticks[closerLength] = matchStart;\n  } // Scanned through the end, didn't find anything\n\n\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        } // [link](  <href>  \"title\"  )\n        //                ^^ skipping these spaces\n\n\n        start = pos;\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        } // [link](  <href>  \"title\"  )\n        //                  ^^^^^^^ parsing link title\n\n\n        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos; // [link](  <href>  \"title\"  )\n          //                         ^^ skipping these spaces\n\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n\n            if (!isSpace(code) && code !== 0x0A) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.md.inline.tokenize(state);\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) {\n      return false;\n    }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) {\n            state.pending += entities[match[1]];\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) {\n    state.pending += '&';\n  }\n\n  state.pos++;\n  return true;\n};","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx]; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    openerIdx = closerIdx - closer.jump - 1; // avoid crash if `closer.jump` is pointing outside of the array, see #742\n\n    if (openerIdx < -1) openerIdx = -1;\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? delimiters[openerIdx - 1].jump + 1 : 0;\n          closer.jump = closerIdx - openerIdx + lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.jump = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\nmodule.exports = function text_collapse(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = []; // backtick length => last seen position\n\n  this.backticks = {};\n  this.backticksScanned = false;\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]).|' + (opts && opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + '\\\\,(?!' + re.src_ZCc + ').|' + // allow `,,,` in paths\n  '\\\\!+(?!' + re.src_ZCc + '|[!]).|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]).' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'text_collapse']\n    }\n  }\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'text_collapse']\n    }\n  }\n};","// Utilities\n//\n'use strict';\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;"],"sourceRoot":""}