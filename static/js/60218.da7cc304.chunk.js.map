{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/get_binary_vars.js","../node_modules/@isle-project/components/data-explorer/menu/meantest2.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["vars","data","out","i","length","vals","encountered","Set","j","v","isNull","isnan","add","size","push","MeanTest2Menu","props","quantitative","categorical","t","useState","x","setX","group","setGroup","y","setY","diff","setDiff","direction","setDirection","alpha","setAlpha","type","setType","xstdev","setXstdev","ystdev","setYstdev","binary","getBinaryVars","style","fontSize","as","title","content","legend","defaultValue","options","onChange","md","clearable","step","min","tooltipPlacement","raw","max","menuPlacement","variant","block","onClick","showDecision","session","addNotification","message","var","level","position","output","logAction","DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN","onCreated","disabled","defaultProps","popover","id","trigger","placement","rootClose","overlay","className","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","context","event","valid","target","validity","value","setState","parseFloat","bind","global","lesson","contains","split","onBlur","state","createTooltip","prevProps","this","globalVal","isNumber","inline","input","padding","htmlFor","numbersOnly","name","width","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext"],"mappings":"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","file":"static/js/60218.da7cc304.chunk.js","sourcesContent":["// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isNull from '@stdlib/assert/is-null';\n\n\n// MAIN //\n\nfunction getBinaryVars( vars, data ) {\n\tconst out = [];\n\tfor ( let i = 0; i < vars.length; i++ ) {\n\t\tlet vals = data[ vars[ i ] ];\n\t\tif ( vals ) {\n\t\t\tconst encountered = new Set();\n\t\t\tfor ( let j = 0; j < vals.length; j++ ) {\n\t\t\t\tlet v = vals[ j ];\n\t\t\t\tif ( !isNull( v ) && !isnan( v ) && v !== '' ) {\n\t\t\t\t\tencountered.add( v );\n\t\t\t\t}\n\t\t\t\tif ( encountered.size > 2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( j === vals.length - 1 ) {\n\t\t\t\t\tout.push( vars[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getBinaryVars;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport MeanTest2 from '@isle-project/components/tests/meantest2';\nimport { DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\nimport getBinaryVars from './../get_binary_vars.js';\n\n\n// MAIN //\n\nconst MeanTest2Menu = ( props ) => {\n\tconst { quantitative, categorical, data, t } = props;\n\tconst [ x, setX ] = useState( null );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ y, setY ] = useState( null );\n\tconst [ diff, setDiff ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\tconst [ type, setType ] = useState( 'T Test' );\n\tconst [ xstdev, setXstdev ] = useState( null );\n\tconst [ ystdev, setYstdev ] = useState( null );\n\n\tconst calculateTwoSampleZTest = () => {\n\t\tconst { data, showDecision } = props;\n\t\tif ( !y && !group ) {\n\t\t\treturn props.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('select-grouping-or-second-variable', { var: x }),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <MeanTest2\n\t\t\tx={x} group={group} y={y} diff={diff} direction={direction}\n\t\t\talpha={alpha} type={type} xstdev={xstdev} ystdev={ystdev}\n\t\t\tdata={data} showDecision={showDecision}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN, {\n\t\t\tx, group, y, diff, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\n\tconst binary = getBinaryVars( categorical, data );\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Two-Sample Mean Test')}\n\t\t\t\t<QuestionButton title={t('Two-Sample Mean Test')} content={t('Two-Sample Mean Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('type-of-test')}\n\t\t\t\t\tdefaultValue={type}\n\t\t\t\t\toptions={[ 'T Test', 'Z Test' ]}\n\t\t\t\t\tonChange={setType}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={x}\n\t\t\t\t\toptions={quantitative}\n\t\t\t\t\tonChange={setX}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('groups')}\n\t\t\t\t\t\t\toptions={binary}\n\t\t\t\t\t\t\tdefaultValue={group}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( group ) => {\n\t\t\t\t\t\t\t\tsetY( null );\n\t\t\t\t\t\t\t\tsetGroup( group );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t<p>{t('or')}</p>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('second-variable')}\n\t\t\t\t\t\t\toptions={quantitative}\n\t\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( y ) => {\n\t\t\t\t\t\t\t\tsetY( y );\n\t\t\t\t\t\t\t\tsetGroup( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ type === 'Z Test' ?\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('1st-stdev')}\n\t\t\t\t\t\t\t\tdefaultValue={xstdev || 1}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tonChange={setXstdev}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('2nd-stdev')}\n\t\t\t\t\t\t\t\tdefaultValue={ystdev || 1}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tonChange={setYstdev}\n\t\t\t\t\t\t\t\ttooltipPlacement=\"top\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>: null\n\t\t\t\t}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={t('difference-h0')}\n\t\t\t\t\t\t\tdefaultValue={diff}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setDiff}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\t\t\tmin={0.0}\n\t\t\t\t\t\t\tmax={1.0}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t\t\t\ttooltipPlacement=\"bottom\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={calculateTwoSampleZTest}\n\t\t\t\t\tdisabled={(!group && !y) || !x}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nMeanTest2Menu.defaultProps = {\n\tcategorical: null,\n\tlogAction() {},\n\tshowDecision: true\n};\n\nMeanTest2Menu.propTypes = {\n\tcategorical: PropTypes.array,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default MeanTest2Menu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}