{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/heatmap.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/slider/index.js","../node_modules/@isle-project/components/input/slider/main.js"],"names":["HeatMapMenu","props","variables","groupingVariables","defaultX","defaultY","t","useState","x","setX","y","setY","group","setGroup","overlayPoints","setOverlayPoints","commonXAxis","setCommonXAxis","commonYAxis","setCommonYAxis","alternateColor","setAlternateColor","regressionMethod","setRegressionMethod","smoothSpan","setSmoothSpan","Header","as","title","content","Body","legend","defaultValue","options","onChange","clearable","menuPlacement","disabled","style","opacity","float","multi","value","isArray","contains","min","max","step","variant","block","onClick","plotId","randomstring","action","output","id","data","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_HEATMAP","onSelected","DATA_EXPLORER_HEATMAP","onCreated","defaultProps","QuestionButton","popover","trigger","placement","rootClose","overlay","size","className","CheckboxInput","context","newValue","setState","bind","global","lesson","event","target","checked","updateValue","state","this","globalVal","input","type","handleChange","aria-label","tooltip","inline","tooltipPlacement","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","SliderInput","debug","logger","createTooltip","PINF","NINF","parseFloat","valid","validity","prevProps","precision","minLabel","maxLabel","roundn","rangeInput","handleInputChange","width","display","rangeInputStyle","numberInput","name","onBlur","finishChange","marginTop","numberInputStyle","autoComplete","padding","show","hideTooltip","number"],"mappings":"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","file":"static/js/108.e1acf5df.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport HeatMap from '@isle-project/components/plots/heatmap';\nimport { DATA_EXPLORER_SHARE_HEATMAP, DATA_EXPLORER_HEATMAP } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst HeatMapMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ x, setX ] = useState( defaultX || variables[ 0 ] );\n\tconst [ y, setY ] = useState( defaultY || variables[ 1 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ overlayPoints, setOverlayPoints ] = useState( false );\n\tconst [ commonXAxis, setCommonXAxis ] = useState( false );\n\tconst [ commonYAxis, setCommonYAxis ] = useState( false );\n\tconst [ alternateColor, setAlternateColor ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState( [] );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\n\tconst generateHeatmap = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tx, y, overlayPoints, regressionMethod, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HEATMAP, action );\n\t\t};\n\t\tconst output = <HeatMap id={plotId} data={props.data} x={x} y={y} group={group}\n\t\t\toverlayPoints={overlayPoints} commonXAxis={commonXAxis} commonYAxis={commonYAxis}\n\t\t\talternateColor={alternateColor} regressionMethod={regressionMethod}\n\t\t\tsmoothSpan={smoothSpan} action={action} onShare={onShare} onSelected={props.onSelected} />;\n\t\tprops.logAction( DATA_EXPLORER_HEATMAP, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Heat Map')}\n\t\t\t\t<QuestionButton title={t('Heat Map')} content={t('Heat Map-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><SelectInput\n\t\t\t\t\t\tlegend={t('x-axis-variable')}\n\t\t\t\t\t\tdefaultValue={x}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setX}\n\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col><SelectInput\n\t\t\t\t\t\tlegend={t('y-axis-variable')}\n\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setY}\n\t\t\t\t\t/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-x-axis')}\n\t\t\t\t\t\t\tdefaultValue={commonXAxis}\n\t\t\t\t\t\t\tonChange={setCommonXAxis}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.0,\n\t\t\t\t\t\t\t\tfloat: 'left'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-y-axis')}\n\t\t\t\t\t\t\tdefaultValue={commonYAxis}\n\t\t\t\t\t\t\tonChange={setCommonYAxis}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.0,\n\t\t\t\t\t\t\t\tfloat: 'left'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('overlay-observations')}\n\t\t\t\t\t\t\tdefaultValue={overlayPoints}\n\t\t\t\t\t\t\tonChange={setOverlayPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('alternate-color-scheme')}\n\t\t\t\t\t\t\tdefaultValue={alternateColor}\n\t\t\t\t\t\t\tonChange={setAlternateColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-regression-line')}\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains(regressionMethod, 'smooth')}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={smoothSpan}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Button variant=\"primary\" block onClick={generateHeatmap}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHeatMapMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {}\n};\n\nHeatMapMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tonSelected: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HeatMapMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Badge from 'react-bootstrap/Badge';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// FUNCTIONS //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}:`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}:`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\treturn tooltip;\n}\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nclass SliderInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\ttooltip: createTooltip( props ),\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t} else if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = createTooltip( nextProps );\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tconst { max, min, step } = this.props;\n\t\tlet value = event.target.value;\n\t\tif ( value !== '' ) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if ( step === 1.0 && value !== '' ) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( valid && value !== '' ) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tconst { legend, disabled, inline, min, max, precision, step, minLabel, maxLabel } = this.props;\n\t\tif ( value !== '' ) {\n\t\t\troundn( value, ( -1.0 )*precision );\n\t\t}\n\t\tconst rangeInput = <input\n\t\t\ttype=\"range\"\n\t\t\tclassName=\"slider-range-input\"\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tstyle={{\n\t\t\t\twidth: '160px',\n\t\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t\t...this.props.rangeInputStyle\n\t\t\t}}\n\t\t/>;\n\t\tconst numberInput = <input\n\t\t\ttype=\"number\"\n\t\t\tname=\"input\"\n\t\t\tclassName=\"slider-number-input\"\n\t\t\tdisabled={disabled}\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tstyle={{\n\t\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t\t...this.props.numberInputStyle\n\t\t\t}}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\n\t\tif ( inline ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"input\" style={{\n\t\t\t\t\tpadding: '5px',\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tooltip\n\t\t\t\tid=\"sliderTooltip\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tshow={!this.props.hideTooltip}\n\t\t\t\ttooltip={disabled ? 'The slider input is disabled right now.' : this.state.tooltip}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\nSliderInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}