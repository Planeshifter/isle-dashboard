{"version":3,"sources":["../node_modules/@stdlib/assert/is-array-like/lib/index.js","../node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/assert/is-null/lib/index.js","../node_modules/@stdlib/assert/is-null/lib/main.js","../node_modules/@stdlib/assert/is-object-array/lib/index.js","../node_modules/@stdlib/assert/is-object-array/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/index.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/arraylikefcn.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/index.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../node_modules/@stdlib/string/replace/lib/index.js","../node_modules/@stdlib/string/replace/lib/replace.js","../node_modules/@stdlib/string/trim/lib/index.js","../node_modules/@stdlib/string/trim/lib/trim.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/index.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/react-select/creatable/dist/react-select.esm.js"],"names":["isArrayLike","module","exports","isInteger","MAX_LENGTH","value","length","isNull","isObjectArray","arrayfun","exec","RegExp","prototype","isRegExp","hasToStringTag","nativeClass","test","FLG","call","err","predicate","TypeError","len","i","arraylikefcn","replace","rescape","isFunction","isString","str","search","newval","trim","RE","RE_CHARS","s","substring","SelectComponent","_class","_temp","compareOption","inputValue","arguments","undefined","option","accessors","candidate","String","toLowerCase","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","formatCreateLabel","concat","isValidNewOption","selectValue","selectOptions","some","getNewOptionData","label","__isNew__","g","defaultProps","allowCreateWhileLoading","createOptionPosition","SelectCreatable","S","_Component","Creatable","_super","_","props","_this","this","select","onChange","newValue","actionMeta","_this$props","isMulti","onCreateOption","name","action","newOption","state","valueArray","Array","isArray","newOptionData","newActionMeta","options","key","focus","blur","_this2","ref","_ref","isLoading","Component","m"],"mappings":"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","file":"static/js/1009.1d6b0ee5.chunk.js","sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is array-like.\n*\n* @module @stdlib/assert/is-array-like\n*\n* @example\n* var isArrayLike = require( '@stdlib/assert/is-array-like' );\n*\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* bool = isArrayLike( { 'length': 10 } );\n* // returns true\n*\n* bool = isArrayLike( 'beep' );\n* // returns true\n*/\n// MODULES //\n\nvar isArrayLike = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isArrayLike;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isInteger = require('@stdlib/math/base/assert/is-integer');\n\nvar MAX_LENGTH = require('@stdlib/constants/array/max-array-length'); // MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\n\n\nfunction isArrayLike(value) {\n  return value !== void 0 && value !== null && typeof value !== 'function' && typeof value.length === 'number' && isInteger(value.length) && value.length >= 0 && value.length <= MAX_LENGTH;\n} // EXPORTS //\n\n\nmodule.exports = isArrayLike;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is `null`.\n*\n* @module @stdlib/assert/is-null\n*\n* @example\n* var isNull = require( '@stdlib/assert/is-null' );\n*\n* var value = null;\n*\n* var bool = isNull( value );\n* // returns true\n*/\n// MODULES //\n\nvar isNull = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isNull;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Tests if a value is `null`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is null\n*\n* @example\n* var bool = isNull( null );\n* // returns true\n*\n* bool = isNull( true );\n* // returns false\n*/\n\nfunction isNull(value) {\n  return value === null;\n} // EXPORTS //\n\n\nmodule.exports = isNull;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is an array-like object containing only objects.\n*\n* @module @stdlib/assert/is-object-array\n*\n* @example\n* var isObjectArray = require( '@stdlib/assert/is-object-array' );\n*\n* var bool = isObjectArray( [ {}, new Number(3.0) ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\n// MODULES //\n\nvar isObjectArray = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isObjectArray;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar arrayfun = require('./../../tools/array-like-function');\n\nvar isObject = require('./../../is-object'); // MAIN //\n\n/**\n* Test if a value is an array-like object containing only objects.\n*\n* @name isObjectArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only objects\n*\n* @example\n* var bool = isObjectArray( [ {}, new Number(3.0) ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\n\n\nvar isObjectArray = arrayfun(isObject); // EXPORTS //\n\nmodule.exports = isObjectArray;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n// EXPORTS //\n\nmodule.exports = exec;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a regular expression.\n*\n* @module @stdlib/assert/is-regexp\n*\n* @example\n* var isRegExp = require( '@stdlib/assert/is-regexp' );\n*\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* bool = isRegExp( {} );\n* // returns false\n*/\n// MODULES //\n\nvar isRegExp = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isRegExp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar hasToStringTag = require('./../../has-tostringtag-support');\n\nvar nativeClass = require('@stdlib/utils/native-class');\n\nvar test = require('./try2exec.js'); // VARIABLES //\n\n\nvar FLG = hasToStringTag(); // MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\n\nfunction isRegExp(value) {\n  if (typeof value === 'object') {\n    if (value instanceof RegExp) {\n      return true;\n    }\n\n    if (FLG) {\n      return test(value);\n    }\n\n    return nativeClass(value) === '[object RegExp]';\n  }\n\n  return false;\n} // EXPORTS //\n\n\nmodule.exports = isRegExp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar exec = require('./exec.js'); // MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\n\n\nfunction test(value) {\n  try {\n    exec.call(value);\n    return true;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n} // EXPORTS //\n\n\nmodule.exports = test;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isArrayLike = require('./../../../is-array-like'); // MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n\nfunction arraylikefcn(predicate) {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('invalid argument. Must provide a function. Value: `' + predicate + '`.');\n  }\n\n  return every;\n  /**\n  * Tests if every element in an array-like object passes a test condition.\n  *\n  * @private\n  * @param {*} value - value to test\n  * @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n  */\n\n  function every(value) {\n    var len;\n    var i;\n\n    if (!isArrayLike(value)) {\n      return false;\n    }\n\n    len = value.length;\n\n    if (len === 0) {\n      return false;\n    }\n\n    for (i = 0; i < len; i++) {\n      if (predicate(value[i]) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n} // EXPORTS //\n\n\nmodule.exports = arraylikefcn;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return a function which tests if every element in an array-like object passes a test condition.\n*\n* @module @stdlib/assert/tools/array-like-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arraylikefcn = require( '@stdlib/assert/tools/array-like-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n// MODULES //\n\nvar arraylikefcn = require('./arraylikefcn.js'); // EXPORTS //\n\n\nmodule.exports = arraylikefcn;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\n\nvar MAX_ARRAY_LENGTH = 4294967295 >>> 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/replace\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* str = 'Hello World';\n* out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n// MODULES //\n\nvar replace = require('./replace.js'); // EXPORTS //\n\n\nmodule.exports = replace;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar rescape = require('@stdlib/utils/escape-regexp-string');\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive;\n\nvar isRegExp = require('@stdlib/assert/is-regexp'); // MAIN //\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string primitive\n* @throws {TypeError} second argument argument must be a string primitive or regular expression\n* @throws {TypeError} third argument must be a string primitive or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\n\n\nfunction replace(str, search, newval) {\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. First argument must be a string primitive. Value: `' + str + '`.');\n  }\n\n  if (isString(search)) {\n    search = rescape(search);\n    search = new RegExp(search, 'g');\n  } else if (!isRegExp(search)) {\n    throw new TypeError('invalid argument. Second argument must be a string primitive or regular expression. Value: `' + search + '`.');\n  }\n\n  if (!isString(newval) && !isFunction(newval)) {\n    throw new TypeError('invalid argument. Third argument must be a string primitive or replacement function. Value: `' + newval + '`.');\n  }\n\n  return str.replace(search, newval);\n} // EXPORTS //\n\n\nmodule.exports = replace;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/trim\n*\n* @example\n* var trim = require( '@stdlib/string/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n// MODULES //\n\nvar trim = require('./trim.js'); // EXPORTS //\n\n\nmodule.exports = trim;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive;\n\nvar replace = require('./../../replace'); // VARIABLES //\n// The following regular expression should suffice to polyfill (most?) all environments.\n\n\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*([\\S\\s]*?)[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*$/; // MAIN //\n\n/**\n* Trim whitespace characters from beginning and end of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\nfunction trim(str) {\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. Must provide a string primitive. Value: `' + str + '`.');\n  }\n\n  return replace(str, RE, '$1');\n} // EXPORTS //\n\n\nmodule.exports = trim;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Escape a regular expression string or pattern.\n*\n* @module @stdlib/utils/escape-regexp-string\n*\n* @example\n* var rescape = require( '@stdlib/utils/escape-regexp-string' );\n*\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n// MODULES //\n\nvar rescape = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = rescape;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive; // VARIABLES //\n\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string primitive\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n\nfunction rescape(str) {\n  var len;\n  var s;\n  var i;\n\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. Must provide a regular expression string. Value: `' + str + '`.');\n  } // Check if the string starts with a forward slash...\n\n\n  if (str[0] === '/') {\n    // Find the last forward slash...\n    len = str.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (str[i] === '/') {\n        break;\n      }\n    }\n  } // If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\n\n  if (i === void 0 || i <= 0) {\n    return str.replace(RE_CHARS, '\\\\$&');\n  } // We need to de-construct the string...\n\n\n  s = str.substring(1, i); // Only escape the characters between the `/`:\n\n  s = s.replace(RE_CHARS, '\\\\$&'); // Reassemble:\n\n  str = str[0] + s + str.substring(i);\n  return str;\n} // EXPORTS //\n\n\nmodule.exports = rescape;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport { a as _objectSpread2, _ as _createSuper, E as cleanValue } from '../../dist/index-4bd03571.esm.js';\nimport React, { Component } from 'react';\nimport { S as Select, g as getOptionValue, a as getOptionLabel } from '../../dist/Select-dbb12e54.esm.js';\nimport { m as manageState } from '../../dist/stateManager-845a3300.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport 'react-input-autosize';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport 'memoize-one';\n\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\n\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  },\n  getOptionValue: getOptionValue,\n  getOptionLabel: getOptionLabel\n};\n\nvar defaultProps = _objectSpread2({\n  allowCreateWhileLoading: false,\n  createOptionPosition: 'last'\n}, builtins);\n\nvar makeCreatableSelect = function makeCreatableSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    _inherits(Creatable, _Component);\n\n    var _super = _createSuper(Creatable);\n\n    function Creatable(props) {\n      var _this;\n\n      _classCallCheck(this, Creatable);\n\n      _this = _super.call(this, props);\n      _this.select = void 0;\n\n      _this.onChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            getNewOptionData = _this$props.getNewOptionData,\n            inputValue = _this$props.inputValue,\n            isMulti = _this$props.isMulti,\n            onChange = _this$props.onChange,\n            onCreateOption = _this$props.onCreateOption,\n            value = _this$props.value,\n            name = _this$props.name;\n\n        if (actionMeta.action !== 'select-option') {\n          return onChange(newValue, actionMeta);\n        }\n\n        var newOption = _this.state.newOption;\n        var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n\n        if (valueArray[valueArray.length - 1] === newOption) {\n          if (onCreateOption) onCreateOption(inputValue);else {\n            var newOptionData = getNewOptionData(inputValue, inputValue);\n            var newActionMeta = {\n              action: 'create-option',\n              name: name,\n              option: newOptionData\n            };\n\n            if (isMulti) {\n              onChange([].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newActionMeta);\n            } else {\n              onChange(newOptionData, newActionMeta);\n            }\n          }\n          return;\n        }\n\n        onChange(newValue, actionMeta);\n      };\n\n      var options = props.options || [];\n      _this.state = {\n        newOption: undefined,\n        options: options\n      };\n      return _this;\n    }\n\n    _createClass(Creatable, [{\n      key: \"focus\",\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var options = this.state.options;\n        return /*#__PURE__*/React.createElement(SelectComponent, _extends({}, this.props, {\n          ref: function ref(_ref) {\n            _this2.select = _ref;\n          },\n          options: options,\n          onChange: this.onChange\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        var allowCreateWhileLoading = props.allowCreateWhileLoading,\n            createOptionPosition = props.createOptionPosition,\n            formatCreateLabel = props.formatCreateLabel,\n            getNewOptionData = props.getNewOptionData,\n            inputValue = props.inputValue,\n            isLoading = props.isLoading,\n            isValidNewOption = props.isValidNewOption,\n            value = props.value,\n            getOptionValue = props.getOptionValue,\n            getOptionLabel = props.getOptionLabel;\n        var options = props.options || [];\n        var newOption = state.newOption;\n\n        if (isValidNewOption(inputValue, cleanValue(value), options, {\n          getOptionValue: getOptionValue,\n          getOptionLabel: getOptionLabel\n        })) {\n          newOption = getNewOptionData(inputValue, formatCreateLabel(inputValue));\n        } else {\n          newOption = undefined;\n        }\n\n        return {\n          newOption: newOption,\n          options: (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(options)) : [].concat(_toConsumableArray(options), [newOption]) : options\n        };\n      }\n    }]);\n\n    return Creatable;\n  }(Component), _class.defaultProps = defaultProps, _temp;\n}; // TODO: do this in package entrypoint\n\n\nvar SelectCreatable = makeCreatableSelect(Select);\nvar Creatable = manageState(SelectCreatable);\nexport default Creatable;\nexport { defaultProps, makeCreatableSelect };"],"sourceRoot":""}