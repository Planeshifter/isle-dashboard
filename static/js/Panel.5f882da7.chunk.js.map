{"version":3,"sources":["../node_modules/@isle-project/components/internal/fullscreen-button/index.js","../node_modules/@isle-project/components/panel/main.js"],"names":["Loadable","Header","children","hideTooltip","onHide","minimizable","minimized","onMinimize","t","useTranslation","Card","as","className","tooltip","onClick","Wrapper","header","footer","fullscreen","style","bodyStyle","footerStyle","rest","tReady","useState","setMinimized","height","body","owner","display","defaultProps"],"mappings":"+PAYA,GALyBA,E,SAAAA,IAAU,kBAAM,mCCMnCC,EAAS,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,SAAUC,EAA8D,EAA9DA,YAAaC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAChEC,GAAMC,OAAgB,SAAtBD,EACR,OAAMN,EAGG,gBAACQ,EAAA,SAAD,CAAaC,GAAG,MACxB,wBAAMC,UAAU,gBAAiBV,GAC/BE,EACD,gBAAC,IAAD,CAASS,QAASV,GAAeK,EAAG,UACnC,0BAAQI,UAAU,gCAAgCE,QAASV,KAC/C,KAEZC,EAAc,gBAAC,IAAD,CAASQ,QAAqBL,EAAZF,EAAe,WAAkB,aAAc,0BAChFM,UAAS,4BAAuBN,EAAY,yBAA2B,0BACvEQ,QAASP,KACK,MAZR,MAiCHQ,EAAU,SAAC,GAA2I,IAAzIH,EAAwI,EAAxIA,UAAWI,EAA6H,EAA7HA,OAAQC,EAAqH,EAArHA,OAAQZ,EAA6G,EAA7GA,YAAaa,EAAgG,EAAhGA,WAAYf,EAAoF,EAApFA,YAAaC,EAAuE,EAAvEA,OAAQe,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,YAAanB,EAAgC,EAAhCA,SAAqBoB,GAAW,EAAtBC,QAAsB,mJAC1J,GAAoCC,eAAU,GAA9C,eAAQlB,EAAR,KAAmBmB,EAAnB,KACA,OAAS,gBAACf,EAAA,GAAD,UACJY,EADI,CAERV,UAAS,gBAAWA,GACpBO,OAAK,QACJO,OAAQpB,EAAY,YAAS,GAC1Ba,KAGFD,EAAa,gBAAC,EAAD,CACdF,OAAQA,EACRW,KAAMzB,EACNe,OAAQA,EACRL,UAAWA,EACXgB,OAAK,IACD,KACL,gBAAC3B,EAAD,CACCI,YAAaA,EAAaC,UAAWA,EACrCC,WAAY,WACXkB,GAAenB,IAEhBH,YAAaA,EAAaC,OAAQA,GAEjCY,GAEF,gBAACN,EAAA,OAAD,CAAWS,OAAK,kBACZC,GADY,IAEfS,QAASvB,EAAY,OAAS,QAE7BJ,GAEDe,EAAS,gBAACP,EAAA,SAAD,CACTS,OAAK,kBACDE,GADC,IAEJQ,QAASvB,EAAY,OAAS,QAE9BW,GAAwB,OA0B5BF,EAAQe,aAAe,CACtBlB,UAAW,GACXI,OAAQ,KACRC,OAAQ,KACRZ,aAAa,EACba,YAAY,EACZf,YAAa,KACbiB,UAAW,GACXC,YAAa,GACbF,MAAO,GACPf,OAAQ,MAMT","file":"static/js/Panel.5f882da7.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst FullscreenButton = Loadable( () => import( /* webpackChunkName: \"FullscreenButton\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default FullscreenButton;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Card from 'react-bootstrap/Card';\nimport Tooltip from '@isle-project/components/tooltip';\nimport FullscreenButton from '@isle-project/components/internal/fullscreen-button';\nimport './panel.css';\n\n\n// FUNCTIONS //\n\nconst Header = ({ children, hideTooltip, onHide, minimizable, minimized, onMinimize }) => {\n\tconst { t } = useTranslation( 'Panel' );\n\tif ( !children ) {\n\t\treturn null;\n\t}\n\treturn ( <Card.Header as=\"h3\">\n\t\t<span className=\"unselectable\" >{children}</span>\n\t\t{ onHide ?\n\t\t\t<Tooltip tooltip={hideTooltip || t( 'close' )} >\n\t\t\t\t<button className=\"panel-hide-button fa fa-times\" onClick={onHide} />\n\t\t\t</Tooltip> : null\n\t\t}\n\t\t{ minimizable ? <Tooltip tooltip={minimized ? t( 'maximize' ) : t( 'minimize' )}><button\n\t\t\tclassName={`panel-hide-button ${minimized ? 'far fa-window-maximize' : 'fas fa-window-minimize'}`}\n\t\t\tonClick={onMinimize}\n\t\t/></Tooltip> : null }\n\t</Card.Header> );\n};\n\n\n// MAIN //\n\n/**\n* Card component.\n*\n* @property {string} className - CSS class name\n* @property {(string|node)} header - panel heading (h3)\n* @property {(string|node)} footer - panel footer\n* @property {boolean} minimizable - whether the panel can be minimized\n* @property {boolean} fullscreen - whether the panel can be made fullscreen (only for instructors)\n* @property {string} hideTooltip - tooltip displayed over the hide button\n* @property {Function} onHide - callback invoked when the close button is clicked\n* @property {Object} style - CSS inline styles for container\n* @property {Object} bodyStyle - CSS inline styles for body\n* @property {Object} footerStyle - CSS inline styles for footer\n*/\nconst Wrapper = ({ className, header, footer, minimizable, fullscreen, hideTooltip, onHide, style, bodyStyle, footerStyle, children, tReady, ...rest }) => {\n\tconst [ minimized, setMinimized ] = useState( false );\n\treturn ( <Card\n\t\t{...rest}\n\t\tclassName={`panel ${className}`}\n\t\tstyle={{\n\t\t\theight: minimized ? '53px' : void 0,\n\t\t\t...style\n\t\t}}\n\t>\n\t\t{ fullscreen ? <FullscreenButton\n\t\t\theader={header}\n\t\t\tbody={children}\n\t\t\tfooter={footer}\n\t\t\tclassName={className}\n\t\t\towner\n\t\t/> : null }\n\t\t<Header\n\t\t\tminimizable={minimizable} minimized={minimized}\n\t\t\tonMinimize={() => {\n\t\t\t\tsetMinimized( !minimized );\n\t\t\t}}\n\t\t\thideTooltip={hideTooltip} onHide={onHide}\n\t\t>\n\t\t\t{header}\n\t\t</Header>\n\t\t<Card.Body style={{\n\t\t\t...bodyStyle,\n\t\t\tdisplay: minimized ? 'none' : null\n\t\t}} >\n\t\t\t{children}\n\t\t</Card.Body>\n\t\t{footer ? <Card.Footer\n\t\t\tstyle={{\n\t\t\t\t...footerStyle,\n\t\t\t\tdisplay: minimized ? 'none' : null\n\t\t\t}}\n\t\t>{footer}</Card.Footer> : null}\n\t</Card> );\n};\n\n\n// PROPERTIES //\n\nWrapper.propTypes = {\n\tclassName: PropTypes.string,\n\theader: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tfooter: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tminimizable: PropTypes.bool,\n\tfullscreen: PropTypes.bool,\n\thideTooltip: PropTypes.string,\n\tbodyStyle: PropTypes.object,\n\tfooterStyle: PropTypes.object,\n\tstyle: PropTypes.object,\n\tonHide: PropTypes.func\n};\n\nWrapper.defaultProps = {\n\tclassName: '',\n\theader: null,\n\tfooter: null,\n\tminimizable: false,\n\tfullscreen: false,\n\thideTooltip: null,\n\tbodyStyle: {},\n\tfooterStyle: {},\n\tstyle: {},\n\tonHide: null\n};\n\n\n// EXPORTS //\n\nexport default Wrapper;\n"],"sourceRoot":""}