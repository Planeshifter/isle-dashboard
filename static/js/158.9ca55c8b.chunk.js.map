{"version":3,"sources":["components/login-tfa/index.js","containers/visible-login-tfa/index.js"],"names":["LoginTFA","props","event","a","preventDefault","form","email","user","requestTFA","password","token","state","handleLoginTFA","res","data","message","id","fetchCredentials","getEnrollableCohorts","t","this","className","Card","Header","Title","as","style","textAlign","Body","Form","FormGroup","controlId","Row","Col","sm","FormLabel","FormControl","type","placeholder","onChange","setState","target","value","Button","variant","onClick","handleSubmit","disabled","length","Component","withTranslation","VisibleLoginTFA","connect","dispatch","handleLoginTFAInjector","fetchCredentialsInjector","getEnrollableCohortsInjector"],"mappings":"yRAmCMA,G,yDACL,WAAaC,GAAS,IAAD,6BACpB,cAAOA,GADa,iFAQN,WAAQC,GAAR,2BAAAC,EAAA,6DACdD,EAAME,iBACAC,EAAO,CACZC,MAAO,EAAKL,MAAMM,KAAKC,WAAWF,MAClCG,SAAU,EAAKR,MAAMM,KAAKC,WAAWC,SACrCC,MAAO,EAAKC,MAAMD,OALL,SAOI,EAAKT,MAAMW,eAAgBP,GAP/B,YAORQ,EAPQ,8BASkBA,EAAIC,KAA3BC,EATK,EASLA,QAASL,EATJ,EASIA,MAAOM,EATX,EASWA,GACP,OAAZD,EAVQ,kCAWO,EAAKd,MAAMgB,iBAAiB,CAAEP,QAAOM,OAX5C,SAWNT,EAXM,SAaX,EAAKN,MAAMiB,qBAAsBX,GAbtB,4CARM,uDAGpB,EAAKI,MAAQ,CACZD,MAAO,IAJY,E,0CA2BrB,WAAU,IAAD,OACAS,EAAMC,KAAKnB,MAAXkB,EACR,OACC,kBAAC,WAAD,KACC,yBAAKE,UAAU,SAAQ,kBAACC,EAAA,EAAD,CAAMD,UAAU,eACtC,kBAACC,EAAA,EAAKC,OAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,KAAKC,MAAO,CAAEC,UAAW,WAAxC,QACM,8CAGP,kBAACL,EAAA,EAAKM,KAAN,KACC,2BACET,EAAE,oBAEJ,kBAACU,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,UAAU,cACpB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACR,kBAACC,EAAA,EAAD,KAAYhB,EAAE,WAEf,kBAACc,EAAA,EAAD,CAAKC,GAAI,GACR,kBAACE,EAAA,EAAD,CACCC,KAAK,OACLC,YAAanB,EAAE,eACfoB,SAAU,SAAErC,GACX,EAAKsC,SAAS,CACb9B,MAAOR,EAAMuC,OAAOC,cAO1B,kBAACC,EAAA,EAAD,CACCtB,UAAU,WACVuB,QAAQ,UACRC,QAASzB,KAAK0B,aACdT,KAAK,SACLU,SAAsC,IAA5B3B,KAAKT,MAAMD,MAAMsC,QAC1B7B,EAAE,0B,GAnEY8B,cAwFRC,cAAiB,CAAE,QAAS,UAA5BA,CAA0ClD,G,wBC7EzD,IAAMmD,EAAkBC,aAjBxB,SAA0BzC,GACzB,MAAO,CACNJ,KAAMI,EAAMJ,SAId,SAA6B8C,GAC5B,MAAO,CACNzC,eAAgB0C,YAAwBD,GACxCpC,iBAAkBsC,YAA0BF,GAC5CnC,qBAAsBsC,YAA8BH,MAO9BD,CAAgDpD,GAKzDmD,a","file":"static/js/158.9ca55c8b.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Form from 'react-bootstrap/Form';\nimport 'css/login.css';\n\n\n// MAIN //\n\nclass LoginTFA extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\ttoken: ''\n\t\t};\n\t}\n\n\thandleSubmit = async ( event ) => {\n\t\tevent.preventDefault();\n\t\tconst form = {\n\t\t\temail: this.props.user.requestTFA.email,\n\t\t\tpassword: this.props.user.requestTFA.password,\n\t\t\ttoken: this.state.token\n\t\t};\n\t\tconst res = await this.props.handleLoginTFA( form );\n\t\tif ( res ) {\n\t\t\tconst { message, token, id } = res.data;\n\t\t\tif ( message === 'ok' ) {\n\t\t\t\tconst user = await this.props.fetchCredentials({ token, id });\n\t\t\t\tif ( user ) {\n\t\t\t\t\tthis.props.getEnrollableCohorts( user );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"login\"><Card className=\"login-panel\">\n\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t<Card.Title as=\"h1\" style={{ textAlign: 'center' }} >\n\t\t\t\t\t\t\tISLE <small>Dashboard</small>\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{t('enter-tfa-token')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<FormGroup controlId=\"form-token\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel>{t('token')}</FormLabel>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('enter-token')}\n\t\t\t\t\t\t\t\t\t\t\tonChange={( event ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoken: event.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"centered\"\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={this.state.token.length !== 6}\n\t\t\t\t\t\t\t>{t('common:login')}</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card></div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nLoginTFA.propTypes = {\n\tfetchCredentials: PropTypes.func.isRequired,\n\thandleLoginTFA: PropTypes.func.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( [ 'login', 'common' ] )( LoginTFA );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LoginTFA from 'components/login-tfa';\nimport { fetchCredentialsInjector } from 'actions/authentication';\nimport { getEnrollableCohortsInjector } from 'actions/cohort';\nimport { handleLoginTFAInjector } from 'actions/user';\n\n\n// FUNCTIONS //\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tuser: state.user\n\t};\n}\n\nfunction mapDispatchToProps( dispatch ) {\n\treturn {\n\t\thandleLoginTFA: handleLoginTFAInjector( dispatch ),\n\t\tfetchCredentials: fetchCredentialsInjector( dispatch ),\n\t\tgetEnrollableCohorts: getEnrollableCohortsInjector( dispatch )\n\t};\n}\n\n\n// MAIN //\n\nconst VisibleLoginTFA = connect( mapStateToProps, mapDispatchToProps )( LoginTFA );\n\n\n// EXPORTS //\n\nexport default VisibleLoginTFA;\n"],"sourceRoot":""}