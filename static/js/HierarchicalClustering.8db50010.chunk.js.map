{"version":3,"sources":["../node_modules/@isle-project/utils/svg/index.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/dendrogram.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/blackbox.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/fullscreen_button.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/queue.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/index.js","../node_modules/@isle-project/components/models/hierarchical-clustering/main.js","../node_modules/@isle-project/utils/blob-to-base64/index.js","../node_modules/@stdlib/assert/is-array-array/lib/index.js","../node_modules/@stdlib/assert/is-array-array/lib/main.js","../node_modules/compute-argmax/lib/index.js","../node_modules/compute-chebyshev-distance/lib/index.js","../node_modules/compute-cosine-distance/lib/index.js","../node_modules/compute-cosine-similarity/lib/index.js","../node_modules/compute-dot/lib/index.js","../node_modules/compute-euclidean-distance/lib/index.js","../node_modules/compute-hamming/lib/index.js","../node_modules/compute-l2norm/lib/index.js","../node_modules/compute-manhattan-distance/lib/index.js","../node_modules/validate.io-function/lib/index.js","../node_modules/validate.io-string/lib/index.js"],"names":["getSVGString","svgNode","setAttribute","cssText","element","styleElement","document","createElement","innerHTML","isArray","children","refNode","insertBefore","appendCSS","parentElement","selectorTextArr","push","id","classList","c","length","contains","nodes","getElementsByTagName","i","classes","extractedCSSText","styleSheets","s","cssRules","e","name","r","selectorText","getCSSStyles","svgString","XMLSerializer","serializeToString","replace","D3render","anchor","props","state","svg","d3","current","width","height","data","margin","innerWidth","innerHeight","fontSize","root","dx","dy","size","tree","x0","Infinity","x1","each","d","x","forEach","collapse","_children","value","cutoff","xTranslate","yTranslate","g","append","attr","selectAll","links","join","target","y","source","node","descendants","reverse","on","text","filter","clone","lower","draw","React","this","Component","component","transform","ref","setState","fullscreen","t","Fragment","placement","tooltip","Button","variant","onClick","toggleFullscreen","style","position","top","right","className","Modal","show","onHide","dialogClassName","closeButton","as","window","overflow","dendrogram","PriorityQueue","values","TypeError","_initial","_queue","insert","prototype","elem","pos","search","splice","max","delMax","pop","delete","reset","low","high","mid","sim","isEqual","input","efficientHAC","linkage","distance","N","P","I","C","m","n","ret","Array","create2dArray","A","maxSim","q","k","k1","argmax","map","k2","index","opts","distanceFun","linkageFun","isArrayArray","arguments","isObject","hasOwnProp","some","min","chebyshev","cosine","hamming","manhattan","euclidean","getClusters","isInteger","clusters","nClusters","j","merged","concat","isNull","getClusterAssignments","out","cluster","i18n","getTree","fitModel","variables","matrix","row","result","hclust","_","HierarchicalClustering","onResult","overflowX","draggable","onDragStart","ev","dataTransfer","setData","plotValue","plotKey","html2clipboard","round","callback","imgsrc","btoa","unescape","encodeURIComponent","canvas","context","getContext","image","Image","onload","clearRect","drawImage","toBlob","blob","filesize","src","svgString2Image","dataBlob","blobToBase64","then","str","randomstring","Alert","nextProps","prevState","newState","defaultProps","withTranslation","withPropCheck","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","module","exports","arrayfun","arr","val","len","idx","isFunction","clbk","v","Error","similarity","dot","l2norm","partial","fn","a","b","sum","abs","Math","sqrt","isString","aType","bType","Object","toString","call"],"mappings":";oUA4EA,SAASA,EAAcC,GACtB,IAAMA,EACL,MAAO,GAERA,EAAQC,aAAc,QAAS,gCAC/BD,EAAQC,aAAc,QAAS,sBApEhC,SAAoBC,EAASC,GAC5B,IAAMC,EAAeC,SAASC,cAAe,SAG7C,GAFAF,EAAaH,aAAc,OAAQ,YACnCG,EAAaG,UAAYL,EACpBM,IAASL,EAAQM,UAAa,CAClC,IAAMC,EAAUP,EAAQM,SAAU,IAAO,KACzCN,EAAQQ,aAAcP,EAAcM,IAgErCE,CA5DD,SAAuBC,GACtB,IAAMC,EAAkB,GAExB,GADAA,EAAgBC,KAAM,IAAIF,EAAcG,IACnCR,IAASK,EAAcI,WAC3B,IAAM,IAAIC,EAAI,EAAGA,EAAIL,EAAcI,UAAUE,OAAQD,IAC9CE,IAAUN,EAAiB,IAAID,EAAcI,UAAUC,KAC5DJ,EAAgBC,KAAM,IAAIF,EAAcI,UAAUC,IAKrD,IADA,IAAMG,EAAQR,EAAcS,qBAAsB,KACxCC,EAAI,EAAGA,EAAIF,EAAMF,OAAQI,IAAM,CACxC,IAAMP,EAAKK,EAAME,GAAGP,GACdI,IAAUN,EAAiB,IAAIE,IACpCF,EAAgBC,KAAM,IAAIC,GAE3B,IAAMQ,EAAUH,EAAME,GAAGN,UACzB,GAAKT,IAASgB,GACb,IAAM,IAAIN,EAAI,EAAGA,EAAIM,EAAQL,OAAQD,IAC9BE,IAAUN,EAAiB,IAAIU,EAAQN,KAC5CJ,EAAgBC,KAAM,IAAIS,EAAQN,IAOtC,IADA,IAAIO,EAAmB,GACbF,EAAI,EAAGA,EAAIlB,SAASqB,YAAYP,OAAQI,IAAM,CACvD,IAAMI,EAAItB,SAASqB,YAAYH,GAC/B,IACC,IAAMI,EAAEC,SACP,SAEA,MAAQC,GACR,GAAgB,kBAAXA,EAAEC,KACN,MAAMD,EAEP,SAIF,IADA,IAAMD,EAAWD,EAAEC,SACTG,EAAI,EAAGA,EAAIH,EAAST,OAAQY,IAChCX,IAAUN,EAAiBc,EAASG,GAAGC,gBAC3CP,GAAoBG,EAASG,GAAG7B,SAInC,OAAOuB,EAYcQ,CAAcjC,GACVA,GAEzB,IACIkC,GADe,IAAIC,eACIC,kBAAmBpC,GAG9C,OADAkC,GADAA,EAAYA,EAAUG,QAAQ,kBAAmB,iBAC3BA,QAAQ,cAAe,c,2DC3E9C,ICNmCC,ED0HnC,GC1HmCA,EDMJ,SAAEC,EAAQC,EAAOC,GAE/C,IAAMC,EAAMC,KAAWJ,EAAOK,SAEtBC,EAAwBL,EAAxBK,MAAOC,EAAiBN,EAAjBM,OAAQC,EAASP,EAATO,KAGjBC,EAAgB,GAAhBA,EAA0B,GAC1BC,EAAaJ,EAAQG,EAD2B,EAEhDE,EAAcJ,EAASE,EAFe,EAGtCG,EAAWX,EAAMW,UAAY,IAOnC,SAAcJ,GAEb,IAUMK,EAVO,SAAAL,GACZ,IAAMK,EAAOT,MACDI,GAIZ,OAFAK,EAAKC,GAAK,GACVD,EAAKE,GAAKL,GAAcG,EAAKN,OAAS,GAC/BH,QAAaY,KAAK,CAACL,EAAaD,EAdf,MAcjBN,CAAiES,GAI5DI,CAAKT,GAGdU,EAAKC,IACLC,GAAMF,EACVL,EAAKQ,MAAK,SAAAC,GACLA,EAAEC,EAAIH,IAAIA,EAAKE,EAAEC,GACjBD,EAAEC,EAAIL,IAAIA,EAAKI,EAAEC,MAatBV,EAAK3C,SAASsD,SATd,SAASC,EAAUH,GACbA,EAAEpD,WACNoD,EAAEI,UAAYJ,EAAEpD,SAChBoD,EAAEI,UAAUF,QAASC,GAChBH,EAAEK,MAAQ1B,EAAM2B,SACpBN,EAAEpD,SAAW,UAMhB,IACM2D,EAAahB,EAAKE,GADO,EACuBN,EAChDqB,EAAajB,EAAKC,GAAKI,EAAKT,EAC5BsB,EAAI5B,EACR6B,OAAO,KACPC,KAAK,cAAe,cACpBA,KAAK,YAAarB,GAClBqB,KACA,YALQ,oBAMKJ,EANL,YAMmBC,EANnB,MASVC,EAAEC,OAAO,KACPC,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,GACrBC,UAAU,QACV1B,KAAKK,EAAKsB,SACVC,KAAK,QACLH,KACA,KACA,SAAAX,GAAC,2BACEA,EAAEe,OAAOC,EADX,YACgBhB,EAAEe,OAAOd,EADzB,sBAEED,EAAEiB,OAAOD,EAAIzB,EAAKE,GAAK,EAFzB,YAE8BO,EAAEe,OAAOd,EAFvC,sBAGED,EAAEiB,OAAOD,EAAIzB,EAAKE,GAAK,EAHzB,YAG8BO,EAAEiB,OAAOhB,EAHvC,sBAIED,EAAEiB,OAAOD,EAJX,YAIgBhB,EAAEiB,OAAOhB,EAJzB,eAQH,IAAMiB,EAAOT,EACXC,OAAO,KACPC,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,MAASrB,GAC9BsB,UAAU,KACV1B,KAAKK,EAAK4B,cAAcC,WACxBN,KAAM,KACNH,KAAM,aAAa,SAAAX,GAAC,0BAAiBA,EAAEgB,EAAnB,YAAwBhB,EAAEC,EAA1B,QAEtBiB,EACER,OAAO,UACPC,KAAK,QAAQ,SAAAX,GAAC,OAAKA,EAAEpD,SAAW,OAAS,UACzC+D,KAAK,IAAgB,IAAXrB,GACV+B,GAAI,SAAS,SAAArB,GACbA,EAAEpD,SAAWoD,EAAEpD,SAAW,KAAOoD,EAAEI,aAGrCc,EACER,OAAO,QACPC,KAAK,KAAM,SACXA,KAAK,KAAK,SAAAX,GAAC,OAAKA,EAAEpD,UAAY,EAAI,KAClC+D,KAAK,YAAarB,GAClBgC,MAAK,SAAAtB,GAAC,OAAIA,EAAEd,KAAKjB,QACjBsD,QAAO,SAAAvB,GAAC,OAAIA,EAAEpD,YACd+D,KAAK,cAAe,OACpBa,OAAM,GACNC,QACAd,KAAK,SAAU,SA9FlBe,CAAKxC,ICnBL,2NAQUyC,eARV,kDACC,WACClD,EAASmD,KAAKlD,OAAQkD,KAAKjD,MAAOiD,KAAKhD,SAFzC,gCAIC,WACCH,EAASmD,KAAKlD,OAAQkD,KAAKjD,MAAOiD,KAAKhD,SALzC,oBAUC,WACC,MAAiBgD,KAAKjD,MAAdsB,EAAR,EAAQA,EAAGe,EAAX,EAAWA,EACLa,EAAYD,KAAKjD,MAAMmD,WAAa,IAE1C,OACC,gBAACD,EAAD,CACCE,UAAS,oBAAe9B,EAAf,aAAqBe,EAArB,KACTgB,IAAKJ,KAAKlD,aAjBd,GAA8BmD,c,iCC2E/B,E,0CAvEC,aAAe,IAAD,wBACb,gBADa,sCAQK,WAClB,EAAKI,SAAS,CACbC,YAAa,EAAKtD,MAAMsD,gBAPzB,EAAKtD,MAAQ,CACZsD,YAAY,GAJA,E,qCAcd,WACC,IAAQC,EAAMP,KAAKjD,MAAXwD,EACR,OACC,gBAAC,EAAAC,SAAD,KACC,gBAAC,IAAD,CACCjF,GAAG,qBACHkF,UAAU,SACVC,QAASH,EAAE,sBAEX,gBAACI,EAAA,EAAD,CACCC,QAAQ,iBACR9C,KAAK,KACL+C,QAASb,KAAKc,iBACdC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,MAAO,SAEnD,uBAAKC,UAAU,4BAGjB,gBAACC,EAAA,EAAD,CACCC,KAAMrB,KAAKhD,MAAMsD,WACjBgB,OAAQtB,KAAKc,iBACbS,gBAAgB,cAEhB,gBAACH,EAAA,SAAD,CAAcI,aAAW,GACxB,gBAACJ,EAAA,QAAD,CAAaK,GAAG,MACdlB,EAAE,6BAGL,gBAACa,EAAA,OAAD,CACCL,MAAO,CACN1D,OAAQ,IAAOqE,OAAOjE,YACtBL,MAAO,OACPM,SAAU,GACViE,SAAU,WAGV3B,KAAKjD,MAAM6E,YAEb,gBAACR,EAAA,SAAD,KACC,gBAACT,EAAA,EAAD,CAAQE,QAASb,KAAKc,kBAAmBP,EAAE,iB,GAtDlBN,a,iRCE/B,SAAS4B,GAAeC,GACvB,IAAM/G,IAAS+G,GACd,MAAM,IAAIC,UAAW,uDAAyDD,EAAS,MAExF,IAAME,EAAWF,EAEjB,GADA9B,KAAKiC,OAAS,GACTD,EACJ,IAAM,IAAIlG,EAAI,EAAGA,EAAIkG,EAAStG,OAAQI,IACrCkE,KAAKkC,OAAQF,EAAUlG,IAQ1B+F,GAAcM,UAAUD,OAAS,SAAiBE,GACjD,IAAMC,EAAMrC,KAAKsC,OAAQF,GACzBpC,KAAKiC,OAAOM,OAAQF,EAAK,EAAGD,IAM7BP,GAAcM,UAAUK,IAAM,WAC7B,OAAOxC,KAAKiC,OAAQjC,KAAKiC,OAAOvG,OAAS,IAM1CmG,GAAcM,UAAUM,OAAS,WAChC,OAAOzC,KAAKiC,OAAOS,OAMpBb,GAAcM,UAAUQ,OAAS,SAAcP,GAC9C,IAAM,IAAItG,EAAI,EAAGA,EAAIkE,KAAKlC,OAAQhC,IACjC,GAAKkE,KAAKiC,OAAOnG,KAAOsG,EAAO,CAC9BpC,KAAKiC,OAAOM,OAAOzG,EAAG,GACtB,QAQH+F,GAAcM,UAAUS,MAAQ,WAC/B5C,KAAKiC,OAAS,IAMfJ,GAAcM,UAAUrE,KAAO,WAC9B,OAAOkC,KAAKiC,OAAOvG,QAMpBmG,GAAcM,UAAUG,OAAS,SAAiBnD,GAGjD,IAFA,IAAI0D,EAAM,EACNC,EAAO9C,KAAKiC,OAAOvG,OACfmH,IAAQC,GAAO,CAEtB,IAAMC,EAAMD,EAAOD,IAAQ,EACpB7C,KAAKiC,OAAOc,GAAKC,IAAM7D,EAAO6D,KAAS,EAC7CH,EAAME,EAAM,EAEZD,EAAOC,EAGT,OAAOF,GAMR,UCrDA,SAASI,GAASC,GACjB,OAAO,SAAE9E,GACR,OAAOA,IAAM8E,GAYR,SAASC,GAAc7F,EAAM8F,EAASC,GAM5C,IALA,IAAMjF,EAAId,EACJgG,EAAIlF,EAAE1C,OACN6H,EAAI,GACJC,EAAI,GACJC,EAjCP,SAAwBC,EAAGC,GAE1B,IADA,IAAMC,EAAM,GACF9H,EAAI,EAAGA,EAAI4H,EAAG5H,IACvB8H,EAAK9H,GAAM,IAAI+H,MAAOF,GAEvB,OAAOC,EA4BGE,CAAeR,EAAGA,GAClBK,EAAI,EAAGA,EAAIL,EAAGK,IAAM,CAC7B,IAAM,IAAI7H,EAAI,EAAGA,EAAIwH,EAAGxH,IACvB2H,EAAEE,GAAG7H,GAAK,CACT,IAAO,GAAK,EAAIuH,EAAUjF,EAAEuF,GAAIvF,EAAEtC,KAClC,MAASA,GAGX0H,EAAEG,GAAK,EACPJ,EAAEI,GAAK,IAAI9B,GAAe4B,EAAEE,IAC5BJ,EAAEI,GAAGhB,OAAQc,EAAEE,GAAGA,IAGnB,IAAMI,EAAI,GAEV,SAASC,EAAQC,EAAGnI,GACnB,OAAgB,IAAT0H,EAAE1H,GAAWmI,EAAEzB,MAAMQ,IAAM,EAEnC,IAAM,IAAIkB,EAAI,EAAGA,EAAIZ,EAAI,EAAGY,IAAM,CACjC,IAAMC,EAAKC,IAAQb,EAAEc,IAAKL,IAAW,GAC/BM,EAAKf,EAAEY,GAAI3B,MAAM+B,MACvBR,EAAEzI,KAAM,CAAC6I,EAAIG,IACbd,EAAEc,GAAM,EACRf,EAAEY,GAAIvB,QACN,IAAM,IAAI9G,EAAI,EAAGA,EAAI0H,EAAE9H,OAAQI,IAChB,IAAT0H,EAAE1H,IAAYA,IAAMqI,IACxBZ,EAAEzH,GAAG6G,OAAQc,EAAE3H,GAAGqI,IAClBZ,EAAEzH,GAAG6G,OAAQc,EAAE3H,GAAGwI,IAClBb,EAAE3H,GAAGqI,GAAInB,IAAMI,EAAQtH,EAAGqI,EAAIG,EAAIb,GAClCF,EAAEzH,GAAGoG,OAAOuB,EAAE3H,GAAGqI,IACjBV,EAAEU,GAAIrI,GAAGkH,IAAMI,EAAQtH,EAAGqI,EAAIG,EAAIb,GAClCF,EAAEY,GAAIjC,OAAOuB,EAAEU,GAAIrI,KAItB,OAAOiI,EA+IR,OAhIA,SAAiBzG,EAAMkH,GACtB,IACIC,EACAC,EACArB,EACAD,EAEJ,IAAMuB,IAAcrH,GACnB,MAAM,IAAIyE,UAAW,8EAAgFzE,EAAO,MAE7G,GAAKsH,UAAUlJ,OAAS,EAAI,CAC3B,IAAMmJ,IAAUL,GACf,MAAM,IAAIzC,UAAW,uEAAyEyC,EAAO,MAEtG,GAAKM,IAAYN,EAAM,YAEL,YADjBpB,EAAUoB,EAAKpB,UAC0B,aAAZA,EAC5B,MAAM,IAAIrB,UAAW,kFAAoFqB,EAAU,MAGrH,GAAK0B,IAAYN,EAAM,cACtBnB,EAAWmB,EAAKnB,UACD,CAAE,YAAa,SAAU,YAAa,UAAW,aAC7C0B,KAAM9B,GAASI,KACjC,MAAM,IAAItB,UAAW,kHAAoHsB,EAAW,MAKvJ,OAASD,GACR,IAAK,SACJsB,EAAa,SAAwB5I,EAAGqI,EAAIG,EAAIb,GAC/C,OAAOjB,KAAKiB,EAAE3H,GAAGqI,GAAInB,IAAKS,EAAE3H,GAAGwI,GAAItB,MAErC,MACA,QACC0B,EAAa,SAA0B5I,EAAGqI,EAAIG,EAAIb,GACjD,OAAOuB,KAAKvB,EAAE3H,GAAGqI,GAAInB,IAAKS,EAAE3H,GAAGwI,GAAItB,MAKtC,OAASK,GACR,IAAK,YACJoB,EAAcQ,IACf,MACA,IAAK,SACJR,EAAcS,IACf,MACA,IAAK,UACJT,EAAcU,IACf,MACA,IAAK,YACJV,EAAcW,IACf,MACA,QACCX,EAAcY,IAGhB,IAAMtB,EAAIZ,GAAc7F,EAAMoH,EAAYD,GAE1C,SAASa,EAAapB,GACrB,IAAMqB,IAAWrB,GAChB,MAAM,IAAInC,UAAW,iFAAmFmC,EAAI,MAG7G,IADA,IAAMsB,EAAW,GACP1J,EAAI,EAAGA,EAAIwB,EAAK5B,OAAQI,IAAM,CACvC,IAAMqB,EAAU,CAAErB,GAClB0J,EAASlK,KAAM6B,GAKhB,IAHA,IAAIsI,EAAYD,EAAS9J,OACrBgK,EAAI,EAEAD,EAAYvB,GAAI,CACvB,IAAMyB,EAASH,EAAUzB,EAAG2B,GAAK,IAAME,OAAQJ,EAAUzB,EAAE2B,GAAG,KAC9DF,EAAUzB,EAAE2B,GAAG,IAAOC,EACtBH,EAAUzB,EAAE2B,GAAG,IAAO,KACtBD,IACAC,IAED,OAAOF,EAAS7F,QAAQ,SAAAlE,GAAC,OAAKoK,IAAQpK,MAGvC,SAASqK,EAAuB5B,GAG/B,IAFA,IAAMsB,EAAWF,EAAapB,GACxB6B,EAAM,IAAIlC,MAAOvG,EAAK5B,QAClBI,EAAI,EAAGA,EAAI0J,EAAS9J,OAAQI,IAErC,IADA,IAAMkK,EAAUR,EAAU1J,GAChB4J,EAAI,EAAGA,EAAIM,EAAQtK,OAAQgK,IAAM,CAE1CK,EADYC,EAASN,IACrB,UAAgBO,MAAO,6BAAvB,YAAuDnK,EAAE,GAG3D,OAAOiK,EAGR,SAASG,IAER,IADA,IAAMV,EAAW,GACP1J,EAAI,EAAGA,EAAIwB,EAAK5B,OAAQI,IAAM,CACvC,IAAMqB,EAAU,GAChBA,EAAQd,KAAOiB,EAAMxB,GAAIoD,KAAM,MAC/B/B,EAAQsB,MAAQ,EAChB+G,EAASlK,KAAM6B,GAGhB,IADA,IAAIuI,EAAI,EACAA,EAAI3B,EAAErI,QAAS,CACtB,IAAM4D,EAAO,CACZtE,SAAU,CAAEwK,EAAUzB,EAAE2B,GAAG,IAAMF,EAAUzB,EAAE2B,GAAG,KAChDjH,MAAO+G,EAAUzB,EAAE2B,GAAG,IAAKjH,MAAQ+G,EAAUzB,EAAE2B,GAAG,IAAKjH,MACvDpC,KAAMmJ,EAAUzB,EAAE2B,GAAG,IAAKjH,MAAQ+G,EAAUzB,EAAE2B,GAAG,IAAKjH,OAEvD+G,EAAUzB,EAAE2B,GAAG,IAAOpG,EACtBkG,EAAUzB,EAAE2B,GAAG,IAAO,KACtBA,IAED,OAAOF,EAAU,GAGlB,MAAO,CACNM,wBACAR,cACAY,Y,YCpNIC,GAAW,SAAC,GAA4C,IAA1C7I,EAAyC,EAAzCA,KAAM8I,EAAmC,EAAnCA,UAAWhD,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC7C,IAGC,IAFA,IAAMgD,EAAS,GACT1C,EAAIrG,EAAM8I,EAAW,IAAM1K,OACvBI,EAAI,EAAGA,EAAI6H,EAAG7H,IAAM,CAE7B,IADA,IAAMwK,EAAM,GACFZ,EAAI,EAAGA,EAAIU,EAAU1K,OAAQgK,IACtCY,EAAKZ,GAAMpI,EAAM8I,EAAWV,IAAO5J,GAEpCuK,EAAO/K,KAAMgL,GAEd,IAAMC,EAASC,GAAQH,EAAQ,CAC9BjD,QAASA,EACTC,SAAUA,IAELtF,EAAOwI,EAAOL,UACpB,MAAO,CACNG,SACAE,SACAxI,QAEA,MAAQ0I,GACT,MAAO,KAgBHC,G,0CACL,WAAa3J,GAAS,IAAD,kBACpB,cAAOA,GAEP,IAAQO,EAAuCP,EAAvCO,KAAM8I,EAAiCrJ,EAAjCqJ,UAAWhD,EAAsBrG,EAAtBqG,QAASC,EAAatG,EAAbsG,SAHd,OAIpB,EAAKrG,OAAL,kBACImJ,GAAS,CAAE7I,OAAM8I,YAAWhD,UAASC,cACrCtG,GAEJA,EAAM4J,SAAU,EAAK3J,MAAMuJ,QARP,E,qCA6BrB,WAAU,IAAD,OACAA,EAAWvG,KAAKhD,MAAhBuJ,OACAhG,EAAMP,KAAKjD,MAAXwD,EACR,OAAMgG,EAIL,uBAAKxF,MAAO,CAAE6F,UAAW,OAAQxJ,MAAO,SACvC,wBAAM+D,UAAU,SAAUZ,EAAE,oCAC5B,0BACCY,UAAU,wCACV0F,UAAU,OACVC,YAAa,SAAEC,GACdA,EAAGC,aAAaC,QAAS,YAAa,EAAKC,WAC3CH,EAAGC,aAAaC,QAAS,aAAc,EAAKE,UAE7CtG,QAAS,YACRuG,OAAgB,EAAKF,aAErB3G,EAAE,cACJ,gBAAC,EAAD,CACCK,QAAQ,iBACR9C,KAAK,KACL+C,QAAS,WACR,EAAKR,SAAS,CAAEC,YAAa,EAAKtD,MAAMsD,cAEzCsB,WAAY,uBAAKxE,MAAOsE,OAAOlE,WAAYH,OAAQqE,OAAOjE,aACzD,gBAAC,EAAD,CACCY,EAAG,EAAGe,EAAG,EAAGhC,MAAOsE,OAAOlE,WAAYH,OAAQqE,OAAOjE,YAAY,GAAIH,KAAM0C,KAAKhD,MAAMe,KACtFW,OAAQ2I,IAAOrH,KAAKhD,MAAMqJ,OAAO3K,OAAS,IAAMgC,SAAU,KAHhD,KAMZ6C,EAAGA,GAEH,uBAAKY,UAAU,iBAEhB,2BACC,uBAAK/D,MAAO,IAAKC,OAAQ,IAAK+C,IAAK,SAAAnD,GAClC,IAAM,EAAKA,IAAM,CAChB,EAAKA,IAAMA,GNnClB,SAA0BR,EAAWW,EAAOC,EAAQiK,GACnD,IAAMC,EAAS,6BAA8BC,KAAMC,SAAUC,mBAAoBjL,KAE3EkL,EAAS/M,SAASC,cAAe,UACjC+M,EAAUD,EAAOE,WAAY,MAEnCF,EAAOvK,MAAQA,EACfuK,EAAOtK,OAASA,EAEhB,IAAMyK,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACdJ,EAAQK,UAAW,EAAG,EAAG7K,EAAOC,GAChCuK,EAAQM,UAAWJ,EAAO,EAAG,EAAG1K,EAAOC,GAEvCsK,EAAOQ,QAAQ,SAAiBC,GAC/B,IAAMC,EAAWhB,IAAOe,EAAK1M,OAAO,MAAS,MAC7C,GAAK4L,EACJ,OAAOA,EAAUc,EAAMC,OAI1BP,EAAMQ,IAAMf,EMkBNgB,CADkBjO,EAAc,EAAK2C,KACT,KAAW,KAAY,SAAEuL,IACpDC,OAAcD,GAAWE,MAAM,SAAAC,GAC9B,IAAMlK,EAAK,oBAAgBkK,EAAhB,kFACX,EAAKxB,QAAL,4BAAgCyB,OAAc,GAA9C,aAAqDA,OAAc,GAAnE,UACA,EAAK1B,UAAYzI,WAKpB,gBAAC,EAAD,CACCJ,EAAG,EAAGe,EAAG,EAAGhC,MAAO,IAAKC,OAAQ,IAAKC,KAAM0C,KAAKhD,MAAMe,KACtDW,OAAQ2I,IAAOrH,KAAKhD,MAAMqJ,OAAO3K,OAAS,MAjB5C,OAjCK,gBAACmN,EAAA,EAAD,CAAOjI,QAAQ,UAAUL,EAAE,0B,uCAtBpC,SAAiCuI,EAAWC,GAC3C,GACCD,EAAUxL,OAASyL,EAAUzL,MAC7BwL,EAAU1C,YAAc2C,EAAU3C,WAClC0C,EAAU1F,UAAY2F,EAAU3F,SAChC0F,EAAUzF,WAAa0F,EAAU1F,SAChC,CACD,IAAQ/F,EAAuCwL,EAAvCxL,KAAM8I,EAAiC0C,EAAjC1C,UAAWhD,EAAsB0F,EAAtB1F,QAASC,EAAayF,EAAbzF,SAC5B2F,GAAQ,kBACV7C,GAAS,CAAE7I,OAAM8I,YAAWhD,UAASC,cACrCyF,GAGJ,OADAA,EAAUnC,SAAUqC,EAASzC,QACtByC,EAER,OAAO,S,GA3B4B/I,aA+FrCyG,GAAuBuC,aAAe,CACrC7F,QAAS,WACTC,SAAU,YACVsD,SAHqC,cAiBtC,QAAeuC,OAAiB,SAAhC,EAA4CC,QAAezC,M,iCC1J3D,IAdqB,SAAE0B,GACtB,IACMgB,EAAS,IAAIC,EADI3H,OAAf2H,YAGR,OADAD,EAAOE,cAAelB,GACf,IAAImB,SAAQ,SAAAC,GAClBJ,EAAOK,UAAY,WAClBD,EAAQJ,EAAO7C,c,mCC6BlB,IAAI5B,EAAe,EAAQ,OAG3B+E,EAAOC,QAAUhF,G,mCCrBjB,IAwBIA,EAxBW,EAAQ,MAwBJiF,CAtBL,EAAQ,QAwBtBF,EAAOC,QAAUhF,G,+BCkBjB+E,EAAOC,QA3BP,SAAgBE,GACd,IAAKhG,MAAM9I,QAAQ8O,GACjB,MAAM,IAAI9H,UAAU,4DAQtB,IALA,IAGI+H,EAHAC,EAAMF,EAAInO,OACV8G,EAAMqH,EAAI,GACVG,EAAM,CAAC,GAGFlO,EAAI,EAAGA,EAAIiO,EAAKjO,KACvBgO,EAAMD,EAAI/N,IAEA0G,GACRA,EAAMsH,EACNE,EAAItO,OAAS,EACbsO,EAAI1O,KAAKQ,IACAgO,IAAQtH,GACjBwH,EAAI1O,KAAKQ,GAIb,OAAOkO,I,mCCxDT,IAAIjP,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OA6EzBP,EAAOC,QAhEP,SAAmBtL,EAAGe,EAAG8K,GACvB,IAAIH,EAAK3L,EAAG+L,EAAGrO,EAEf,IAAKf,EAAQsD,GACX,MAAM,IAAI0D,UAAU,iFAAmF1D,EAAI,MAG7G,IAAKtD,EAAQqE,GACX,MAAM,IAAI2C,UAAU,kFAAoF3C,EAAI,MAG9G,GAAIwF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,6EAA+EmI,EAAO,MAM9G,IAFAH,EAAM1L,EAAE3C,UAEI0D,EAAE1D,OACZ,MAAM,IAAI0O,MAAM,iFAGlB,IAAKL,EACH,OAAO,KAGT,GAAIG,EAIF,IAFA9L,GADA+L,EAAID,EAAK7L,EAAE,GAAI,EAAG,GAAK6L,EAAK9K,EAAE,GAAI,EAAG,IAC7B,GAAK+K,EAAIA,EAEZrO,EAAI,EAAGA,EAAIiO,EAAKjO,KACnBqO,EAAID,EAAK7L,EAAEvC,GAAIA,EAAG,GAAKoO,EAAK9K,EAAEtD,GAAIA,EAAG,IAE7B,IACNqO,GAAKA,GAGHA,EAAI/L,IACNA,EAAI+L,QAOR,IAFA/L,GADA+L,EAAI9L,EAAE,GAAKe,EAAE,IACL,GAAK+K,EAAIA,EAEZrO,EAAI,EAAGA,EAAIiO,EAAKjO,KACnBqO,EAAI9L,EAAEvC,GAAKsD,EAAEtD,IAEL,IACNqO,GAAKA,GAGHA,EAAI/L,IACNA,EAAI+L,GAKV,OAAO/L,I,mCCzET,IAAIiM,EAAa,EAAQ,OA2BzBX,EAAOC,QAdP,SAAkBtL,EAAGe,EAAG8K,GACtB,IAAIhO,EAQJ,OAAa,QALXA,EADE0I,UAAUlJ,OAAS,EACjB2O,EAAWhM,EAAGe,EAAG8K,GAEjBG,EAAWhM,EAAGe,IAGA,EAAIlD,EAAIA,I,mCCtB9B,IAAIoO,EAAM,EAAQ,OACdC,EAAS,EAAQ,IACjBxP,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OAazB,SAASO,EAAQC,EAAI/E,GACnB,OAAO,SAAkBtH,EAAGtC,GAC1B,OAAO2O,EAAGrM,EAAGtC,EAAG4J,IAwDpBgE,EAAOC,QAxCP,SAAoBtL,EAAGe,EAAG8K,GACxB,IAAIQ,EAAGC,EAAGlP,EAEV,IAAKV,EAAQsD,GACX,MAAM,IAAI0D,UAAU,yFAA2F1D,EAAI,MAGrH,IAAKtD,EAAQqE,GACX,MAAM,IAAI2C,UAAU,0FAA4F3C,EAAI,MAGtH,GAAIwF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,qFAAuFmI,EAAO,MAItH,GAAI7L,EAAE3C,SAAW0D,EAAE1D,OACjB,MAAM,IAAI0O,MAAM,wFAGlB,OAAK/L,EAAE3C,QAIHwO,GACFQ,EAAIJ,EAAIjM,EAAGe,EAAG8K,GACdS,EAAIJ,EAAOlM,EAAGmM,EAAQN,EAAM,IAC5BzO,EAAI8O,EAAOnL,EAAGoL,EAAQN,EAAM,MAE5BQ,EAAIJ,EAAIjM,EAAGe,GACXuL,EAAIJ,EAAOlM,GACX5C,EAAI8O,EAAOnL,IAGNsL,GAAKC,EAAIlP,IAbP,O,mCCxDX,IAAIV,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OAuDzBP,EAAOC,QA1CP,SAAatL,EAAGe,EAAG8K,GACjB,IAAKnP,EAAQsD,GACX,MAAM,IAAI0D,UAAU,2EAA6E1D,EAAI,MAGvG,IAAKtD,EAAQqE,GACX,MAAM,IAAI2C,UAAU,4EAA8E3C,EAAI,MAGxG,GAAIwF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,uEAAyEmI,EAAO,MAIxG,IAEIpO,EAFAiO,EAAM1L,EAAE3C,OACRkP,EAAM,EAGV,GAAIb,IAAQ3K,EAAE1D,OACZ,MAAM,IAAI0O,MAAM,kEAGlB,IAAKL,EACH,OAAO,KAGT,GAAIG,EACF,IAAKpO,EAAI,EAAGA,EAAIiO,EAAKjO,IACnB8O,GAAOV,EAAK7L,EAAEvC,GAAIA,EAAG,GAAKoO,EAAK9K,EAAEtD,GAAIA,EAAG,QAG1C,IAAKA,EAAI,EAAGA,EAAIiO,EAAKjO,IACnB8O,GAAOvM,EAAEvC,GAAKsD,EAAEtD,GAIpB,OAAO8O,I,kCCnDT,IAAI7P,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OAkFzBP,EAAOC,QArEP,SAAmBtL,EAAGe,EAAG8K,GACvB,IAAIH,EAAKD,EAAKe,EAAKtK,EAAGrE,EAAGI,EAAGR,EAE5B,IAAKf,EAAQsD,GACX,MAAM,IAAI0D,UAAU,iFAAmF1D,EAAI,MAG7G,IAAKtD,EAAQqE,GACX,MAAM,IAAI2C,UAAU,kFAAoF3C,EAAI,MAG9G,GAAIwF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,6EAA+EmI,EAAO,MAM9G,IAFAH,EAAM1L,EAAE3C,UAEI0D,EAAE1D,OACZ,MAAM,IAAI0O,MAAM,iFAGlB,IAAKL,EACH,OAAO,KAMT,GAHAxJ,EAAI,EACJrE,EAAI,EAEAgO,EACF,IAAKpO,EAAI,EAAGA,EAAIiO,EAAKjO,KAEnB+O,GADAf,EAAMI,EAAK7L,EAAEvC,GAAIA,EAAG,GAAKoO,EAAK9K,EAAEtD,GAAIA,EAAG,IAC3B,GAAKgO,EAAMA,GAEb,IACJe,EAAMtK,GAERrE,EAAI,EAAIA,GADRI,EAAIiE,EAAIuJ,GACQxN,EAChBiE,EAAIsK,GAGJ3O,IADAI,EAAIwN,EAAMvJ,GACDjE,QAKf,IAAKR,EAAI,EAAGA,EAAIiO,EAAKjO,KAEnB+O,GADAf,EAAMzL,EAAEvC,GAAKsD,EAAEtD,IACH,GAAKgO,EAAMA,GAEb,IACJe,EAAMtK,GAERrE,EAAI,EAAIA,GADRI,EAAIiE,EAAIuJ,GACQxN,EAChBiE,EAAIsK,GAGJ3O,IADAI,EAAIwN,EAAMvJ,GACDjE,GAMjB,OAAOiE,EAAIuK,KAAKC,KAAK7O,K,mCC9EvB,IAAInB,EAAU,EAAQ,OAClBiQ,EAAW,EAAQ,OACnBf,EAAa,EAAQ,OAiEzBP,EAAOC,QApDP,SAAiBe,EAAGC,EAAGT,GACrB,IAEIH,EACA3L,EACAtC,EAJAmP,EAAQD,EAASN,GACjBQ,EAAQF,EAASL,GAKrB,IAAK5P,EAAQ2P,KAAOO,EAClB,MAAM,IAAIlJ,UAAU,4FAA8F2I,EAAI,MAGxH,IAAK3P,EAAQ4P,KAAOO,EAClB,MAAM,IAAInJ,UAAU,4FAA8F4I,EAAI,MAGxH,GAAIM,IAAUC,EACZ,MAAM,IAAInJ,UAAU,2GAGtB,GAAI6C,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,2EAA6EmI,EAAO,MAM5G,IAFAH,EAAMW,EAAEhP,UAEIiP,EAAEjP,OACZ,MAAM,IAAI0O,MAAM,0EAKlB,GAFAhM,EAAI,EAEA8L,EACF,IAAKpO,EAAI,EAAGA,EAAIiO,EAAKjO,IACfoO,EAAKQ,EAAE5O,GAAIA,EAAG,KAAOoO,EAAKS,EAAE7O,GAAIA,EAAG,KACrCsC,GAAK,QAIT,IAAKtC,EAAI,EAAGA,EAAIiO,EAAKjO,IACf4O,EAAE5O,KAAO6O,EAAE7O,KACbsC,GAAK,GAKX,OAAOA,I,gCC9DT,IAAIrD,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OA0EzBP,EAAOC,QA9DP,SAAgBE,EAAKK,GACnB,IAAKnP,EAAQ8O,GACX,MAAM,IAAI9H,UAAU,qEAAuE8H,EAAM,MAGnG,GAAIjF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,0EAA4EmI,EAAO,MAI3G,IAGI5N,EACAwN,EACAe,EACA/O,EANAiO,EAAMF,EAAInO,OACV6E,EAAI,EACJrE,EAAI,EAMR,IAAK6N,EACH,OAAO,KAGT,GAAIG,EACF,IAAKpO,EAAI,EAAGA,EAAIiO,EAAKjO,KAEnB+O,GADAf,EAAMI,EAAKL,EAAI/N,GAAIA,IACP,GAAKgO,EAAMA,GAEb,IACJe,EAAMtK,GAERrE,EAAI,EAAIA,GADRI,EAAIiE,EAAIuJ,GACQxN,EAChBiE,EAAIsK,GAGJ3O,IADAI,EAAIwN,EAAMvJ,GACEjE,QAKlB,IAAKR,EAAI,EAAGA,EAAIiO,EAAKjO,KAEnB+O,GADAf,EAAMD,EAAI/N,IACE,GAAKgO,EAAMA,GAEb,IACJe,EAAMtK,GAERrE,EAAI,EAAIA,GADRI,EAAIiE,EAAIuJ,GACQxN,EAChBiE,EAAIsK,GAGJ3O,IADAI,EAAIwN,EAAMvJ,GACEjE,GAMpB,OAAOiE,EAAIuK,KAAKC,KAAK7O,K,mCCtEvB,IAAInB,EAAU,EAAQ,OAClBkP,EAAa,EAAQ,OA2DzBP,EAAOC,QA9CP,SAAmBtL,EAAGe,EAAG8K,GACvB,IAAIH,EAAK3L,EAAG+L,EAAGrO,EAEf,IAAKf,EAAQsD,GACX,MAAM,IAAI0D,UAAU,iFAAmF1D,EAAI,MAG7G,IAAKtD,EAAQqE,GACX,MAAM,IAAI2C,UAAU,kFAAoF3C,EAAI,MAG9G,GAAIwF,UAAUlJ,OAAS,IAChBuO,EAAWC,GACd,MAAM,IAAInI,UAAU,6EAA+EmI,EAAO,MAM9G,IAFAH,EAAM1L,EAAE3C,UAEI0D,EAAE1D,OACZ,MAAM,IAAI0O,MAAM,iFAGlB,IAAKL,EACH,OAAO,KAKT,GAFA3L,EAAI,EAEA8L,EACF,IAAKpO,EAAI,EAAGA,EAAIiO,EAAKjO,IAEnBsC,IADA+L,EAAID,EAAK7L,EAAEvC,GAAIA,EAAG,GAAKoO,EAAK9K,EAAEtD,GAAIA,EAAG,IAC5B,GAAKqO,EAAIA,OAGpB,IAAKrO,EAAI,EAAGA,EAAIiO,EAAKjO,IAEnBsC,IADA+L,EAAI9L,EAAEvC,GAAKsD,EAAEtD,IACJ,GAAKqO,EAAIA,EAItB,OAAO/L,I,+BCfTsL,EAAOC,QANP,SAAoBlL,GAClB,MAAwB,oBAAVA,I,+BCKhBiL,EAAOC,QANP,SAAkBlL,GAChB,MAAwB,kBAAVA,GAAgE,oBAA1C0M,OAAOhJ,UAAUiJ,SAASC,KAAK5M","file":"static/js/HierarchicalClustering.8db50010.chunk.js","sourcesContent":["/**\n* Code adapted from Nikita Rokotyan. MIT licensed. Source: http://bl.ocks.org/Rokotyan/0556f8facbaf344507cdc45dc3622177\n*/\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport round from '@stdlib/math/base/special/round';\n\n\n// FUNCTIONS //\n\nfunction appendCSS( cssText, element ) {\n\tconst styleElement = document.createElement( 'style' );\n\tstyleElement.setAttribute( 'type', 'text/css' );\n\tstyleElement.innerHTML = cssText;\n\tif ( isArray( element.children ) ) {\n\t\tconst refNode = element.children[ 0 ] || null;\n\t\telement.insertBefore( styleElement, refNode );\n\t}\n}\n\nfunction getCSSStyles( parentElement ) {\n\tconst selectorTextArr = [];\n\tselectorTextArr.push( '#'+parentElement.id );\n\tif ( isArray( parentElement.classList ) ) {\n\t\tfor ( let c = 0; c < parentElement.classList.length; c++ ) {\n\t\t\tif ( !contains( selectorTextArr, '.'+parentElement.classList[c] ) ) {\n\t\t\t\tselectorTextArr.push( '.'+parentElement.classList[c] );\n\t\t\t}\n\t\t}\n\t}\n\tconst nodes = parentElement.getElementsByTagName( '*' );\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tconst id = nodes[i].id;\n\t\tif ( !contains( selectorTextArr, '#'+id ) ) {\n\t\t\tselectorTextArr.push( '#'+id );\n\t\t}\n\t\tconst classes = nodes[i].classList;\n\t\tif ( isArray( classes ) ) {\n\t\t\tfor ( let c = 0; c < classes.length; c++) {\n\t\t\t\tif ( !contains( selectorTextArr, '.'+classes[c] ) ) {\n\t\t\t\t\tselectorTextArr.push( '.'+classes[c] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlet extractedCSSText = '';\n\tfor ( let i = 0; i < document.styleSheets.length; i++ ) {\n\t\tconst s = document.styleSheets[i];\n\t\ttry {\n\t\t\tif ( !s.cssRules ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\t\tif ( e.name !== 'SecurityError' ) {\n\t\t\t\t\tthrow e; // for Firefox\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\tconst cssRules = s.cssRules;\n\t\tfor ( let r = 0; r < cssRules.length; r++ ) {\n\t\t\tif ( contains( selectorTextArr, cssRules[r].selectorText ) ) {\n\t\t\t\textractedCSSText += cssRules[r].cssText;\n\t\t\t}\n\t\t}\n\t}\n\treturn extractedCSSText;\n}\n\n\n// MAIN //\n\nfunction getSVGString( svgNode ) {\n\tif ( !svgNode ) {\n\t\treturn '';\n\t}\n\tsvgNode.setAttribute( 'xlink', 'http://www.w3.org/1999/xlink' );\n\tsvgNode.setAttribute( 'style', 'background: white;' );\n\tconst cssStyleText = getCSSStyles( svgNode );\n\tappendCSS( cssStyleText, svgNode );\n\n\tconst serializer = new XMLSerializer();\n\tlet svgString = serializer.serializeToString( svgNode );\n\tsvgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n\tsvgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\treturn svgString;\n}\n\nfunction svgString2Image( svgString, width, height, callback ) {\n\tconst imgsrc = 'data:image/svg+xml;base64,'+ btoa( unescape( encodeURIComponent( svgString ) ) ); // Convert SVG string to data URL\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst context = canvas.getContext( '2d' );\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst image = new Image();\n\timage.onload = function onLoad() {\n\t\tcontext.clearRect( 0, 0, width, height );\n\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\tcanvas.toBlob( function onBlob( blob ) {\n\t\t\tconst filesize = round( blob.length/1024 ) + ' KB';\n\t\t\tif ( callback ) {\n\t\t\t\treturn callback( blob, filesize );\n\t\t\t}\n\t\t});\n\t};\n\timage.src = imgsrc;\n}\n\n\n// EXPORTS //\n\nexport { getSVGString, svgString2Image };\n","/**\n* Code by Micah Stubbs, Apache 2.0 licensed\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport * as d3 from 'd3';\nimport D3blackbox from './blackbox.js';\n\n\n// MAIN //\n\nconst Dendrogram = D3blackbox( ( anchor, props, state ) => {\n\t/* eslint-disable i18next/no-literal-string */\n\tconst svg = d3.select( anchor.current );\n\n\tconst { width, height, data } = props;\n\n\t// define some constants\n\tconst margin = { top: 40, left: 40, bottom: 0, right: 0 };\n\tconst innerWidth = width - margin.left - margin.right;\n\tconst innerHeight = height - margin.top - margin.bottom;\n\tconst fontSize = props.fontSize || 16;\n\tconst magicWidthDivisor = 1.35;\n\n\t// call the draw function\n\tdraw(data);\n\n\t// define the draw function\n\tfunction draw(data) {\n\t\t// define the tree layout function\n\t\tconst tree = data => {\n\t\t\tconst root = d3\n\t\t\t\t.hierarchy(data);\n\n\t\t\troot.dx = 15;\n\t\t\troot.dy = innerWidth / (root.height + 1);\n\t\t\treturn d3.cluster().size([innerHeight, innerWidth / magicWidthDivisor])(root);\n\t\t};\n\n\t\t// call the tree layout function on the data\n\t\tconst root = tree(data);\n\n\t\t// draw the visualization\n\t\tlet x0 = Infinity;\n\t\tlet x1 = -x0;\n\t\troot.each(d => {\n\t\t\tif (d.x > x1) x1 = d.x;\n\t\t\tif (d.x < x0) x0 = d.x;\n\t\t});\n\n\n\t\tfunction collapse( d ) {\n\t\t\tif ( d.children ) {\n\t\t\t\td._children = d.children;\n\t\t\t\td._children.forEach( collapse );\n\t\t\t\tif ( d.value < props.cutoff ) {\n\t\t\t\t\td.children = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\troot.children.forEach( collapse );\n\n\t\tconst magicXTranslateDivisor = 6;\n\t\tconst xTranslate = root.dy / magicXTranslateDivisor + margin.left;\n\t\tconst yTranslate = root.dx - x0 + margin.top;\n\t\tconst g = svg\n\t\t\t.append('g')\n\t\t\t.attr('font-family', 'sans-serif')\n\t\t\t.attr('font-size', fontSize)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t`translate(${xTranslate},${yTranslate})`\n\t\t\t);\n\n\t\tg.append('g')\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', '#555')\n\t\t\t.attr('stroke-opacity', 0.4)\n\t\t\t.attr('stroke-width', 1.0 )\n\t\t\t.selectAll('path')\n\t\t\t.data(root.links())\n\t\t\t.join('path')\n\t\t\t.attr(\n\t\t\t\t'd',\n\t\t\t\td => `\n\t\t\t\tM${d.target.y},${d.target.x}\n\t\t\t\tC${d.source.y + root.dy / 2},${d.target.x}\n\t\t\t\t ${d.source.y + root.dy / 2},${d.source.x}\n\t\t\t\t ${d.source.y},${d.source.x}\n\t\t\t`\n\t\t\t);\n\n\t\tconst node = g\n\t\t\t.append('g')\n\t\t\t.attr('stroke-linejoin', 'round')\n\t\t\t.attr('stroke-width', 0.1875 * fontSize )\n\t\t\t.selectAll('g')\n\t\t\t.data(root.descendants().reverse())\n\t\t\t.join( 'g' )\n\t\t\t.attr( 'transform', d => `translate(${d.y},${d.x})` );\n\n\t\tnode\n\t\t\t.append('circle')\n\t\t\t.attr('fill', d => (d.children ? '#555' : '#999'))\n\t\t\t.attr('r', fontSize * 0.15 )\n\t\t\t.on( 'click', d => {\n\t\t\t\td.children = d.children ? null : d._children;\n\t\t\t});\n\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('dy', '0.1em')\n\t\t\t.attr('x', d => (d.children ? -6 : 6))\n\t\t\t.attr('font-size', fontSize )\n\t\t\t.text(d => d.data.name)\n\t\t\t.filter(d => d.children)\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.clone(true)\n\t\t\t.lower()\n\t\t\t.attr('stroke', 'white');\n\t}\n\t/* eslint-enable i18next/no-literal-string */\n});\n\n\n// EXPORTS //\n\nexport default Dendrogram;\n","// MODULES //\n\nimport React, { Component } from 'react';\n\n\n// EXPORTS //\n\nexport default function D3blackbox(D3render) {\n\treturn class Blackbox extends Component {\n\t\tcomponentDidMount() {\n\t\t\tD3render(this.anchor, this.props, this.state);\n\t\t}\n\t\tcomponentDidUpdate() {\n\t\t\tD3render(this.anchor, this.props, this.state);\n\t\t}\n\n\t\tanchor = React.createRef();\n\n\t\trender() {\n\t\t\tconst { x, y } = this.props;\n\t\t\tconst Component = this.props.component || 'g';\n\n\t\t\treturn (\n\t\t\t\t<Component\n\t\t\t\t\ttransform={`translate(${x}, ${y})`}\n\t\t\t\t\tref={this.anchor}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n}\n","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Tooltip from '@isle-project/components/tooltip';\n\n\n// MAIN //\n\nclass FullscreenButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\ttoggleFullscreen = () => {\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Tooltip\n\t\t\t\t\tid=\"fullscreen_tooltip\"\n\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\ttooltip={t('toggle-fullscreen')}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonClick={this.toggleFullscreen}\n\t\t\t\t\t\tstyle={{ position: 'absolute', top: '10px', right: '32px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"fa fa-window-maximize\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.fullscreen}\n\t\t\t\t\tonHide={this.toggleFullscreen}\n\t\t\t\t\tdialogClassName=\"modal-100w\"\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title as=\"h1\">\n\t\t\t\t\t\t\t{t('hierarchical-clustering')}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 0.75 * window.innerHeight,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\tfontSize: 32,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.dendrogram}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button onClick={this.toggleFullscreen}>{t('close')}</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFullscreenButton.propTypes = {\n\tdendrogram: PropTypes.node.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FullscreenButton;\n","// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Represents a PriorityQueue. Elements queued will always be sorted in increasing order.\n*\n* @param {Array} values - input array of values\n* @constructor\n*/\nfunction PriorityQueue( values ) {\n\tif ( !isArray( values ) ) {\n\t\tthrow new TypeError( 'invalid argument. values must be an Array. Option: `' + values + '`.' );\n\t}\n\tconst _initial = values;\n\tthis._queue = [];\n\tif ( _initial ) {\n\t\tfor ( let i = 0; i < _initial.length; i++ ) {\n\t\t\tthis.insert( _initial[ i ] );\n\t\t}\n\t}\n}\n\n/**\n * Insert a new element to the queue. Elements are assumed to be objects with `sim` and `index` properties.\n */\nPriorityQueue.prototype.insert = function insert( elem ) {\n\tconst pos = this.search( elem );\n\tthis._queue.splice( pos, 0, elem );\n};\n\n/**\n* Returns the maximum element currently in the queue.\n*/\nPriorityQueue.prototype.max = function max() {\n\treturn this._queue[ this._queue.length - 1 ];\n};\n\n/**\n* Returns the maximum element currently in the queue and remove it.\n*/\nPriorityQueue.prototype.delMax = function delMax() {\n\treturn this._queue.pop();\n};\n\n/**\n* Delete the element passed to parameter `elem` from the queue, if present.\n*/\nPriorityQueue.prototype.delete = function del( elem ) {\n\tfor ( let i = 0; i < this.size(); i++ ) {\n\t\tif ( this._queue[i] === elem ) {\n\t\t\tthis._queue.splice(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n* Reset the queue to zero elements\n*/\nPriorityQueue.prototype.reset = function zero() {\n\tthis._queue = [];\n};\n\n/**\n* Return the number of elements currently in the queue\n*/\nPriorityQueue.prototype.size = function size() {\n\treturn this._queue.length;\n};\n\n/**\n* Binary search algorithm returning the index at which the element if inserted would be larger than all elements to the left and smaller than those to the right.\n*/\nPriorityQueue.prototype.search = function search( target ) {\n\tlet low = 0;\n\tlet high = this._queue.length;\n\twhile ( low !== high ) {\n\t\t// Calculate mid point:\n\t\tconst mid = high + low >>> 1;\n\t\tif ( ( this._queue[mid].sim - target.sim ) <= 0 ) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n};\n\n\n// EXPORTS //\n\nexport default PriorityQueue;\n","// MODULES //\n\nimport { i18n } from '@isle-project/locales';\nimport argmax from 'compute-argmax';\nimport chebyshev from 'compute-chebyshev-distance';\nimport cosine from 'compute-cosine-distance';\nimport euclidean from 'compute-euclidean-distance';\nimport hamming from 'compute-hamming';\nimport manhattan from 'compute-manhattan-distance';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isObject from '@stdlib/assert/is-object';\nimport isArrayArray from '@stdlib/assert/is-array-array';\nimport isInteger from '@stdlib/assert/is-integer';\nimport isNull from '@stdlib/assert/is-null';\nimport max from '@stdlib/math/base/special/max';\nimport min from '@stdlib/math/base/special/min';\nimport PriorityQueue from './queue.js';\n\n\n// FUNCTIONS //\n\n/**\n* Creates a two-dimensional array.\n*\n* @param {number} m - number of rows\n* @param {number} n - number of columns\n* @return {Array} an empty array of arrays\n*/\nfunction create2dArray( m, n ) {\n\tconst ret = [];\n\tfor ( let i = 0; i < m; i++ ) {\n\t\tret[ i ] = new Array( n );\n\t}\n\treturn ret;\n}\n\n/**\n* Returns a function which checks whether an element is equal to input.\n*\n* @param {string} input - the element the generated function should compare to\n* @return {Function} a function which when invoked checks whether its first argument is equal to input\n*/\nfunction isEqual( input ) {\n\treturn ( d ) => {\n\t\treturn d === input;\n\t};\n}\n\n/**\n* Algorithm adapted from Introduction to Information Retrieval by Manning et al., Cambridge University Press. 2008 [p.386].\n*\n* @param {Array} data - input data\n* @param {Function} linkage - used linkage function\n* @param {Function} distance - used distance metric\n* @return {Array} a list holding merge instructions\n*/\nexport function efficientHAC( data, linkage, distance ) {\n\tconst d = data;\n\tconst N = d.length;\n\tconst P = [];\n\tconst I = [];\n\tconst C = create2dArray( N, N );\n\tfor ( let n = 0; n < N; n++ ) {\n\t\tfor ( let i = 0; i < N; i++ ) {\n\t\t\tC[n][i] = {\n\t\t\t\t'sim': 1 / (1 + distance( d[n], d[i] ) ),\n\t\t\t\t'index': i\n\t\t\t};\n\t\t}\n\t\tI[n] = 1;\n\t\tP[n] = new PriorityQueue( C[n] );\n\t\tP[n].delete( C[n][n] );\n\t}\n\n\tconst A = [];\n\n\tfunction maxSim( q, i ){\n\t\treturn I[i] === 1 ? q.max().sim : 0;\n\t}\n\tfor ( let k = 0; k < N - 1; k++ ) {\n\t\tconst k1 = argmax( P.map( maxSim ) )[0];\n\t\tconst k2 = P[k1].max().index;\n\t\tA.push( [k1, k2] );\n\t\tI[k2] = 0;\n\t\tP[k1].reset();\n\t\tfor ( let i = 0; i < I.length; i++ ) {\n\t\t\tif ( I[i] === 1 && i !== k1 ) {\n\t\t\t\tP[i].delete( C[i][k1] );\n\t\t\t\tP[i].delete( C[i][k2] );\n\t\t\t\tC[i][k1].sim = linkage(i, k1, k2, C);\n\t\t\t\tP[i].insert(C[i][k1]);\n\t\t\t\tC[k1][i].sim = linkage(i, k1, k2, C);\n\t\t\t\tP[k1].insert(C[k1][i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn A;\n}\n\n\n// MAIN //\n\n/**\n* Hierarchical clustering based on priority-queue algorithm. Implements single-linkage and complete-linkage.\n*\n* @param {Array} data - two-dimensional array\n* @param {Object} [opts] - function options\n* @param {String} [opts.linkage='complete'] - accessor function for accessing array values\n* @param {String} [opts.distance='euclidean'] - boolean indicating whether to return a new array\n* @return {Object} an object exposing two functions, `getTree` and `getClusters(k)`, where `k` is the number of clusters\n*/\nfunction hclust( data, opts ) {\n\tlet allDistances;\n\tlet distanceFun;\n\tlet linkageFun;\n\tlet distance;\n\tlet linkage;\n\n\tif ( !isArrayArray( data ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Data must be passed as an array of arrays. Value: `' + data + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'linkage' ) ) {\n\t\t\tlinkage = opts.linkage;\n\t\t\tif ( linkage !== 'single' && linkage !== 'complete' ) {\n\t\t\t\tthrow new TypeError( 'invalid option. Linkage option must be either \"single\" or \"complete\". Option: `' + linkage + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( opts, 'distance' ) ) {\n\t\t\tdistance = opts.distance;\n\t\t\tallDistances = [ 'chebyshev', 'cosine', 'euclidean', 'hamming', 'manhattan' ];\n\t\t\tif ( !allDistances.some( isEqual( distance ) ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. Distance option must be \"chebyshev\", \"cosine\", \"euclidean\", \"hamming\" or \"manhattan\". Option: `' + distance + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\n\tswitch ( linkage ) {\n\t\tcase 'single':\n\t\t\tlinkageFun = function singleLinkage( i, k1, k2, C ) {\n\t\t\t\treturn max( C[i][k1].sim, C[i][k2].sim );\n\t\t\t};\n\t\tbreak;\n\t\tdefault:\n\t\t\tlinkageFun = function completeLinkage( i, k1, k2, C ) {\n\t\t\t\treturn min( C[i][k1].sim, C[i][k2].sim );\n\t\t\t};\n\t\tbreak;\n\t}\n\n\tswitch ( distance ) {\n\t\tcase 'chebyshev':\n\t\t\tdistanceFun = chebyshev;\n\t\tbreak;\n\t\tcase 'cosine':\n\t\t\tdistanceFun = cosine;\n\t\tbreak;\n\t\tcase 'hamming':\n\t\t\tdistanceFun = hamming;\n\t\tbreak;\n\t\tcase 'manhattan':\n\t\t\tdistanceFun = manhattan;\n\t\tbreak;\n\t\tdefault:\n\t\t\tdistanceFun = euclidean;\n\t\tbreak;\n\t}\n\tconst A = efficientHAC( data, linkageFun, distanceFun );\n\n\tfunction getClusters( k ) {\n\t\tif ( !isInteger( k ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. The number of desired clusters must be an integer. Option: `' + k + '`.' );\n\t\t}\n\t\tconst clusters = [];\n\t\tfor ( let i = 0; i < data.length; i++ ) {\n\t\t\tconst current = [ i ];\n\t\t\tclusters.push( current );\n\t\t}\n\t\tlet nClusters = clusters.length;\n\t\tlet j = 0;\n\n\t\twhile ( nClusters > k ) {\n\t\t\tconst merged = clusters[ A[ j ][ 0 ] ].concat( clusters[ A[j][1] ] );\n\t\t\tclusters[ A[j][0] ] = merged;\n\t\t\tclusters[ A[j][1] ] = null;\n\t\t\tnClusters--;\n\t\t\tj++;\n\t\t}\n\t\treturn clusters.filter( c => !isNull( c ) );\n\t}\n\n\tfunction getClusterAssignments( k ) {\n\t\tconst clusters = getClusters( k );\n\t\tconst out = new Array( data.length );\n\t\tfor ( let i = 0; i < clusters.length; i++ ) {\n\t\t\tconst cluster = clusters[ i ];\n\t\t\tfor ( let j = 0; j < cluster.length; j++ ) {\n\t\t\t\tconst idx = cluster[ j ];\n\t\t\t\tout[ idx ] = `${i18n.t('StatisticalModels:cluster')} ${i+1}`;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction getTree() {\n\t\tconst clusters = [];\n\t\tfor ( let i = 0; i < data.length; i++ ) {\n\t\t\tconst current = {};\n\t\t\tcurrent.name = data[ i ].join( ', ' );\n\t\t\tcurrent.value = 1;\n\t\t\tclusters.push( current );\n\t\t}\n\t\tlet j = 0;\n\t\twhile ( j < A.length ) {\n\t\t\tconst node = {\n\t\t\t\tchildren: [ clusters[ A[j][0] ], clusters[ A[j][1] ] ],\n\t\t\t\tvalue: clusters[ A[j][0] ].value + clusters[ A[j][1] ].value,\n\t\t\t\tname: clusters[ A[j][0] ].value + clusters[ A[j][1] ].value\n\t\t\t};\n\t\t\tclusters[ A[j][0] ] = node;\n\t\t\tclusters[ A[j][1] ] = null;\n\t\t\tj++;\n\t\t}\n\t\treturn clusters[ 0 ];\n\t}\n\n\treturn {\n\t\tgetClusterAssignments,\n\t\tgetClusters,\n\t\tgetTree\n\t};\n}\n\n\n// EXPORTS //\n\nexport default hclust;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport round from '@stdlib/math/base/special/round';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport { svgString2Image, getSVGString } from '@isle-project/utils/svg';\nimport html2clipboard from '@isle-project/utils/html-to-clipboard';\nimport blobToBase64 from '@isle-project/utils/blob-to-base64';\nimport Dendrogram from './hclust/dendrogram.js';\nimport FullscreenButton from './hclust/fullscreen_button.js';\nimport hclust from './hclust';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport './hierarchical_clustering.css';\n\n\n// FUNCTIONS //\n\nconst fitModel = ({ data, variables, linkage, distance }) => {\n\ttry {\n\t\tconst matrix = [];\n\t\tconst n = data[ variables[ 0 ] ].length;\n\t\tfor ( let i = 0; i < n; i++ ) {\n\t\t\tconst row = [];\n\t\t\tfor ( let j = 0; j < variables.length; j++ ) {\n\t\t\t\trow[ j ] = data[ variables[ j ] ][ i ];\n\t\t\t}\n\t\t\tmatrix.push( row );\n\t\t}\n\t\tconst result = hclust( matrix, {\n\t\t\tlinkage: linkage,\n\t\t\tdistance: distance\n\t\t});\n\t\tconst tree = result.getTree();\n\t\treturn {\n\t\t\tmatrix,\n\t\t\tresult,\n\t\t\ttree\n\t\t};\n\t} catch ( _ ) {\n\t\treturn {};\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Hierarchical Clustering.\n*\n* @property {Object} data - object of value arrays\n* @property {Array<string>} variables - names of variables used for clustering\n* @property {string} linkage - either `complete` or `single`\n* @property {string} distance - used distance (`euclidean`, `chebyshev`, `cosine`, `hamming`, or `manhattan`)\n* @property {Function} onResult - callback invoked with model object\n*/\nclass HierarchicalClustering extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst { data, variables, linkage, distance } = props;\n\t\tthis.state = {\n\t\t\t...fitModel({ data, variables, linkage, distance }),\n\t\t\t...props\n\t\t};\n\t\tprops.onResult( this.state.result );\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.variables !== prevState.variables ||\n\t\t\tnextProps.linkage !== prevState.linkage ||\n\t\t\tnextProps.distance !== prevState.distance\n\t\t) {\n\t\t\tconst { data, variables, linkage, distance } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel({ data, variables, linkage, distance }),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\tnextProps.onResult( newState.result );\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst { result } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !result ) {\n\t\t\treturn <Alert variant=\"danger\">{t('missing-attributes')}</Alert>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ overflowX: 'auto', width: '100%' }} >\n\t\t\t\t<span className=\"title\" >{t('hierarchical-clustering-summary')}</span>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"hierarchical-clustering-draggable-bar\"\n\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\tonDragStart={( ev ) => {\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/html', this.plotValue );\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/plain', this.plotKey );\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thtml2clipboard( this.plotValue );\n\t\t\t\t\t}}\n\t\t\t\t>{t('drag-plot')}</button>\n\t\t\t\t<FullscreenButton\n\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({ fullscreen: !this.state.fullscreen });\n\t\t\t\t\t}}\n\t\t\t\t\tdendrogram={<svg width={window.innerWidth} height={window.innerHeight}>\n\t\t\t\t\t\t<Dendrogram\n\t\t\t\t\t\t\tx={0} y={0} width={window.innerWidth} height={window.innerHeight-25} data={this.state.tree}\n\t\t\t\t\t\t\tcutoff={round( this.state.matrix.length / 20 )} fontSize={24}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t</svg>}\n\t\t\t\t\tt={t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"fa fa-times\" />\n\t\t\t\t</FullscreenButton>\n\t\t\t\t<div>\n\t\t\t\t\t<svg width={650} height={375} ref={svg => {\n\t\t\t\t\t\tif ( !this.svg ) {\n\t\t\t\t\t\t\tthis.svg = svg;\n\t\t\t\t\t\t\tconst width = 650;\n\t\t\t\t\t\t\tconst height = 375;\n\t\t\t\t\t\t\tconst svgString = getSVGString( this.svg );\n\t\t\t\t\t\t\tsvgString2Image( svgString, 2.0*width, 2.0*height, ( dataBlob ) => {\n\t\t\t\t\t\t\t\tblobToBase64( dataBlob ).then( str => {\n\t\t\t\t\t\t\t\t\tconst value = `<img src=\"${str}\" style=\"display: block; margin: 0 auto; max-width: 100%; max-height: 100%\" />`;\n\t\t\t\t\t\t\t\t\tthis.plotKey = `<!--IMAGE_LOG:${randomstring( 6 )}_${randomstring( 6 )}-->`;\n\t\t\t\t\t\t\t\t\tthis.plotValue = value;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Dendrogram\n\t\t\t\t\t\t\tx={0} y={0} width={650} height={350} data={this.state.tree}\n\t\t\t\t\t\t\tcutoff={round( this.state.matrix.length / 20 )}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// PROPERTIES //\n\nHierarchicalClustering.defaultProps = {\n\tlinkage: 'complete',\n\tdistance: 'euclidean',\n\tonResult() {}\n};\n\nHierarchicalClustering.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tvariables: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tlinkage: PropTypes.oneOf([ 'complete', 'single' ]),\n\tdistance: PropTypes.oneOf([ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ]),\n\tonResult: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( withPropCheck( HierarchicalClustering ) );\n","// MAIN //\n\nconst blobToBase64 = ( blob ) => {\n\tconst { FileReader } = window;\n\tconst reader = new FileReader();\n\treader.readAsDataURL( blob );\n\treturn new Promise(resolve => {\n\t\treader.onloadend = () => {\n\t\t\tresolve(reader.result);\n\t\t};\n\t});\n};\n\n\n// EXPORTS //\n\nexport default blobToBase64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is an array of arrays.\n*\n* @module @stdlib/assert/is-array-array\n*\n* @example\n* var isArrayArray = require( '@stdlib/assert/is-array-array' );\n*\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\n// MODULES //\n\nvar isArrayArray = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isArrayArray;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar arrayfun = require('./../../tools/array-function');\n\nvar isArray = require('./../../is-array'); // MAIN //\n\n/**\n* Tests if a value is an array of arrays.\n*\n* @name isArrayArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an array of arrays\n*\n* @example\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\n\n\nvar isArrayArray = arrayfun(isArray); // EXPORTS //\n\nmodule.exports = isArrayArray;","/**\n*\n*\tCOMPUTE: argmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of a numeric array and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n'use strict';\n/**\n* FUNCTION: argmax( arr )\n*\tComputes the maximum value of a numeric array and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\n\nfunction argmax(arr) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('argmax()::invalid input argument. Must provide an array.');\n  }\n\n  var len = arr.length,\n      max = arr[0],\n      idx = [0],\n      val;\n\n  for (var i = 1; i < len; i++) {\n    val = arr[i];\n\n    if (val > max) {\n      max = val;\n      idx.length = 0;\n      idx.push(i);\n    } else if (val === max) {\n      idx.push(i);\n    }\n  }\n\n  return idx;\n} // end FUNCTION argmax()\n// EXPORTS //\n\n\nmodule.exports = argmax;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // CHEBYSHEV DISTANCE //\n\n/**\n* FUNCTION: chebyshev( x, y[, accessor] )\n*\tComputes the Chebyshev distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Chebyshev distance or null\n*/\n\n\nfunction chebyshev(x, y, clbk) {\n  var len, d, v, i;\n\n  if (!isArray(x)) {\n    throw new TypeError('chebyshev()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('chebyshev()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('chebyshev()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  len = x.length;\n\n  if (len !== y.length) {\n    throw new Error('chebyshev()::invalid input arguments. Input arrays must have the same length.');\n  }\n\n  if (!len) {\n    return null;\n  }\n\n  if (clbk) {\n    v = clbk(x[0], 0, 0) - clbk(y[0], 0, 1);\n    d = v < 0 ? -v : v;\n\n    for (i = 1; i < len; i++) {\n      v = clbk(x[i], i, 0) - clbk(y[i], i, 1);\n\n      if (v < 0) {\n        v = -v;\n      }\n\n      if (v > d) {\n        d = v;\n      }\n    }\n  } else {\n    v = x[0] - y[0];\n    d = v < 0 ? -v : v;\n\n    for (i = 1; i < len; i++) {\n      v = x[i] - y[i];\n\n      if (v < 0) {\n        v = -v;\n      }\n\n      if (v > d) {\n        d = v;\n      }\n    }\n  }\n\n  return d;\n} // end FUNCTION chebyshev()\n// EXPORTS //\n\n\nmodule.exports = chebyshev;","'use strict'; // MODULES //\n\nvar similarity = require('compute-cosine-similarity'); // COSINE DISTANCE //\n\n/**\n* FUNCTION: distance( x, y[, accessor] )\n*\tComputes the cosine distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Cosine distance\n*/\n\n\nfunction distance(x, y, clbk) {\n  var s;\n\n  if (arguments.length > 2) {\n    s = similarity(x, y, clbk);\n  } else {\n    s = similarity(x, y);\n  }\n\n  return s !== null ? 1 - s : s;\n} // end FUNCTION distance()\n// EXPORTS //\n\n\nmodule.exports = distance;","'use strict'; // MODULES //\n\nvar dot = require('compute-dot'),\n    l2norm = require('compute-l2norm'),\n    isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // FUNCTIONS //\n\n/**\n * FUNCTION: partial( fn, j )\n *\tPartially applied function from the right.\n *\n * @private\n * @param {Function} fn - input function\n * @param {Number} j - array index\n * @returns {Function} partially applied function\n */\n\n\nfunction partial(fn, j) {\n  return function accessor(d, i) {\n    return fn(d, i, j);\n  };\n} // end FUNCTION partial()\n// COSINE SIMILARITY //\n\n/**\n* FUNCTION: similarity( x, y[, accessor] )\n*\tComputes the cosine similarity between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} cosine similarity or null\n*/\n\n\nfunction similarity(x, y, clbk) {\n  var a, b, c;\n\n  if (!isArray(x)) {\n    throw new TypeError('cosine-similarity()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('cosine-similarity()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('cosine-similarity()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  if (x.length !== y.length) {\n    throw new Error('cosine-similarity()::invalid input argument. Input arrays must have the same length.');\n  }\n\n  if (!x.length) {\n    return null;\n  }\n\n  if (clbk) {\n    a = dot(x, y, clbk);\n    b = l2norm(x, partial(clbk, 0));\n    c = l2norm(y, partial(clbk, 1));\n  } else {\n    a = dot(x, y);\n    b = l2norm(x);\n    c = l2norm(y);\n  }\n\n  return a / (b * c);\n} // end FUNCTION similarity()\n// EXPORTS //\n\n\nmodule.exports = similarity;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\n\n\nfunction dot(x, y, clbk) {\n  if (!isArray(x)) {\n    throw new TypeError('dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  var len = x.length,\n      sum = 0,\n      i;\n\n  if (len !== y.length) {\n    throw new Error('dot()::invalid input argument. Arrays must be of equal length.');\n  }\n\n  if (!len) {\n    return null;\n  }\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      sum += clbk(x[i], i, 0) * clbk(y[i], i, 1);\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      sum += x[i] * y[i];\n    }\n  }\n\n  return sum;\n} // end FUNCTION dot()\n// EXPORTS //\n\n\nmodule.exports = dot;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // EUCLIDEAN DISTANCE //\n\n/**\n* FUNCTION: euclidean( x, y[, accessor] )\n*\tComputes the Euclidean distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Euclidean distance or null\n*/\n\n\nfunction euclidean(x, y, clbk) {\n  var len, val, abs, t, s, r, i;\n\n  if (!isArray(x)) {\n    throw new TypeError('euclidean()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('euclidean()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('euclidean()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  len = x.length;\n\n  if (len !== y.length) {\n    throw new Error('euclidean()::invalid input arguments. Input arrays must have the same length.');\n  }\n\n  if (!len) {\n    return null;\n  }\n\n  t = 0;\n  s = 1;\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      val = clbk(x[i], i, 0) - clbk(y[i], i, 1);\n      abs = val < 0 ? -val : val;\n\n      if (abs > 0) {\n        if (abs > t) {\n          r = t / val;\n          s = 1 + s * r * r;\n          t = abs;\n        } else {\n          r = val / t;\n          s += r * r;\n        }\n      }\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      val = x[i] - y[i];\n      abs = val < 0 ? -val : val;\n\n      if (abs > 0) {\n        if (abs > t) {\n          r = t / val;\n          s = 1 + s * r * r;\n          t = abs;\n        } else {\n          r = val / t;\n          s += r * r;\n        }\n      }\n    }\n  }\n\n  return t * Math.sqrt(s);\n} // end FUNCTION euclidean()\n// EXPORTS //\n\n\nmodule.exports = euclidean;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isString = require('validate.io-string'),\n    isFunction = require('validate.io-function'); // HAMMING DISTANCE //\n\n/**\n* FUNCTION: hamming( a, b, accessor )\n*\tComputes the Hamming distance between two sequences.\n*\n* @param {String|Array} a - array or string sequence\n* @param {String|Array} b - array or string sequence\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number} Hamming distance\n*/\n\n\nfunction hamming(a, b, clbk) {\n  var aType = isString(a),\n      bType = isString(b),\n      len,\n      d,\n      i;\n\n  if (!isArray(a) && !aType) {\n    throw new TypeError('hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + a + '`.');\n  }\n\n  if (!isArray(b) && !bType) {\n    throw new TypeError('hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + b + '`.');\n  }\n\n  if (aType !== bType) {\n    throw new TypeError('hamming()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('hamming()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  len = a.length;\n\n  if (len !== b.length) {\n    throw new Error('hamming()::invalid input arguments. Sequences must be the same length.');\n  }\n\n  d = 0;\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      if (clbk(a[i], i, 0) !== clbk(b[i], i, 1)) {\n        d += 1;\n      }\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        d += 1;\n      }\n    }\n  }\n\n  return d;\n} // end FUNCTION hamming()\n// EXPORTS //\n\n\nmodule.exports = hamming;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // L2NORM //\n\n/**\n* FUNCTION: l2norm( arr[, accessor] )\n*\tCalculates the L2 norm (Euclidean norm) of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} L2 norm or null\n*/\n\n\nfunction l2norm(arr, clbk) {\n  if (!isArray(arr)) {\n    throw new TypeError('l2norm()::invalid input argument. Must provide an array.  Value: `' + arr + '`.');\n  }\n\n  if (arguments.length > 1) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('l2norm()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  var len = arr.length,\n      t = 0,\n      s = 1,\n      r,\n      val,\n      abs,\n      i;\n\n  if (!len) {\n    return null;\n  }\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      val = clbk(arr[i], i);\n      abs = val < 0 ? -val : val;\n\n      if (abs > 0) {\n        if (abs > t) {\n          r = t / val;\n          s = 1 + s * r * r;\n          t = abs;\n        } else {\n          r = val / t;\n          s = s + r * r;\n        }\n      }\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      val = arr[i];\n      abs = val < 0 ? -val : val;\n\n      if (abs > 0) {\n        if (abs > t) {\n          r = t / val;\n          s = 1 + s * r * r;\n          t = abs;\n        } else {\n          r = val / t;\n          s = s + r * r;\n        }\n      }\n    }\n  }\n\n  return t * Math.sqrt(s);\n} // end FUNCTION l2norm()\n// EXPORTS //\n\n\nmodule.exports = l2norm;","'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // MANHATTAN DISTANCE //\n\n/**\n* FUNCTION: manhattan( x, y[, accessor] )\n*\tComputes the Manhattan distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Manhattan distance or null\n*/\n\n\nfunction manhattan(x, y, clbk) {\n  var len, d, v, i;\n\n  if (!isArray(x)) {\n    throw new TypeError('manhattan()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('manhattan()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('manhattan()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  len = x.length;\n\n  if (len !== y.length) {\n    throw new Error('manhattan()::invalid input arguments. Input arrays must have the same length.');\n  }\n\n  if (!len) {\n    return null;\n  }\n\n  d = 0;\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      v = clbk(x[i], i, 0) - clbk(y[i], i, 1);\n      d += v < 0 ? -v : v;\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      v = x[i] - y[i];\n      d += v < 0 ? -v : v;\n    }\n  }\n\n  return d;\n} // end FUNCTION manhattan()\n// EXPORTS //\n\n\nmodule.exports = manhattan;","/**\n*\n*\tVALIDATE: function\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a function.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n'use strict';\n/**\n* FUNCTION: isFunction( value )\n*\tValidates if a value is a function.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a function\n*/\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n} // end FUNCTION isFunction()\n// EXPORTS //\n\n\nmodule.exports = isFunction;","/**\n*\n*\tVALIDATE: string\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a string.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n'use strict';\n/**\n* FUNCTION: isString( value )\n*\tValidates if a value is a string.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a string\n*/\n\nfunction isString(value) {\n  return typeof value === 'string' || Object.prototype.toString.call(value) === '[object String]';\n} // end FUNCTION isString()\n// EXPORTS //\n\n\nmodule.exports = isString;"],"sourceRoot":""}