{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/mathOperations.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_createSuper","Derived","result","Super","NewTarget","this","constructor","arguments","apply","possibleConstructorReturn","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","ReferenceError","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","length","descriptor","enumerable","defineProperty","key","_createClass","protoProps","staticProps","isAnyArray","object","endsWith","input","options","undefined","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","minValue","output","Array","currentMin","currentMax","RangeError","_options$min","min","autoMinMax","_options$max","max","factor","indent","repeat","indentData","inspectMatrixWithOptions","matrix","_options$maxRows","maxRows","_options$maxColumns","maxColumns","_options$maxNumSize","maxNumSize","concat","name","inspectData","rows","columns","maxI","Math","maxJ","line","j","push","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","slice","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","isArray","from","checkColumnIndices","columnIndices","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","k","clone","h","iMax","swapRows","tmp","_i","_j","echelonForm","m","n","maxRow","pivot","_options$rows","_options$columns","setSubMatrix","mulS","row","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","NaN","v","idx","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","s","_k","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","y","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","_options$min2","_options$max2","setColumn","middle","ceil","first","last","q","l","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","_i2","_options","_options$unbiased","_options$mean","_options2","_options2$center","center","newRows","newColumns","newData","fill","_options$random","random","_options$min3","_options$max3","_options$random2","interval","round","data","matrix1","matrix2","klass","for","rand","randomInt","randInt","diagonal","identity","negate","neg","tensorProduct","Matrix","_AbstractMatrix","_super","nRows","nColumns","_this","arrayData","_i3","splice","newRow","_j2","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM"],"mappings":"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","file":"static/js/11.b9e1533b.chunk.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","var toString = Object.prototype.toString;\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;","var indent = ' '.repeat(2);\nvar indentData = ' '.repeat(4);\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\nexport function inspectMatrixWithOptions(matrix) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$maxRows = options.maxRows,\n      maxRows = _options$maxRows === void 0 ? 15 : _options$maxRows,\n      _options$maxColumns = options.maxColumns,\n      maxColumns = _options$maxColumns === void 0 ? 10 : _options$maxColumns,\n      _options$maxNumSize = options.maxNumSize,\n      maxNumSize = _options$maxNumSize === void 0 ? 8 : _options$maxNumSize;\n  return \"\".concat(matrix.constructor.name, \" {\\n\").concat(indent, \"[\\n\").concat(indentData).concat(inspectData(matrix, maxRows, maxColumns, maxNumSize), \"\\n\").concat(indent, \"]\\n\").concat(indent, \"rows: \").concat(matrix.rows, \"\\n\").concat(indent, \"columns: \").concat(matrix.columns, \"\\n}\");\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  var rows = matrix.rows,\n      columns = matrix.columns;\n  var maxI = Math.min(rows, maxRows);\n  var maxJ = Math.min(columns, maxColumns);\n  var result = [];\n\n  for (var i = 0; i < maxI; i++) {\n    var line = [];\n\n    for (var j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n\n    result.push(\"\".concat(line.join(' ')));\n  }\n\n  if (maxJ !== columns) {\n    result[result.length - 1] += \" ... \".concat(columns - maxColumns, \" more columns\");\n  }\n\n  if (maxI !== rows) {\n    result.push(\"... \".concat(rows - maxRows, \" more rows\"));\n  }\n\n  return result.join(\"\\n\".concat(indentData));\n}\n\nfunction formatNumber(num, maxNumSize) {\n  var numStr = String(num);\n\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n\n  var precise = num.toPrecision(maxNumSize - 2);\n\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n\n  var exponential = num.toExponential(maxNumSize - 2);\n  var eIndex = exponential.indexOf('e');\n  var e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\n\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\n\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n\n  if (vector.length !== matrix.columns) {\n    throw new RangeError('vector size must be the same as the number of columns');\n  }\n\n  return vector;\n}\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\n\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n\n  return vector;\n}\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some(function (r) {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n  return rowIndices;\n}\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some(function (c) {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n  return columnIndices;\n}\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n\n  if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\nexport function newArray(length) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array.push(value);\n  }\n\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(\"\".concat(name, \" must be a number\"));\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}","import { newArray } from './util';\nexport function sumByRow(matrix) {\n  var sum = newArray(matrix.rows);\n\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n\n  return sum;\n}\nexport function sumByColumn(matrix) {\n  var sum = newArray(matrix.columns);\n\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n\n  return sum;\n}\nexport function sumAll(matrix) {\n  var v = 0;\n\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n\n  return v;\n}\nexport function productByRow(matrix) {\n  var sum = newArray(matrix.rows, 1);\n\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n\n  return sum;\n}\nexport function productByColumn(matrix) {\n  var sum = newArray(matrix.columns, 1);\n\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n\n  return sum;\n}\nexport function productAll(matrix) {\n  var v = 1;\n\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n\n  return v;\n}\nexport function varianceByRow(matrix, unbiased, mean) {\n  var rows = matrix.rows;\n  var cols = matrix.columns;\n  var variance = [];\n\n  for (var i = 0; i < rows; i++) {\n    var sum1 = 0;\n    var sum2 = 0;\n    var x = 0;\n\n    for (var j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n\n    if (unbiased) {\n      variance.push((sum2 - sum1 * sum1 / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - sum1 * sum1 / cols) / cols);\n    }\n  }\n\n  return variance;\n}\nexport function varianceByColumn(matrix, unbiased, mean) {\n  var rows = matrix.rows;\n  var cols = matrix.columns;\n  var variance = [];\n\n  for (var j = 0; j < cols; j++) {\n    var sum1 = 0;\n    var sum2 = 0;\n    var x = 0;\n\n    for (var i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n\n    if (unbiased) {\n      variance.push((sum2 - sum1 * sum1 / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - sum1 * sum1 / rows) / rows);\n    }\n  }\n\n  return variance;\n}\nexport function varianceAll(matrix, unbiased, mean) {\n  var rows = matrix.rows;\n  var cols = matrix.columns;\n  var size = rows * cols;\n  var sum1 = 0;\n  var sum2 = 0;\n  var x = 0;\n\n  for (var i = 0; i < rows; i++) {\n    for (var j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n\n  if (unbiased) {\n    return (sum2 - sum1 * sum1 / size) / (size - 1);\n  } else {\n    return (sum2 - sum1 * sum1 / size) / size;\n  }\n}\nexport function centerByRow(matrix, mean) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\nexport function centerByColumn(matrix, mean) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\nexport function centerAll(matrix, mean) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\nexport function getScaleByRow(matrix) {\n  var scale = [];\n\n  for (var i = 0; i < matrix.rows; i++) {\n    var sum = 0;\n\n    for (var j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n\n    scale.push(Math.sqrt(sum));\n  }\n\n  return scale;\n}\nexport function scaleByRow(matrix, scale) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\nexport function getScaleByColumn(matrix) {\n  var scale = [];\n\n  for (var j = 0; j < matrix.columns; j++) {\n    var sum = 0;\n\n    for (var i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n\n    scale.push(Math.sqrt(sum));\n  }\n\n  return scale;\n}\nexport function scaleByColumn(matrix, scale) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\nexport function getScaleAll(matrix) {\n  var divider = matrix.size - 1;\n  var sum = 0;\n\n  for (var j = 0; j < matrix.columns; j++) {\n    for (var i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n\n  return Math.sqrt(sum);\n}\nexport function scaleAll(matrix, scale) {\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}","import _possibleConstructorReturn from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport rescale from 'ml-array-rescale';\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport { sumByRow, sumByColumn, sumAll, productByRow, productByColumn, productAll, varianceByRow, varianceByColumn, varianceAll, centerByRow, centerByColumn, centerAll, scaleByRow, scaleByColumn, scaleAll, getScaleByRow, getScaleByColumn, getScaleAll } from './stat';\nimport { checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector, checkRange, checkIndices, checkNonEmpty } from './util';\nexport var AbstractMatrix = /*#__PURE__*/function () {\n  function AbstractMatrix() {\n    _classCallCheck(this, AbstractMatrix);\n  }\n\n  _createClass(AbstractMatrix, [{\n    key: \"size\",\n    get: function get() {\n      return this.rows * this.columns;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          callback.call(this, i, j);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"to1DArray\",\n    value: function to1DArray() {\n      var array = [];\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array.push(this.get(i, j));\n        }\n      }\n\n      return array;\n    }\n  }, {\n    key: \"to2DArray\",\n    value: function to2DArray() {\n      var copy = [];\n\n      for (var i = 0; i < this.rows; i++) {\n        copy.push([]);\n\n        for (var j = 0; j < this.columns; j++) {\n          copy[i].push(this.get(i, j));\n        }\n      }\n\n      return copy;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.to2DArray();\n    }\n  }, {\n    key: \"isRowVector\",\n    value: function isRowVector() {\n      return this.rows === 1;\n    }\n  }, {\n    key: \"isColumnVector\",\n    value: function isColumnVector() {\n      return this.columns === 1;\n    }\n  }, {\n    key: \"isVector\",\n    value: function isVector() {\n      return this.rows === 1 || this.columns === 1;\n    }\n  }, {\n    key: \"isSquare\",\n    value: function isSquare() {\n      return this.rows === this.columns;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.rows === 0 || this.columns === 0;\n    }\n  }, {\n    key: \"isSymmetric\",\n    value: function isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isEchelonForm\",\n    value: function isEchelonForm() {\n      var i = 0;\n      var j = 0;\n      var previousColumn = -1;\n      var isEchelonForm = true;\n      var checked = false;\n\n      while (i < this.rows && isEchelonForm) {\n        j = 0;\n        checked = false;\n\n        while (j < this.columns && checked === false) {\n          if (this.get(i, j) === 0) {\n            j++;\n          } else if (this.get(i, j) === 1 && j > previousColumn) {\n            checked = true;\n            previousColumn = j;\n          } else {\n            isEchelonForm = false;\n            checked = true;\n          }\n        }\n\n        i++;\n      }\n\n      return isEchelonForm;\n    }\n  }, {\n    key: \"isReducedEchelonForm\",\n    value: function isReducedEchelonForm() {\n      var i = 0;\n      var j = 0;\n      var previousColumn = -1;\n      var isReducedEchelonForm = true;\n      var checked = false;\n\n      while (i < this.rows && isReducedEchelonForm) {\n        j = 0;\n        checked = false;\n\n        while (j < this.columns && checked === false) {\n          if (this.get(i, j) === 0) {\n            j++;\n          } else if (this.get(i, j) === 1 && j > previousColumn) {\n            checked = true;\n            previousColumn = j;\n          } else {\n            isReducedEchelonForm = false;\n            checked = true;\n          }\n        }\n\n        for (var k = j + 1; k < this.rows; k++) {\n          if (this.get(i, k) !== 0) {\n            isReducedEchelonForm = false;\n          }\n        }\n\n        i++;\n      }\n\n      return isReducedEchelonForm;\n    }\n  }, {\n    key: \"echelonForm\",\n    value: function echelonForm() {\n      var result = this.clone();\n      var h = 0;\n      var k = 0;\n\n      while (h < result.rows && k < result.columns) {\n        var iMax = h;\n\n        for (var i = h; i < result.rows; i++) {\n          if (result.get(i, k) > result.get(iMax, k)) {\n            iMax = i;\n          }\n        }\n\n        if (result.get(iMax, k) === 0) {\n          k++;\n        } else {\n          result.swapRows(h, iMax);\n          var tmp = result.get(h, k);\n\n          for (var j = k; j < result.columns; j++) {\n            result.set(h, j, result.get(h, j) / tmp);\n          }\n\n          for (var _i = h + 1; _i < result.rows; _i++) {\n            var factor = result.get(_i, k) / result.get(h, k);\n            result.set(_i, k, 0);\n\n            for (var _j = k + 1; _j < result.columns; _j++) {\n              result.set(_i, _j, result.get(_i, _j) - result.get(h, _j) * factor);\n            }\n          }\n\n          h++;\n          k++;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"reducedEchelonForm\",\n    value: function reducedEchelonForm() {\n      var result = this.echelonForm();\n      var m = result.columns;\n      var n = result.rows;\n      var h = n - 1;\n\n      while (h >= 0) {\n        if (result.maxRow(h) === 0) {\n          h--;\n        } else {\n          var p = 0;\n          var pivot = false;\n\n          while (p < n && pivot === false) {\n            if (result.get(h, p) === 1) {\n              pivot = true;\n            } else {\n              p++;\n            }\n          }\n\n          for (var i = 0; i < h; i++) {\n            var factor = result.get(i, p);\n\n            for (var j = p; j < m; j++) {\n              var tmp = result.get(i, j) - factor * result.get(h, j);\n              result.set(i, j, tmp);\n            }\n          }\n\n          h--;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"set\",\n    value: function set() {\n      throw new Error('set method is unimplemented');\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      throw new Error('get method is unimplemented');\n    }\n  }, {\n    key: \"repeat\",\n    value: function repeat() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options$rows = options.rows,\n          rows = _options$rows === void 0 ? 1 : _options$rows,\n          _options$columns = options.columns,\n          columns = _options$columns === void 0 ? 1 : _options$columns;\n\n      if (!Number.isInteger(rows) || rows <= 0) {\n        throw new TypeError('rows must be a positive integer');\n      }\n\n      if (!Number.isInteger(columns) || columns <= 0) {\n        throw new TypeError('columns must be a positive integer');\n      }\n\n      var matrix = new Matrix(this.rows * rows, this.columns * columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n\n      return matrix;\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      return this.mulS(-1);\n    }\n  }, {\n    key: \"getRow\",\n    value: function getRow(index) {\n      checkRowIndex(this, index);\n      var row = [];\n\n      for (var i = 0; i < this.columns; i++) {\n        row.push(this.get(index, i));\n      }\n\n      return row;\n    }\n  }, {\n    key: \"getRowVector\",\n    value: function getRowVector(index) {\n      return Matrix.rowVector(this.getRow(index));\n    }\n  }, {\n    key: \"setRow\",\n    value: function setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"swapRows\",\n    value: function swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getColumn\",\n    value: function getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = [];\n\n      for (var i = 0; i < this.rows; i++) {\n        column.push(this.get(i, index));\n      }\n\n      return column;\n    }\n  }, {\n    key: \"getColumnVector\",\n    value: function getColumnVector(index) {\n      return Matrix.columnVector(this.getColumn(index));\n    }\n  }, {\n    key: \"setColumn\",\n    value: function setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"swapColumns\",\n    value: function swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"addRowVector\",\n    value: function addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"subRowVector\",\n    value: function subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"mulRowVector\",\n    value: function mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"divRowVector\",\n    value: function divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"addColumnVector\",\n    value: function addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"subColumnVector\",\n    value: function subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"mulColumnVector\",\n    value: function mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"divColumnVector\",\n    value: function divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"mulRow\",\n    value: function mulRow(index, value) {\n      checkRowIndex(this, index);\n\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"mulColumn\",\n    value: function mulColumn(index, value) {\n      checkColumnIndex(this, index);\n\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(0, 0);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"maxIndex\",\n    value: function maxIndex() {\n      checkNonEmpty(this);\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(0, 0);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"minIndex\",\n    value: function minIndex() {\n      checkNonEmpty(this);\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"maxRow\",\n    value: function maxRow(row) {\n      checkRowIndex(this, row);\n\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(row, 0);\n\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"maxRowIndex\",\n    value: function maxRowIndex(row) {\n      checkRowIndex(this, row);\n      checkNonEmpty(this);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"minRow\",\n    value: function minRow(row) {\n      checkRowIndex(this, row);\n\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(row, 0);\n\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"minRowIndex\",\n    value: function minRowIndex(row) {\n      checkRowIndex(this, row);\n      checkNonEmpty(this);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"maxColumn\",\n    value: function maxColumn(column) {\n      checkColumnIndex(this, column);\n\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(0, column);\n\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"maxColumnIndex\",\n    value: function maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      checkNonEmpty(this);\n      var v = this.get(0, column);\n      var idx = [0, column];\n\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"minColumn\",\n    value: function minColumn(column) {\n      checkColumnIndex(this, column);\n\n      if (this.isEmpty()) {\n        return NaN;\n      }\n\n      var v = this.get(0, column);\n\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"minColumnIndex\",\n    value: function minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      checkNonEmpty(this);\n      var v = this.get(0, column);\n      var idx = [0, column];\n\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n\n      return idx;\n    }\n  }, {\n    key: \"diag\",\n    value: function diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = [];\n\n      for (var i = 0; i < min; i++) {\n        diag.push(this.get(i, i));\n      }\n\n      return diag;\n    }\n  }, {\n    key: \"norm\",\n    value: function norm() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'frobenius';\n      var result = 0;\n\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(\"unknown norm type: \".concat(type));\n      }\n    }\n  }, {\n    key: \"cumulativeSum\",\n    value: function cumulativeSum() {\n      var sum = 0;\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(vector2) {\n      if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n\n      var dot = 0;\n\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n\n      return dot;\n    }\n  }, {\n    key: \"mmul\",\n    value: function mmul(other) {\n      other = Matrix.checkMatrix(other);\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n      var result = new Matrix(m, p);\n      var Bcolj = new Float64Array(n);\n\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n\n          for (var _k = 0; _k < n; _k++) {\n            s += this.get(i, _k) * Bcolj[_k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"strassen2x2\",\n    value: function strassen2x2(other) {\n      other = Matrix.checkMatrix(other);\n      var result = new Matrix(2, 2);\n      var a11 = this.get(0, 0);\n      var b11 = other.get(0, 0);\n      var a12 = this.get(0, 1);\n      var b12 = other.get(0, 1);\n      var a21 = this.get(1, 0);\n      var b21 = other.get(1, 0);\n      var a22 = this.get(1, 1);\n      var b22 = other.get(1, 1); // Compute intermediate values.\n\n      var m1 = (a11 + a22) * (b11 + b22);\n      var m2 = (a21 + a22) * b11;\n      var m3 = a11 * (b12 - b22);\n      var m4 = a22 * (b21 - b11);\n      var m5 = (a11 + a12) * b22;\n      var m6 = (a21 - a11) * (b11 + b12);\n      var m7 = (a12 - a22) * (b21 + b22); // Combine intermediate values into the output.\n\n      var c00 = m1 + m4 - m5 + m7;\n      var c01 = m3 + m5;\n      var c10 = m2 + m4;\n      var c11 = m1 - m2 + m3 + m6;\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n  }, {\n    key: \"strassen3x3\",\n    value: function strassen3x3(other) {\n      other = Matrix.checkMatrix(other);\n      var result = new Matrix(3, 3);\n      var a00 = this.get(0, 0);\n      var a01 = this.get(0, 1);\n      var a02 = this.get(0, 2);\n      var a10 = this.get(1, 0);\n      var a11 = this.get(1, 1);\n      var a12 = this.get(1, 2);\n      var a20 = this.get(2, 0);\n      var a21 = this.get(2, 1);\n      var a22 = this.get(2, 2);\n      var b00 = other.get(0, 0);\n      var b01 = other.get(0, 1);\n      var b02 = other.get(0, 2);\n      var b10 = other.get(1, 0);\n      var b11 = other.get(1, 1);\n      var b12 = other.get(1, 2);\n      var b20 = other.get(2, 0);\n      var b21 = other.get(2, 1);\n      var b22 = other.get(2, 2);\n      var m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      var m2 = (a00 - a10) * (-b01 + b11);\n      var m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      var m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      var m5 = (a10 + a11) * (-b00 + b01);\n      var m6 = a00 * b00;\n      var m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      var m8 = (-a00 + a20) * (b02 - b12);\n      var m9 = (a20 + a21) * (-b00 + b02);\n      var m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      var m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      var m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      var m13 = (a02 - a22) * (b11 - b21);\n      var m14 = a02 * b20;\n      var m15 = (a21 + a22) * (-b20 + b21);\n      var m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      var m17 = (a02 - a12) * (b12 - b22);\n      var m18 = (a11 + a12) * (-b20 + b22);\n      var m19 = a01 * b10;\n      var m20 = a12 * b21;\n      var m21 = a10 * b02;\n      var m22 = a20 * b01;\n      var m23 = a22 * b22;\n      var c00 = m6 + m14 + m19;\n      var c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      var c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      var c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      var c11 = m2 + m4 + m5 + m6 + m20;\n      var c12 = m14 + m16 + m17 + m18 + m21;\n      var c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      var c21 = m12 + m13 + m14 + m15 + m22;\n      var c22 = m6 + m7 + m8 + m9 + m23;\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n  }, {\n    key: \"mmulStrassen\",\n    value: function mmulStrassen(y) {\n      y = Matrix.checkMatrix(y);\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Multiplying \".concat(r1, \" x \").concat(c1, \" and \").concat(r2, \" x \").concat(c2, \" matrix: dimensions do not match.\"));\n      } // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n\n\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n\n        if (r === rows && c === cols) {\n          return mat;\n        } else {\n          var resultat = AbstractMatrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      } // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c); // Our recursive multiplication function.\n\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        } // Apply dynamic padding.\n\n\n        if (rows % 2 === 1 && cols % 2 === 1) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10); // Subdivide input matrices.\n\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1); // Compute intermediate values.\n\n        var m1 = blockMult(AbstractMatrix.add(a11, a22), AbstractMatrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(AbstractMatrix.sub(a21, a11), AbstractMatrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(AbstractMatrix.sub(a12, a22), AbstractMatrix.add(b21, b22), halfRows, halfCols); // Combine intermediate values into the output.\n\n        var c11 = AbstractMatrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = AbstractMatrix.add(m3, m5);\n        var c21 = AbstractMatrix.add(m2, m4);\n        var c22 = AbstractMatrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6); // Crop output to the desired size (undo dynamic padding).\n\n        var resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n\n      return blockMult(x, y, r, c);\n    }\n  }, {\n    key: \"scaleRows\",\n    value: function scaleRows() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options$min = options.min,\n          min = _options$min === void 0 ? 0 : _options$min,\n          _options$max = options.max,\n          max = _options$max === void 0 ? 1 : _options$max;\n      if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n      if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n      if (min >= max) throw new RangeError('min must be smaller than max');\n      var newMatrix = new Matrix(this.rows, this.columns);\n\n      for (var i = 0; i < this.rows; i++) {\n        var row = this.getRow(i);\n\n        if (row.length > 0) {\n          rescale(row, {\n            min: min,\n            max: max,\n            output: row\n          });\n        }\n\n        newMatrix.setRow(i, row);\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"scaleColumns\",\n    value: function scaleColumns() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options$min2 = options.min,\n          min = _options$min2 === void 0 ? 0 : _options$min2,\n          _options$max2 = options.max,\n          max = _options$max2 === void 0 ? 1 : _options$max2;\n      if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n      if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n      if (min >= max) throw new RangeError('min must be smaller than max');\n      var newMatrix = new Matrix(this.rows, this.columns);\n\n      for (var i = 0; i < this.columns; i++) {\n        var column = this.getColumn(i);\n\n        if (column.length) {\n          rescale(column, {\n            min: min,\n            max: max,\n            output: column\n          });\n        }\n\n        newMatrix.setColumn(i, column);\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"flipRows\",\n    value: function flipRows() {\n      var middle = Math.ceil(this.columns / 2);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < middle; j++) {\n          var first = this.get(i, j);\n          var last = this.get(i, this.columns - 1 - j);\n          this.set(i, j, last);\n          this.set(i, this.columns - 1 - j, first);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"flipColumns\",\n    value: function flipColumns() {\n      var middle = Math.ceil(this.rows / 2);\n\n      for (var j = 0; j < this.columns; j++) {\n        for (var i = 0; i < middle; i++) {\n          var first = this.get(i, j);\n          var last = this.get(this.rows - 1 - i, j);\n          this.set(i, j, last);\n          this.set(this.rows - 1 - i, j, first);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"kroneckerProduct\",\n    value: function kroneckerProduct(other) {\n      other = Matrix.checkMatrix(other);\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n      var result = new Matrix(m * p, n * q);\n\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"kroneckerSum\",\n    value: function kroneckerSum(other) {\n      other = Matrix.checkMatrix(other);\n\n      if (!this.isSquare() || !other.isSquare()) {\n        throw new Error('Kronecker Sum needs two Square Matrices');\n      }\n\n      var m = this.rows;\n      var n = other.rows;\n      var AxI = this.kroneckerProduct(Matrix.eye(n, n));\n      var IxB = Matrix.eye(m, m).kroneckerProduct(other);\n      return AxI.add(IxB);\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      var result = new Matrix(this.columns, this.rows);\n\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"sortRows\",\n    value: function sortRows() {\n      var compareFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : compareNumbers;\n\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"sortColumns\",\n    value: function sortColumns() {\n      var compareFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : compareNumbers;\n\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"subMatrix\",\n    value: function subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new Matrix(endRow - startRow + 1, endColumn - startColumn + 1);\n\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"subMatrixRow\",\n    value: function subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n\n      if (startColumn > endColumn || startColumn < 0 || startColumn >= this.columns || endColumn < 0 || endColumn >= this.columns) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(\"Row index out of range: \".concat(indices[i]));\n          }\n\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"subMatrixColumn\",\n    value: function subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n\n      if (startRow > endRow || startRow < 0 || startRow >= this.rows || endRow < 0 || endRow >= this.rows) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(\"Column index out of range: \".concat(indices[i]));\n          }\n\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"setSubMatrix\",\n    value: function setSubMatrix(matrix, startRow, startColumn) {\n      matrix = Matrix.checkMatrix(matrix);\n\n      if (matrix.isEmpty()) {\n        return this;\n      }\n\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this.set(startRow + i, startColumn + j, matrix.get(i, j));\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"selection\",\n    value: function selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n\n      return trace;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newMatrix = new Matrix(this.rows, this.columns);\n\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"sum\",\n    value: function sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n\n        case 'column':\n          return sumByColumn(this);\n\n        case undefined:\n          return sumAll(this);\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"product\",\n    value: function product(by) {\n      switch (by) {\n        case 'row':\n          return productByRow(this);\n\n        case 'column':\n          return productByColumn(this);\n\n        case undefined:\n          return productAll(this);\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(by) {\n      var sum = this.sum(by);\n\n      switch (by) {\n        case 'row':\n          {\n            for (var i = 0; i < this.rows; i++) {\n              sum[i] /= this.columns;\n            }\n\n            return sum;\n          }\n\n        case 'column':\n          {\n            for (var _i2 = 0; _i2 < this.columns; _i2++) {\n              sum[_i2] /= this.rows;\n            }\n\n            return sum;\n          }\n\n        case undefined:\n          return sum / this.size;\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"variance\",\n    value: function variance(by) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof by === 'object') {\n        options = by;\n        by = undefined;\n      }\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options = options,\n          _options$unbiased = _options.unbiased,\n          unbiased = _options$unbiased === void 0 ? true : _options$unbiased,\n          _options$mean = _options.mean,\n          mean = _options$mean === void 0 ? this.mean(by) : _options$mean;\n\n      if (typeof unbiased !== 'boolean') {\n        throw new TypeError('unbiased must be a boolean');\n      }\n\n      switch (by) {\n        case 'row':\n          {\n            if (!Array.isArray(mean)) {\n              throw new TypeError('mean must be an array');\n            }\n\n            return varianceByRow(this, unbiased, mean);\n          }\n\n        case 'column':\n          {\n            if (!Array.isArray(mean)) {\n              throw new TypeError('mean must be an array');\n            }\n\n            return varianceByColumn(this, unbiased, mean);\n          }\n\n        case undefined:\n          {\n            if (typeof mean !== 'number') {\n              throw new TypeError('mean must be a number');\n            }\n\n            return varianceAll(this, unbiased, mean);\n          }\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"standardDeviation\",\n    value: function standardDeviation(by, options) {\n      if (typeof by === 'object') {\n        options = by;\n        by = undefined;\n      }\n\n      var variance = this.variance(by, options);\n\n      if (by === undefined) {\n        return Math.sqrt(variance);\n      } else {\n        for (var i = 0; i < variance.length; i++) {\n          variance[i] = Math.sqrt(variance[i]);\n        }\n\n        return variance;\n      }\n    }\n  }, {\n    key: \"center\",\n    value: function center(by) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof by === 'object') {\n        options = by;\n        by = undefined;\n      }\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options2 = options,\n          _options2$center = _options2.center,\n          center = _options2$center === void 0 ? this.mean(by) : _options2$center;\n\n      switch (by) {\n        case 'row':\n          {\n            if (!Array.isArray(center)) {\n              throw new TypeError('center must be an array');\n            }\n\n            centerByRow(this, center);\n            return this;\n          }\n\n        case 'column':\n          {\n            if (!Array.isArray(center)) {\n              throw new TypeError('center must be an array');\n            }\n\n            centerByColumn(this, center);\n            return this;\n          }\n\n        case undefined:\n          {\n            if (typeof center !== 'number') {\n              throw new TypeError('center must be a number');\n            }\n\n            centerAll(this, center);\n            return this;\n          }\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(by) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof by === 'object') {\n        options = by;\n        by = undefined;\n      }\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var scale = options.scale;\n\n      switch (by) {\n        case 'row':\n          {\n            if (scale === undefined) {\n              scale = getScaleByRow(this);\n            } else if (!Array.isArray(scale)) {\n              throw new TypeError('scale must be an array');\n            }\n\n            scaleByRow(this, scale);\n            return this;\n          }\n\n        case 'column':\n          {\n            if (scale === undefined) {\n              scale = getScaleByColumn(this);\n            } else if (!Array.isArray(scale)) {\n              throw new TypeError('scale must be an array');\n            }\n\n            scaleByColumn(this, scale);\n            return this;\n          }\n\n        case undefined:\n          {\n            if (scale === undefined) {\n              scale = getScaleAll(this);\n            } else if (typeof scale !== 'number') {\n              throw new TypeError('scale must be a number');\n            }\n\n            scaleAll(this, scale);\n            return this;\n          }\n\n        default:\n          throw new Error(\"invalid option: \".concat(by));\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(options) {\n      return inspectMatrixWithOptions(this, options);\n    }\n  }], [{\n    key: \"from1DArray\",\n    value: function from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n\n      if (length !== newData.length) {\n        throw new RangeError('data length does not match given dimensions');\n      }\n\n      var newMatrix = new Matrix(newRows, newColumns);\n\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n\n      return newMatrix;\n    }\n  }, {\n    key: \"rowVector\",\n    value: function rowVector(newData) {\n      var vector = new Matrix(1, newData.length);\n\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n\n      return vector;\n    }\n  }, {\n    key: \"columnVector\",\n    value: function columnVector(newData) {\n      var vector = new Matrix(newData.length, 1);\n\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n\n      return vector;\n    }\n  }, {\n    key: \"zeros\",\n    value: function zeros(rows, columns) {\n      return new Matrix(rows, columns);\n    }\n  }, {\n    key: \"ones\",\n    value: function ones(rows, columns) {\n      return new Matrix(rows, columns).fill(1);\n    }\n  }, {\n    key: \"rand\",\n    value: function rand(rows, columns) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options$random = options.random,\n          random = _options$random === void 0 ? Math.random : _options$random;\n      var matrix = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, random());\n        }\n      }\n\n      return matrix;\n    }\n  }, {\n    key: \"randInt\",\n    value: function randInt(rows, columns) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof options !== 'object') {\n        throw new TypeError('options must be an object');\n      }\n\n      var _options$min3 = options.min,\n          min = _options$min3 === void 0 ? 0 : _options$min3,\n          _options$max3 = options.max,\n          max = _options$max3 === void 0 ? 1000 : _options$max3,\n          _options$random2 = options.random,\n          random = _options$random2 === void 0 ? Math.random : _options$random2;\n      if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n      if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n      if (min >= max) throw new RangeError('min must be smaller than max');\n      var interval = max - min;\n      var matrix = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = min + Math.round(random() * interval);\n          matrix.set(i, j, value);\n        }\n      }\n\n      return matrix;\n    }\n  }, {\n    key: \"eye\",\n    value: function eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n\n      return matrix;\n    }\n  }, {\n    key: \"diag\",\n    value: function diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n\n      return matrix;\n    }\n  }, {\n    key: \"min\",\n    value: function min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"max\",\n    value: function max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"checkMatrix\",\n    value: function checkMatrix(value) {\n      return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n    }\n  }, {\n    key: \"isMatrix\",\n    value: function isMatrix(value) {\n      return value != null && value.klass === 'Matrix';\n    }\n  }]);\n\n  return AbstractMatrix;\n}();\nAbstractMatrix.prototype.klass = 'Matrix';\n\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n} // Synonyms\n\n\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct = AbstractMatrix.prototype.kroneckerProduct;\n\nvar Matrix = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(Matrix, _AbstractMatrix);\n\n  var _super = _createSuper(Matrix);\n\n  function Matrix(nRows, nColumns) {\n    var _this;\n\n    _classCallCheck(this, Matrix);\n\n    _this = _super.call(this);\n\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return _possibleConstructorReturn(_this, nRows.clone());\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      _this.data = [];\n\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (var i = 0; i < nRows; i++) {\n          _this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      var arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n\n      if (typeof nColumns !== 'number') {\n        throw new TypeError('Data must be a 2D array with at least one element');\n      }\n\n      _this.data = [];\n\n      for (var _i3 = 0; _i3 < nRows; _i3++) {\n        if (arrayData[_i3].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n\n        _this.data.push(Float64Array.from(arrayData[_i3]));\n      }\n    } else {\n      throw new TypeError('First argument must be a positive number or an array');\n    }\n\n    _this.rows = nRows;\n    _this.columns = nColumns;\n    return _this;\n  }\n\n  _createClass(Matrix, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.data[rowIndex][columnIndex] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.data[rowIndex][columnIndex];\n    }\n  }, {\n    key: \"removeRow\",\n    value: function removeRow(index) {\n      checkRowIndex(this, index);\n      this.data.splice(index, 1);\n      this.rows -= 1;\n      return this;\n    }\n  }, {\n    key: \"addRow\",\n    value: function addRow(index, array) {\n      if (array === undefined) {\n        array = index;\n        index = this.rows;\n      }\n\n      checkRowIndex(this, index, true);\n      array = Float64Array.from(checkRowVector(this, array));\n      this.data.splice(index, 0, array);\n      this.rows += 1;\n      return this;\n    }\n  }, {\n    key: \"removeColumn\",\n    value: function removeColumn(index) {\n      checkColumnIndex(this, index);\n\n      for (var i = 0; i < this.rows; i++) {\n        var newRow = new Float64Array(this.columns - 1);\n\n        for (var j = 0; j < index; j++) {\n          newRow[j] = this.data[i][j];\n        }\n\n        for (var _j2 = index + 1; _j2 < this.columns; _j2++) {\n          newRow[_j2 - 1] = this.data[i][_j2];\n        }\n\n        this.data[i] = newRow;\n      }\n\n      this.columns -= 1;\n      return this;\n    }\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(index, array) {\n      if (typeof array === 'undefined') {\n        array = index;\n        index = this.columns;\n      }\n\n      checkColumnIndex(this, index, true);\n      array = checkColumnVector(this, array);\n\n      for (var i = 0; i < this.rows; i++) {\n        var newRow = new Float64Array(this.columns + 1);\n        var j = 0;\n\n        for (; j < index; j++) {\n          newRow[j] = this.data[i][j];\n        }\n\n        newRow[j++] = array[i];\n\n        for (; j < this.columns + 1; j++) {\n          newRow[j] = this.data[i][j - 1];\n        }\n\n        this.data[i] = newRow;\n      }\n\n      this.columns += 1;\n      return this;\n    }\n  }]);\n\n  return Matrix;\n}(AbstractMatrix);\n\nexport { Matrix as default };\ninstallMathOperations(AbstractMatrix, Matrix);","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, ~this.get(i, j));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    var newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    if (this.rows !== matrix.rows || this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n\n    for (var i = 0; i < this.rows; i++) {\n      for (var j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n\n    return this;\n  };\n}"],"sourceRoot":""}