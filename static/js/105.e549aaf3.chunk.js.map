{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/frequency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["FrequencyTableMenu","props","defaultValue","variables","groupingVariables","t","useState","calculateRelative","setCalculateRelative","calculateCounts","setCalculateCounts","variable","setVariable","group","setGroup","nDecimalPlaces","setNDecimalPlaces","Header","as","title","content","Body","legend","options","onChange","clearable","menuPlacement","tooltip","inline","width","max","min","variant","block","onClick","output","data","logAction","DATA_EXPLORER_FREQUENCY_TABLE","onCreated","disabled","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","createTooltip","step","PINF","NINF","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","updateValue","state","session","this","globalVal","input","type","handleChange","aria-label","tooltipPlacement","style","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","CreateTooltip","NumberInput","debug","logger","uid","generateUID","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","number"],"mappings":"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","file":"static/js/105.e549aaf3.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport FrequencyTable from '@isle-project/components/tables/frequency-table';\nimport { DATA_EXPLORER_FREQUENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst FrequencyTableMenu = ( props ) => {\n\tconst { defaultValue, variables, groupingVariables, t } = props;\n\n\tconst [ calculateRelative, setCalculateRelative ] = useState( false );\n\tconst [ calculateCounts, setCalculateCounts ] = useState( true );\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ nDecimalPlaces, setNDecimalPlaces ] = useState( 3 );\n\n\tconst generateFrequencyTable = () => {\n\t\tconst output = <FrequencyTable\n\t\t\tvariable={variable}\n\t\t\tgroup={group}\n\t\t\tcalculateCounts={calculateCounts}\n\t\t\tcalculateRelative={calculateRelative}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdata={props.data}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_FREQUENCY_TABLE, {\n\t\t\tvariable, group, calculateRelative, calculateCounts, nDecimalPlaces\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Frequency Table')}\n\t\t\t\t<QuestionButton title={t('Frequency Table')} content={t('Frequency Table-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\ttooltip={t('freq-table-group-by-tooltip')}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('counts')}\n\t\t\t\t\t\t\tdefaultValue={calculateCounts}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateCounts( !calculateCounts );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\t\tdefaultValue={calculateRelative}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateRelative( !calculateRelative );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ calculateRelative ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tdefaultValue={nDecimalPlaces}\n\t\t\t\t\t\tonChange={setNDecimalPlaces}\n\t\t\t\t\t/>\n\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t</p> : null }\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tblock\n\t\t\t\t\tonClick={generateFrequencyTable}\n\t\t\t\t\tdisabled={!calculateCounts && !calculateRelative}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nFrequencyTableMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nFrequencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FrequencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}