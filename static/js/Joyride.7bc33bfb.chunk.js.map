{"version":3,"sources":["../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/defaults.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/mergefcn.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/merge.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/deepmerge.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/merge/lib/validate.js","../node_modules/@isle-project/utils/z-index-adjustment/index.js","../node_modules/@isle-project/components/joyride/main.js"],"names":["DEFAULTS","module","exports","isObject","deepMerge","opts","target","nargs","arg","src","i","arguments","length","Error","TypeError","Array","level","copy","override","extend","setReadOnly","merge","defaults","mergefcn","objectKeys","hasOwnProp","isBuffer","isFunction","typeOf","deepCopy","source","hasProp","isFunc","name","keys","curr","key","val","tmp","validate","options","err","isBoolean","isPrimitive","isPositiveInteger","zIndexAdjustment","child","node","parentNode","HTMLElement","zIndex","window","getComputedStyle","getPropertyValue","addResources","STYLES","arrowColor","backgroundColor","primaryColor","textColor","overlayColor","spotlightShadow","beaconSize","tooltipContainer","textAlign","Wrapper","props","prevProps","this","t","styles","showSkipButton","run","steps","locale","back","close","last","next","skip","Component","defaultProps","scrollToSteps","withTranslation"],"mappings":";4FAmBA,IAGIA,EAAW,CACb,MAJS,EAAQ,IAKjB,UAAY,EACZ,QAAU,EACV,MAAQ,GAGVC,EAAOC,QAAUF,G,kCCVjB,IAAIG,EAAW,EAAQ,KAEnBC,EAAY,EAAQ,MAsFxBH,EAAOC,QA9DP,SAAkBG,GAChB,OAyBA,SAAeC,GACb,IAAIC,EACAC,EACAC,EACAC,EAGJ,IAFAH,EAAQI,UAAUC,OAAS,GAEf,EACV,MAAM,IAAIC,MAAM,mGAGlB,IAAKV,EAASG,GACZ,MAAM,IAAIQ,UAAU,+DAAiER,EAAS,MAKhG,IAFAG,EAAM,IAAIM,MAAMR,GAEXG,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAG1B,IAAKP,EAFLK,EAAMG,UAAUD,EAAI,IAGlB,MAAM,IAAII,UAAU,+DAAiEN,EAAM,MAG7FC,EAAIC,GAAKF,EAGX,IAAKE,EAAI,EAAGA,EAAIH,EAAOG,IACrBN,EAAUE,EAAQG,EAAIC,GAAIL,EAAKW,MAAOX,EAAKY,KAAMZ,EAAKa,SAAUb,EAAKc,QAGvE,OAAOb,K,kCClDX,IAAIc,EAAc,EAAQ,IAEtBC,EAAQ,EAAQ,MAKpBD,EAAYC,EAAO,UAHL,EAAQ,OAKtBpB,EAAOC,QAAUmB,G,kCC1CjB,IAAIC,EAAW,EAAQ,MA8BnBD,EA5BW,EAAQ,KA4BXE,CAASD,GAErBrB,EAAOC,QAAUmB,G,kCChCjB,IAAIG,EAAa,EAAQ,IAErBrB,EAAW,EAAQ,KAEnBsB,EAAa,EAAQ,IAErBC,EAAW,EAAQ,IAEnBC,EAAa,EAAQ,IAErBC,EAAS,EAAQ,IAEjBC,EAAW,EAAQ,IA+EvB5B,EAAOC,QAhEP,SAASE,EAAUE,EAAQwB,EAAQd,EAAOC,EAAMC,EAAUC,GACxD,IAAIY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA5B,EAQJ,IANAsB,EAASL,EAAWT,GAEpBF,GAAS,EAETkB,EAAOV,EAAWM,GAEbpB,EAAI,EAAGA,EAAIwB,EAAKtB,OAAQF,IAI3B,GAHA0B,EAAMF,EAAKxB,IACXqB,EAAUN,EAAWnB,EAAQ8B,KAEZjB,EAMjB,GAFAkB,EAAMP,EAAOM,GAETL,EAAS,CAIX,GAHAI,EAAO7B,EAAO8B,GACdH,EAAOL,EAAOO,IAETT,EAASS,IAAkB,WAATF,GAAqB9B,EAASkC,IAAQrB,EAAO,CAClEZ,EAAU+B,EAAME,EAAKrB,EAAOC,EAAMC,EAAUC,GAC5C,SAIEa,GACFM,EAAMpB,EAASiB,EAAME,EAAKD,GAEtBnB,GAAQqB,IAAQH,GAAQG,IAAQD,IAClCC,EAAMT,EAASS,IAGjBhC,EAAO8B,GAAOE,GAEPpB,IAEHZ,EAAO8B,GADLnB,EACYY,EAASQ,GAETA,QAKlB/B,EAAO8B,GADFnB,EACSY,EAASQ,GAGPA,I,kCCrFxB,IAAIpB,EAAO,EAAQ,IAEfsB,EAAW,EAAQ,MAEnBjB,EAAW,EAAQ,MAEnBC,EAAW,EAAQ,MAwCvBtB,EAAOC,QAdP,SAAiBsC,GACf,IAAInC,EACAoC,EAIJ,GAHApC,EAAOY,EAAKK,GACZmB,EAAMF,EAASlC,EAAMmC,GAGnB,MAAMC,EAGR,OAAOlB,EAASlB,K,kCC1ClB,IAAIF,EAAW,EAAQ,KAEnBsB,EAAa,EAAQ,IAErBiB,EAAY,EAAQ,IAA6BC,YAEjDhB,EAAa,EAAQ,IAErBiB,EAAoB,EAAQ,KAAsCD,YAyDtE1C,EAAOC,QAzCP,SAAkBG,EAAMmC,GACtB,OAAKrC,EAASqC,GAIVf,EAAWe,EAAS,WACtBnC,EAAKW,MAAQwB,EAAQxB,OAEhB4B,EAAkBvC,EAAKW,QACnB,IAAIF,UAAU,uEAAyET,EAAKW,MAAQ,MAI3GS,EAAWe,EAAS,UACtBnC,EAAKY,KAAOuB,EAAQvB,MAEfyB,EAAUrC,EAAKY,OACX,IAAIH,UAAU,uEAAyET,EAAKY,KAAO,OAI1GQ,EAAWe,EAAS,cACtBnC,EAAKa,SAAWsB,EAAQtB,SAEnBwB,EAAUrC,EAAKa,WAAcS,EAAWtB,EAAKa,WAKhDO,EAAWe,EAAS,YACtBnC,EAAKc,OAASqB,EAAQrB,QAEjBuB,EAAUrC,EAAKc,SACX,IAAIL,UAAU,yEAA2ET,EAAKc,OAAS,MAI3G,KAZI,IAAIL,UAAU,gGAAkGT,EAAKa,SAAW,MAvBlI,IAAIJ,UAAU,iEAAmE0B,EAAU,Q,6ICPvFK,MAnBf,SAA2BC,GAC1B,IAAMA,EACL,OAAO,EAGR,IADA,IAAIC,EAAOD,EAAME,WACTD,aAAgBE,aAAc,CACrC,IACMC,EADgBC,OAAOC,iBAAkBL,GAClBM,iBAAkB,WAC/C,GAAgB,SAAXH,EACJ,OAAOA,EAERH,EAAOA,EAAKC,WAEb,OAAO,G,SCnBRM,YAAc,WACd,IAAMC,EAAS,CACdf,QAAS,CACRgB,WAAY,OACZC,gBAAiB,OACjBC,aAAc,UACdC,UAAW,OACXC,aAAc,qBACdC,gBAAiB,8BACjBC,WAAY,GACZZ,OAAQ,KAETa,iBAAkB,CACjBC,UAAW,SAcPC,E,kDACL,WAAaC,GAAS,IAAD,8BACpB,cAAOA,IACFrB,iBAAmBA,EAAkBqB,EAAMlB,YAF5B,E,sDAKrB,SAAoBmB,GACdC,KAAKF,MAAMlB,aAAemB,EAAUnB,aACxCoB,KAAKvB,iBAAmBA,EAAkBuB,KAAKF,MAAMlB,e,oBAIvD,WAAU,IACDqB,EAAMD,KAAKF,MAAXG,EACFC,EAASjD,IAAO,GAAIkC,EAAQa,KAAKF,MAAMI,QAI7C,OAHKA,EAAO9B,SAAqC,MAA1B8B,EAAO9B,QAAQU,SACrCoB,EAAO9B,QAAQU,OAASkB,KAAKvB,iBAAmB,KAGhD,kBAAC,IAAD,aACC0B,gBAAc,GACVH,KAAKF,MAFV,CAGCM,IAAKJ,KAAKF,MAAMM,IAChBC,MAAOL,KAAKF,MAAMO,MAClBH,OAAQA,EACRI,OAAQ,CACPC,KAAMN,EAAE,QACRO,MAAOP,EAAE,SACTQ,KAAMR,EAAE,QACRS,KAAMT,EAAE,QACRU,KAAMV,EAAE,gB,GA9BSW,aAgDtBf,EAAQgB,aAAe,CACtBT,KAAK,EACLU,eAAe,EACflC,WAAY,KACZsB,OAAQ,IAMMa,sBAAiB,UAAjBA,CAA8BlB","file":"static/js/Joyride.7bc33bfb.chunk.js","sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar PINF = require('@stdlib/constants/math/float64-pinf'); // MAIN //\n\n\nvar DEFAULTS = {\n  'level': PINF,\n  'override': true,\n  'extend': true,\n  'copy': true\n}; // EXPORTS //\n\nmodule.exports = DEFAULTS;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isObject = require('@stdlib/assert/is-object');\n\nvar deepMerge = require('./deepmerge.js'); // MAIN //\n\n/**\n* Returns a merge function based on provided options.\n*\n* @private\n* @param {Options} opts - function options\n* @param {number} options.level - merge level\n* @param {boolean} options.copy - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} options.override - defines the merge strategy\n* @param {boolean} options.extend - boolean indicating whether new properties can be added to the target object\n* @returns {Function} merge function\n*\n* @example\n* var merge = mergefcn({\n*     'level': Number.POSITIVE_INFINITY,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* });\n* // returns <Function>\n*/\n\n\nfunction mergefcn(opts) {\n  return merge;\n  /**\n  * Merges objects into a target object. Note that the target object is mutated.\n  *\n  * @private\n  * @param {Object} target - target object\n  * @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n  * @throws {Error} must provide a target object and one or more source objects\n  * @throws {TypeError} first argument must be an object\n  * @throws {TypeError} source arguments must be objects\n  * @returns {Object} merged (target) object\n  *\n  * @example\n  * var target = {\n  *     'a': 'beep'\n  * };\n  * var source = {\n  *     'a': 'boop',\n  *     'b': 'bap'\n  * };\n  *\n  * var out = merge( target, source );\n  * // returns {'a':'boop', 'b':'bap'}\n  */\n\n  function merge(target) {\n    var nargs;\n    var arg;\n    var src;\n    var i;\n    nargs = arguments.length - 1;\n\n    if (nargs < 1) {\n      throw new Error('insufficient input arguments. Must provide both a target object and one or more source objects.');\n    }\n\n    if (!isObject(target)) {\n      throw new TypeError('invalid argument. First argument must be an object. Value: `' + target + '`.');\n    }\n\n    src = new Array(nargs);\n\n    for (i = 0; i < nargs; i++) {\n      arg = arguments[i + 1]; // WARNING: this is a porous check. Buffers, Numbers, Booleans, Strings, Dates, RegExp, custom class instances,... will all pass.\n\n      if (!isObject(arg)) {\n        throw new TypeError('invalid argument. A merge source must be an object. Value: `' + arg + '`.');\n      }\n\n      src[i] = arg;\n    }\n\n    for (i = 0; i < nargs; i++) {\n      deepMerge(target, src[i], opts.level, opts.copy, opts.override, opts.extend); // eslint-disable-line max-len\n    }\n\n    return target;\n  }\n} // EXPORTS //\n\n\nmodule.exports = mergefcn;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Merge and extend objects.\n*\n* @module @stdlib/utils/merge\n*\n* @example\n* var merge = require( '@stdlib/utils/merge' );\n*\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*\n* @example\n* var factory = require( '@stdlib/utils/merge' ).factory;\n*\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils/define-nonenumerable-read-only-property');\n\nvar merge = require('./merge.js');\n\nvar factory = require('./factory.js'); // MAIN //\n\n\nsetReadOnly(merge, 'factory', factory); // EXPORTS //\n\nmodule.exports = merge;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar defaults = require('./defaults.js');\n\nvar mergefcn = require('./mergefcn.js'); // MAIN //\n\n/**\n* Merges objects into a target object. Note that the target object is mutated.\n*\n* @name merge\n* @type {Function}\n* @param {Object} target - target object\n* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n* @throws {Error} must provide a target object and one or more source objects\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} source arguments must be objects\n* @returns {Object} merged (target) object\n*\n* @example\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*/\n\n\nvar merge = mergefcn(defaults); // EXPORTS //\n\nmodule.exports = merge;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar objectKeys = require('@stdlib/utils/keys');\n\nvar isObject = require('@stdlib/assert/is-object');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property');\n\nvar isBuffer = require('@stdlib/assert/is-buffer');\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar typeOf = require('@stdlib/utils/type-of');\n\nvar deepCopy = require('@stdlib/utils/copy'); // MAIN //\n\n/**\n* Merges a source object into a target object.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @param {number} level - merge level\n* @param {boolean} copy - indicates whether to perform a deep copy of merged values\n* @param {(boolean|Function)} override - defines the merge strategy\n* @param {boolean} extend - indicates whether new properties can be added to the target object\n*/\n\n\nfunction deepMerge(target, source, level, copy, override, extend) {\n  var hasProp;\n  var isFunc;\n  var name;\n  var keys;\n  var curr;\n  var key;\n  var val;\n  var tmp;\n  var i; // Determine if we were provided a custom override strategy:\n\n  isFunc = isFunction(override); // Decrement the level:\n\n  level -= 1; // Loop through the source keys and implement the merge strategy...\n\n  keys = objectKeys(source);\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    hasProp = hasOwnProp(target, key); // Can we add new properties to the target?\n\n    if (!hasProp && !extend) {\n      continue;\n    }\n\n    val = source[key];\n\n    if (hasProp) {\n      curr = target[key];\n      name = typeOf(curr); // Should we recurse to perform a deep(er) merge? (only if both the current value and the proposed value are objects and the level is > 0)\n\n      if (!isBuffer(curr) && name === 'object' && isObject(val) && level) {\n        deepMerge(curr, val, level, copy, override, extend);\n        continue;\n      } // Should we apply a custom merge (override) strategy?\n\n\n      if (isFunc) {\n        tmp = override(curr, val, key); // WARNING: the following check does NOT prevent shared (leaky) nested references. We only check for top-level reference equality. We will assume that the user knows best, given their having provided a custom override strategy.\n\n        if (copy && tmp !== curr && tmp === val) {\n          tmp = deepCopy(tmp);\n        }\n\n        target[key] = tmp;\n      } // Are we allowed to override an existing target value?\n      else if (override) {\n          if (copy) {\n            target[key] = deepCopy(val);\n          } else {\n            target[key] = val;\n          }\n        }\n    } // New property to be added to target object. Should we deep copy the source value?\n    else if (copy) {\n        target[key] = deepCopy(val);\n      } // Perform a simple assignment...\n      else {\n          target[key] = val;\n        }\n  }\n} // EXPORTS //\n\n\nmodule.exports = deepMerge;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar copy = require('@stdlib/utils/copy');\n\nvar validate = require('./validate.js');\n\nvar defaults = require('./defaults.js');\n\nvar mergefcn = require('./mergefcn.js'); // MAIN //\n\n/**\n* Returns a function for merging and extending objects.\n*\n* @param {Options} options - merge options\n* @param {number} [options.level=Infinity] - merge level\n* @param {boolean} [options.copy=true] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override=true] - defines the merge strategy\n* @param {boolean} [options.extend=true] - boolean indicating whether new properties can be added to the target object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which can be used to merge objects\n*\n* @example\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\n\n\nfunction factory(options) {\n  var opts;\n  var err;\n  opts = copy(defaults);\n  err = validate(opts, options);\n\n  if (err) {\n    throw err;\n  }\n\n  return mergefcn(opts);\n} // EXPORTS //\n\n\nmodule.exports = factory;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isObject = require('@stdlib/assert/is-plain-object');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property');\n\nvar isBoolean = require('@stdlib/assert/is-boolean').isPrimitive;\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar isPositiveInteger = require('@stdlib/assert/is-positive-integer').isPrimitive; // MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {number} [options.level] - merge level\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override] - defines the merge strategy\n* @param {boolean} [options.extend] - boolean indicating whether new properties can be added to the target object\n* @returns {(Error|null)} error object or null\n*/\n\n\nfunction validate(opts, options) {\n  if (!isObject(options)) {\n    return new TypeError('invalid argument. Options argument must be an object. Value: `' + options + '`.');\n  }\n\n  if (hasOwnProp(options, 'level')) {\n    opts.level = options.level;\n\n    if (!isPositiveInteger(opts.level)) {\n      return new TypeError('invalid option. `level` option must be a positive integer. Option: `' + opts.level + '`.');\n    }\n  }\n\n  if (hasOwnProp(options, 'copy')) {\n    opts.copy = options.copy;\n\n    if (!isBoolean(opts.copy)) {\n      return new TypeError('invalid option. `copy` option must be a boolean primitive. Option: `' + opts.copy + '`.');\n    }\n  }\n\n  if (hasOwnProp(options, 'override')) {\n    opts.override = options.override;\n\n    if (!isBoolean(opts.override) && !isFunction(opts.override)) {\n      return new TypeError('invalid option. `override` option must be either a boolean primitive or a function. Option: `' + opts.override + '`.');\n    }\n  }\n\n  if (hasOwnProp(options, 'extend')) {\n    opts.extend = options.extend;\n\n    if (!isBoolean(opts.extend)) {\n      return new TypeError('invalid option. `extend` option must be a boolean primitive. Option: `' + opts.extend + '`.');\n    }\n  }\n\n  return null;\n} // EXPORTS //\n\n\nmodule.exports = validate;","/**\n* Copyright (C) 2020-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MAIN //\n\nfunction zIndexAdjustment( child ) {\n\tif ( !child ) {\n\t\treturn 0;\n\t}\n\tlet node = child.parentNode;\n\twhile ( node instanceof HTMLElement ) {\n\t\tconst computedStyle = window.getComputedStyle( node );\n\t\tconst zIndex = computedStyle.getPropertyValue( 'z-index' );\n\t\tif ( zIndex !== 'auto' ) {\n\t\t\treturn zIndex;\n\t\t}\n\t\tnode = node.parentNode;\n\t}\n\treturn 0;\n}\n\n\n// EXPORTS //\n\nexport default zIndexAdjustment;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Joyride from 'react-joyride';\nimport { withTranslation } from 'react-i18next';\nimport merge from '@stdlib/utils/merge';\nimport zIndexAdjustment from '@isle-project/utils/z-index-adjustment';\nimport { addResources } from '@isle-project/locales';\n\n\n// VARIABLES //\n\naddResources( 'Joyride' );\nconst STYLES = {\n\toptions: {\n\t\tarrowColor: '#fff',\n\t\tbackgroundColor: '#fff',\n\t\tprimaryColor: '#ca5800',\n\t\ttextColor: '#333',\n\t\toverlayColor: 'rgba(0, 0, 0, 0.5)',\n\t\tspotlightShadow: '0 0 15px rgba(0, 0, 0, 0.5)',\n\t\tbeaconSize: 36,\n\t\tzIndex: 100\n\t},\n\ttooltipContainer: {\n\t\ttextAlign: 'left'\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Wrapper around [react-joyride](https://github.com/gilbarbara/react-joyride) to create walkthroughs and guided tours.\n*\n* @property {Array} steps - array of step `objects`\n* @property {boolean} scrollToSteps - controls whether the window should scroll to the current step\n* @property {boolean} run - controls whether the guide is active\n*/\nclass Wrapper extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.zIndexAdjustment = zIndexAdjustment( props.parentNode );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.parentNode !== prevProps.parentNode ) {\n\t\t\tthis.zIndexAdjustment = zIndexAdjustment( this.props.parentNode );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\tconst styles = merge( {}, STYLES, this.props.styles );\n\t\tif ( styles.options && styles.options.zIndex === 100 ) {\n\t\t\tstyles.options.zIndex = this.zIndexAdjustment + 100;\n\t\t}\n\t\treturn (\n\t\t\t<Joyride\n\t\t\t\tshowSkipButton\n\t\t\t\t{...this.props}\n\t\t\t\trun={this.props.run}\n\t\t\t\tsteps={this.props.steps}\n\t\t\t\tstyles={styles}\n\t\t\t\tlocale={{\n\t\t\t\t\tback: t('back'),\n\t\t\t\t\tclose: t('close'),\n\t\t\t\t\tlast: t('last'),\n\t\t\t\t\tnext: t('next'),\n\t\t\t\t\tskip: t('skip')\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nWrapper.propTypes = {\n\trun: PropTypes.bool,\n\tscrollToSteps: PropTypes.bool,\n\tsteps: PropTypes.array.isRequired,\n\tparentNode: PropTypes.node,\n\tstyles: PropTypes.object\n};\n\nWrapper.defaultProps = {\n\trun: false,\n\tscrollToSteps: true,\n\tparentNode: null,\n\tstyles: {}\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'Joyride' )( Wrapper );\n"],"sourceRoot":""}