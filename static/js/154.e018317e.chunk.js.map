{"version":3,"sources":["components/new-password/index.js"],"names":["MsgModal","props","show","onHide","close","Header","Title","Body","message","Footer","onClick","t","NewPassword","event","a","preventDefault","getPasswordValidationState","hash","window","location","substring","qs","queryString","parse","token","axios","post","server","id","newPassword","state","password","res","setState","data","showModal","response","msg","status","showSubmitOverlay","overlayTarget","target","setTimeout","value","name","passwordRepeat","length","history","replace","str","enteredPasswords","this","validPasswords","className","style","opacity","as","placement","overlay","controlId","sm","type","placeholder","onChange","handleInputChange","maxLength","minLength","autoComplete","isInvalid","Feedback","span","offset","variant","handleSubmit","containerPadding","title","Component","withRouter","withTranslation"],"mappings":"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","file":"static/js/154.e018317e.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport server from 'constants/server';\nimport 'css/login.css';\n\n\n// FUNCTIONS //\n\nconst createTooltip = ( str ) => {\n\treturn <Tooltip id=\"tooltip\">{str}</Tooltip>;\n};\n\n\n// VARIABLES //\n\nconst MsgModal = ( props ) => (\n\t<Modal show={props.show} onHide={props.close}>\n\t\t<Modal.Header>\n\t\t\t<Modal.Title>New Password Chosen</Modal.Title>\n\t\t</Modal.Header>\n\t\t<Modal.Body>\n\t\t\t{props.message}\n\t\t</Modal.Body>\n\t\t<Modal.Footer>\n\t\t\t<Button onClick={props.close}>\n\t\t\t\t{props.t('common:close')}\n\t\t\t</Button>\n\t\t</Modal.Footer>\n\t</Modal>\n);\n\nMsgModal.propTypes = {\n\tclose: PropTypes.func.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tshow: PropTypes.bool.isRequired\n};\n\n\n// MAIN //\n\nclass NewPassword extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tpassword: '',\n\t\t\tpasswordRepeat: '',\n\t\t\tshowModal: false\n\t\t};\n\t}\n\n\thandleSubmit = async ( event ) => {\n\t\tevent.preventDefault();\n\t\tif ( this.getPasswordValidationState() ) {\n\t\t\tconst hash = window.location.hash.substring( 15 );\n\t\t\tconst qs = queryString.parse( hash );\n\t\t\tconst token = qs[ 'token' ];\n\t\t\ttry {\n\t\t\t\tconst res = await axios.post( server+'/update_user_password', {\n\t\t\t\t\tid: token,\n\t\t\t\t\tnewPassword: this.state.password\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: res.data.message,\n\t\t\t\t\tshowModal: true\n\t\t\t\t});\n\t\t\t} catch ( err ) {\n\t\t\t\tlet msg;\n\t\t\t\tif ( err.response ) {\n\t\t\t\t\tmsg = 'Server response: ' + err.response.status + '.\\n';\n\t\t\t\t\tmsg += err.response.data;\n\t\t\t\t} else {\n\t\t\t\t\tmsg = err.message;\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: msg,\n\t\t\t\t\tshowModal: true\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tshowSubmitOverlay: true,\n\t\t\t\toverlayTarget: event.target\n\t\t\t}, () => {\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tshowSubmitOverlay: false\n\t\t\t\t\t});\n\t\t\t\t}, 4000 );\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst target = event.target;\n\t\tconst value = target.value;\n\t\tconst name = target.name;\n\t\tthis.setState({\n\t\t\t[ name ]: value\n\t\t});\n\t}\n\n\tgetPasswordValidationState = () => {\n\t\tconst { password, passwordRepeat } = this.state;\n\t\tif ( password.length < 6 || passwordRepeat.length === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( password !== passwordRepeat ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclose = () => {\n\t\tthis.props.history.replace( '/' );\n\t}\n\n\trender() {\n\t\tconst enteredPasswords = this.state.password || this.state.passwordRepeat;\n\t\tconst validPasswords = this.getPasswordValidationState();\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"login\">\n\t\t\t\t\t<Card style={{ opacity: 0.9 }}>\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<Card.Title as=\"h1\">\n\t\t\t\t\t\t\t\t<small>Choose a new Password</small>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={createTooltip( 'Please enter a new password with at least six characters' )}>\n\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\tcontrolId=\"form-password\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel>{this.props.t('common:password')}</FormLabel>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter new password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={30}\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength={6}\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisInvalid={enteredPasswords && !validPasswords}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease enter a new password with at least six characters.\n\t\t\t\t\t\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\tcontrolId=\"form-password-confirmation\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col sm={{ span: 10, offset: 2 }}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"passwordRepeat\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm new password\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={30}\n\t\t\t\t\t\t\t\t\t\t\t\tminLength={6}\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\t\t\t\t\tisInvalid={enteredPasswords && !validPasswords}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\t\t\t\tPasswords do not match.\n\t\t\t\t\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\tclassName=\"centered\"\n\t\t\t\t\t\t\t\t\t>{this.props.t('common:confirm')}</Button>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t{ this.state.showModal ? <MsgModal\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\tclose={this.close}\n\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t\tt={this.props.t}\n\t\t\t\t/> : null }\n\t\t\t\t<Overlay\n\t\t\t\t\tshow={this.state.showSubmitOverlay}\n\t\t\t\t\ttarget={this.state.overlayTarget}\n\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\tcontainerPadding={20}\n\t\t\t\t>\n\t\t\t\t\t<Popover id=\"popover-contained\" title=\"Input fields are not valid\">\n\t\t\t\t\t\tPlease make sure that the passwords are valid and match each other before submitting.\n\t\t\t\t\t</Popover>\n\t\t\t\t</Overlay>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nNewPassword.propTypes = {\n\thistory: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default withRouter( withTranslation( [ 'common', 'signup' ] )( NewPassword ) );\n"],"sourceRoot":""}