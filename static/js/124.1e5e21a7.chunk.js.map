{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/simple_linear_regression.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/dashboard/index.js"],"names":["SimpleLinearRegressionMenu","props","quantitative","categorical","t","title","content","autoStart","onGenerate","y","x","group","omitMissing","output","data","onPredict","yhat","resid","counter","newData","copy","newQuantitative","slice","name","contains","push","onDiagnostics","onCreated","logAction","DATA_EXPLORER_LINEAR_REGRESSION","legend","defaultValue","options","clearable","menuPlacement","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","variant","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","onChange","updateValue","state","session","this","globalVal","input","type","handleChange","disabled","aria-label","tooltip","inline","tooltipPlacement","style","marginLeft","role","tabIndex","color","onClick","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","Dashboard","Loadable"],"mappings":"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","file":"static/js/124.1e5e21a7.chunk.js","sourcesContent":["// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from '@stdlib/utils/copy';\nimport contains from '@stdlib/assert/contains';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport SimpleLinearRegression from '@isle-project/components/models/simple-linear-regression';\nimport { DATA_EXPLORER_LINEAR_REGRESSION } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DESCRIPTION = 'Statistical model which estimates a best-fit line for a response variable of interest (Y) given exactly one predictor variable (X). The line is determined by its intercept (Y-value at X = 0) and slope (the increase in Y associated with a unit increase of X).';\n\n\n// MAIN //\n\nconst SimpleLinearRegressionMenu = ( props ) => {\n\tconst fitRegression = ( y, x, group, omitMissing ) => {\n\t\tconst output = <SimpleLinearRegression\n\t\t\ty={y} x={x}\n\t\t\tgroup={group} omitMissing={omitMissing}\n\t\t\tdata={props.data}\n\t\t\tonPredict={( yhat, resid, counter ) => {\n\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\tconst newQuantitative = props.quantitative.slice();\n\t\t\t\tlet name = 'pred_slm'+counter;\n\t\t\t\tnewData[ name ] = yhat;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'resid_slm'+counter;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tnewData[ name ] = resid;\n\t\t\t\tprops.onGenerate( newQuantitative, newData );\n\t\t\t}}\n\t\t\tonDiagnostics={props.onCreated}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_LINEAR_REGRESSION, {\n\t\t\ty, x, group, omitMissing\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst { quantitative, categorical, t } = props;\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{props.t('Simple Linear Regression')}\n\t\t\t\t<QuestionButton title={props.t('Simple Linear Regression')} content={DESCRIPTION} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={fitRegression}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('explanatory-variable')}\n\t\t\t\tdefaultValue={quantitative[ 1 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('group-by')}\n\t\t\t\toptions={categorical}\n\t\t\t\tclearable={true}\n\t\t\t\tmenuPlacement=\"top\"\n\t\t\t/>\n\t\t\t<CheckboxInput\n\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\tdefaultValue={false}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nSimpleLinearRegressionMenu.defaultProps = {\n\tcategorical: [],\n\tlogAction() {}\n};\n\nSimpleLinearRegressionMenu.propTypes = {\n\tcategorical: PropTypes.array,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default SimpleLinearRegressionMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n"],"sourceRoot":""}