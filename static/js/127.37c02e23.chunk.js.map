{"version":3,"sources":["../node_modules/@isle-project/components/models/naive-bayes/design_matrix.js","../node_modules/@isle-project/components/data-explorer/menu/naive_bayes.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js"],"names":["isMissing","x","isnan","isUndefinedOrNull","isNonMissingNumber","isNumber","designMatrix","y","data","quantitative","matrix","predictors","hash","isArray","j","length","values","contains","push","categories","extractCategoriesFromValues","k","nobs","i","row","val","ndarray","yvalues","designMatrixMissing","missing","NaiveBayesMenu","props","useState","categorical","setY","setX","omitMissing","setOmitMissing","t","style","fontSize","Header","as","title","content","Body","legend","options","defaultValue","onChange","multi","uniq","concat","disabled","variant","block","onClick","output","onPredict","results","counter","newData","copy","newQuantitative","slice","probs","predictProbs","name","classes","classProbs","map","pred","predict","newCategorical","onGenerate","logAction","DATA_EXPLORER_NAIVE_BAYES","onCreated","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","updateValue","state","session","this","globalVal","input","type","handleChange","aria-label","tooltip","inline","tooltipPlacement","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext"],"mappings":"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","file":"static/js/127.37c02e23.chunk.js","sourcesContent":["// MODULES //\n\nimport contains from '@stdlib/assert/contains';\nimport ndarray from '@stdlib/ndarray/array';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isUndefinedOrNull from '@stdlib/assert/is-undefined-or-null';\nimport isnan from '@stdlib/assert/is-nan';\nimport isArray from '@stdlib/assert/is-array';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\n\n\n// FUNCTIONS //\n\nfunction isMissing( x ) {\n\treturn isnan( x ) || isUndefinedOrNull( x );\n}\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\n\n// MAIN //\n\nexport function designMatrix( x, y, data, quantitative ) {\n\tlet matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst nobs = data[ x[ 0 ] ].length;\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tconst row = [];\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\trow.push( values[ i ] );\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatrix.push( row );\n\t}\n\tmatrix = ndarray( matrix );\n\tconst yvalues = data[ y ];\n\treturn { matrix, predictors, yvalues };\n}\n\nexport function designMatrixMissing( x, y, data, quantitative ) {\n\tlet matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst nobs = data[ x[ 0 ] ].length;\n\tconst yvalues = [];\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tconst row = [];\n\t\tlet missing = false;\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tif ( isNonMissingNumber( values[ i ] ) ) {\n\t\t\t\t\trow.push( values[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tif ( isMissing( val ) ) {\n\t\t\t\t\tmissing = true;\n\t\t\t\t} else {\n\t\t\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( isMissing( data[ y ][ i ] ) ) {\n\t\t\tmissing = true;\n\t\t}\n\t\tif ( !missing ) {\n\t\t\tmatrix.push( row );\n\t\t\tyvalues.push( data[ y ][ i ] );\n\t\t}\n\t}\n\tmatrix = ndarray( matrix );\n\treturn { matrix, predictors, yvalues };\n}\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport uniq from 'uniq';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport { DATA_EXPLORER_NAIVE_BAYES } from '@isle-project/constants/actions.js';\nimport NaiveBayes from '@isle-project/components/models/naive-bayes';\nimport { designMatrix } from '@isle-project/components/models/naive-bayes/design_matrix.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst NaiveBayesMenu = ( props ) => {\n\tconst [ y, setY ] = useState( props.categorical[ 0 ] );\n\tconst [ x, setX ] = useState( props.quantitative[ 0 ] );\n\tconst [ omitMissing, setOmitMissing ] = useState( false );\n\n\tconst { categorical, quantitative, t } = props;\n\tconst compute = () => {\n\t\tconst output = <NaiveBayes\n\t\t\tx={x} y={y}\n\t\t\tomitMissing={omitMissing}\n\t\t\tdata={props.data}\n\t\t\tquantitative={props.quantitative}\n\t\t\tcategorical={props.categorical}\n\t\t\tonPredict={( results, counter ) => {\n\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\tconst newQuantitative = props.quantitative.slice();\n\t\t\t\tconst { matrix } = designMatrix( x, y, props.data, props.quantitative );\n\t\t\t\tconst probs = results.predictProbs( matrix );\n\t\t\t\tfor ( let i = 0; i < results.classes.length; i++ ) {\n\t\t\t\t\tconst name = 'probs_' + results.classes[ i ] + '_bayes' + counter;\n\t\t\t\t\tconst classProbs = probs.map( x => x[ i ] );\n\t\t\t\t\tnewData[ name ] = classProbs;\n\t\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst pred = results.predict( matrix );\n\t\t\t\tconst name = 'pred_bayes'+ counter;\n\t\t\t\tnewData[ name ] = pred;\n\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t}\n\t\t\t\tprops.onGenerate( newQuantitative, newCategorical, newData );\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_NAIVE_BAYES, {\n\t\t\ty, x, omitMissing\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Naive Bayes')}\n\t\t\t\t<QuestionButton title={t('Naive Bayes')} content={t('Naive Bayes-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\t\toptions={categorical}\n\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\tonChange={setY}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('predictors-x')} multi\n\t\t\t\t\toptions={uniq( quantitative.concat( categorical ) )}\n\t\t\t\t\tdefaultValue={x || ''}\n\t\t\t\t\tonChange={setX}\n\t\t\t\t/>\n\t\t\t\t<CheckboxInput\n\t\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\tonChange={setOmitMissing}\n\t\t\t\t/>\n\t\t\t\t<Button disabled={!x || x.length === 0} variant=\"primary\" block onClick={compute} >\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nNaiveBayesMenu.defaultProps = {\n\tlogAction() {}\n};\n\nNaiveBayesMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default NaiveBayesMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"sourceRoot":""}