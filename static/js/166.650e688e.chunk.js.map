{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot_matrix.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"names":["ScatterplotMatrixMenu","props","data","t","useState","variables","setVariables","color","setColor","Header","as","title","content","Body","legend","options","multi","onChange","groupingVariables","clearable","variant","block","onClick","plotId","randomstring","action","output","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_SPLOM","onSelected","DATA_EXPLORER_SPLOM","onCreated","disabled","length","defaultProps","QuestionButton","popover","trigger","placement","rootClose","overlay","size","className"],"mappings":"kMAeMA,EAAwB,SAAEC,GAAY,IACnCC,EAAYD,EAAZC,KAAMC,EAAMF,EAANE,EAD4B,EAENC,mBAAU,MAFJ,mBAElCC,EAFkC,KAEvBC,EAFuB,OAGdF,mBAAU,MAHI,mBAGlCG,EAHkC,KAG3BC,EAH2B,KA+B1C,OACC,kBAAC,IAAD,KACC,kBAAC,IAAKC,OAAN,CAAaC,GAAG,MACdP,EAAE,sBAAsB,kBAAC,IAAD,CAAgBQ,MAAOR,EAAE,sBAAuBS,QAAST,EAAE,qCAErF,kBAAC,IAAKU,KAAN,KACC,kBAAC,IAAD,CACCC,OAAQX,EAAE,aACVY,QAASd,EAAMI,UACfW,OAAK,EACLC,SAAUX,IAEX,kBAAC,IAAD,CACCQ,OAAO,SACPC,QAASd,EAAMiB,kBACfC,WAAW,EACXF,SAAUT,IAEX,kBAAC,IAAD,CACCY,QAAQ,UAAUC,OAAK,EACvBC,QA9Ca,WAChB,IAAMC,EAASC,YAAc,GACvBC,EAAS,CACdpB,YAAWE,QAAOgB,UAWbG,EAAS,kBAAC,IAAD,CACdC,GAAIJ,EACJrB,KAAMA,EACNG,UAAWA,EACXE,MAAOA,EACPkB,OAAQA,EACRG,QAfe,WACf3B,EAAM4B,QAAQC,gBAAgB,CAC7BnB,MAAOR,EAAE,eACT4B,QAAS5B,EAAE,uBACX6B,MAAO,UACPC,SAAU,OAEXhC,EAAMiC,UAAWC,IAA2BV,IAS5CW,WAAYnC,EAAMmC,aAEnBnC,EAAMiC,UAAWG,IAAqBZ,GACtCxB,EAAMqC,UAAWZ,IAuBda,UAAWlC,GAAaA,EAAUmC,OAAS,GAE1CrC,EAAE,gBAURH,EAAsByC,aAAe,CACpCvB,kBAAmB,KACnBgB,UAFoC,aAGpCE,WAHoC,cAmBtBpC,a,iCClGf,mEAuCe0C,IA1BQ,SAAEzC,GACxB,IAAM0C,EAAU,kBAAC,IAAD,CAAShB,GAAG,4BAC3B,kBAAC,IAAD,KAAe1B,EAAMU,OACrB,kBAAC,IAAD,KAAiBV,EAAMW,UAExB,OACC,kBAAC,IAAD,CAAgBgC,QAAS,CAAC,QAAS,SAAUC,UAAU,OAAOC,WAAS,EAACC,QAASJ,GAChF,kBAAC,IAAD,CACCK,KAAK,KACL5B,QAAQ,oBACR6B,UAAU,mBAEV,yBAAKA,UAAU","file":"static/js/166.650e688e.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport SelectInput from '@isle-project/components/input/select';\nimport ScatterPlotMatrix from '@isle-project/components/plots/scatterplot-matrix';\nimport { DATA_EXPLORER_SHARE_SPLOM, DATA_EXPLORER_SPLOM } from '@isle-project/constants/actions.js';\nimport QuestionButton from '../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMatrixMenu = ( props ) => {\n\tconst { data, t } = props;\n\tconst [ variables, setVariables ] = useState( null );\n\tconst [ color, setColor ] = useState( null );\n\n\tconst generate = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariables, color, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SPLOM, action );\n\t\t};\n\t\tconst output = <ScatterPlotMatrix\n\t\t\tid={plotId}\n\t\t\tdata={data}\n\t\t\tvariables={variables}\n\t\t\tcolor={color}\n\t\t\taction={action}\n\t\t\tonShare={onShare}\n\t\t\tonSelected={props.onSelected}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SPLOM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot Matrix')}<QuestionButton title={t('Scatterplot Matrix')} content={t('Scatterplot Matrix-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variables')}\n\t\t\t\t\toptions={props.variables}\n\t\t\t\t\tmulti\n\t\t\t\t\tonChange={setVariables}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend=\"Color:\"\n\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tonChange={setColor}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={generate}\n\t\t\t\t\tdisabled={!variables || variables.length < 2}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMatrixMenu.defaultProps = {\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {}\n};\n\nScatterplotMatrixMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMatrixMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"sourceRoot":""}