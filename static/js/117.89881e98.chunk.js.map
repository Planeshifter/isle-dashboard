{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/get_binary_vars.js","../node_modules/@isle-project/components/data-explorer/menu/meantest2.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["getBinaryVars","vars","data","out","i","length","vals","encountered","Set","j","v","isNull","isnan","add","size","push","MeanTest2Menu","props","quantitative","categorical","t","useState","x","setX","group","setGroup","y","setY","diff","setDiff","direction","setDirection","alpha","setAlpha","type","setType","xstdev","setXstdev","ystdev","setYstdev","binary","style","fontSize","Header","as","title","content","Body","legend","defaultValue","options","onChange","md","clearable","step","min","tooltipPlacement","raw","max","menuPlacement","variant","block","onClick","showDecision","session","addNotification","message","var","level","position","output","logAction","DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN","onCreated","disabled","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","className","createTooltip","tooltip","PINF","NINF","CreateTooltip","NumberInput","debug","logger","uid","generateUID","context","event","valid","target","validity","value","setState","parseFloat","bind","global","lesson","contains","split","onBlur","state","prevProps","this","globalVal","isNumber","inline","input","padding","htmlFor","numbersOnly","name","width","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","number","bool","oneOfType","node","func","object","oneOf","contextType","SessionContext"],"mappings":"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","file":"static/js/117.89881e98.chunk.js","sourcesContent":["// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isNull from '@stdlib/assert/is-null';\n\n\n// MAIN //\n\nfunction getBinaryVars( vars, data ) {\n\tconst out = [];\n\tfor ( let i = 0; i < vars.length; i++ ) {\n\t\tlet vals = data[ vars[ i ] ];\n\t\tif ( vals ) {\n\t\t\tconst encountered = new Set();\n\t\t\tfor ( let j = 0; j < vals.length; j++ ) {\n\t\t\t\tlet v = vals[ j ];\n\t\t\t\tif ( !isNull( v ) && !isnan( v ) && v !== '' ) {\n\t\t\t\t\tencountered.add( v );\n\t\t\t\t}\n\t\t\t\tif ( encountered.size > 2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( j === vals.length - 1 ) {\n\t\t\t\t\tout.push( vars[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getBinaryVars;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport MeanTest2 from '@isle-project/components/tests/meantest2';\nimport { DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\nimport getBinaryVars from './../get_binary_vars.js';\n\n\n// MAIN //\n\nconst MeanTest2Menu = ( props ) => {\n\tconst { quantitative, categorical, data, t } = props;\n\tconst [ x, setX ] = useState( null );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ y, setY ] = useState( null );\n\tconst [ diff, setDiff ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\tconst [ type, setType ] = useState( 'T Test' );\n\tconst [ xstdev, setXstdev ] = useState( null );\n\tconst [ ystdev, setYstdev ] = useState( null );\n\n\tconst calculateTwoSampleZTest = () => {\n\t\tconst { data, showDecision } = props;\n\t\tif ( !y && !group ) {\n\t\t\treturn props.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('select-grouping-or-second-variable', { var: x }),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <MeanTest2\n\t\t\tx={x} group={group} y={y} diff={diff} direction={direction}\n\t\t\talpha={alpha} type={type} xstdev={xstdev} ystdev={ystdev}\n\t\t\tdata={data} showDecision={showDecision}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_TWO_SAMPLE_MEAN, {\n\t\t\tx, group, y, diff, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\n\tconst binary = getBinaryVars( categorical, data );\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Two-Sample Mean Test')}\n\t\t\t\t<QuestionButton title={t('Two-Sample Mean Test')} content={t('Two-Sample Mean Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('type-of-test')}\n\t\t\t\t\tdefaultValue={type}\n\t\t\t\t\toptions={[ 'T Test', 'Z Test' ]}\n\t\t\t\t\tonChange={setType}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={x}\n\t\t\t\t\toptions={quantitative}\n\t\t\t\t\tonChange={setX}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('groups')}\n\t\t\t\t\t\t\toptions={binary}\n\t\t\t\t\t\t\tdefaultValue={group}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( group ) => {\n\t\t\t\t\t\t\t\tsetY( null );\n\t\t\t\t\t\t\t\tsetGroup( group );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t<p>{t('or')}</p>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('second-variable')}\n\t\t\t\t\t\t\toptions={quantitative}\n\t\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( y ) => {\n\t\t\t\t\t\t\t\tsetY( y );\n\t\t\t\t\t\t\t\tsetGroup( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ type === 'Z Test' ?\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('1st-stdev')}\n\t\t\t\t\t\t\t\tdefaultValue={xstdev || 1}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tonChange={setXstdev}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('2nd-stdev')}\n\t\t\t\t\t\t\t\tdefaultValue={ystdev || 1}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tonChange={setYstdev}\n\t\t\t\t\t\t\t\ttooltipPlacement=\"top\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>: null\n\t\t\t\t}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={t('difference-h0')}\n\t\t\t\t\t\t\tdefaultValue={diff}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setDiff}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\t\t\tmin={0.0}\n\t\t\t\t\t\t\tmax={1.0}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t\t\t\ttooltipPlacement=\"bottom\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={calculateTwoSampleZTest}\n\t\t\t\t\tdisabled={(!group && !y) || !x}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nMeanTest2Menu.defaultProps = {\n\tcategorical: null,\n\tlogAction() {},\n\tshowDecision: true\n};\n\nMeanTest2Menu.propTypes = {\n\tcategorical: PropTypes.array,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default MeanTest2Menu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}