{"version":3,"sources":["../node_modules/ml-matrix/src/pseudoInverse.js","../node_modules/ml-regression-multivariate-linear/src/index.js","../node_modules/@isle-project/components/models/multiple-linear-regression/main.js","../node_modules/@isle-project/utils/subtract/index.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js"],"names":["pseudoInverse","matrix","threshold","arguments","length","undefined","Number","EPSILON","isEmpty","transpose","svdSolution","autoTranspose","U","leftSingularVectors","V","rightSingularVectors","s","diagonal","i","Math","abs","mmul","MultivariateLinearRegression","x","y","_this","this","options","_options$intercept","intercept","_options$statistics","statistics","weights","inputs","outputs","addColumn","Array","rows","fill","xt","xx","xy","invxx","inverse","beta","to2DArray","columns","fittedValues","residuals","clone","addM","neg","variance","map","ri","pow","reduce","a","b","stdError","sqrt","stdErrorMatrix","mul","stdErrors","d","tStats","key","value","isArray","_predict","_y","_i","setRow","getRow","TypeError","result","_i2","j","Error","_this2","name","summary","regressionStatistics","standardError","observations","variables","label","concat","coefficients","tStat","model","addResources","COUNTER","R2","isMissing","isnan","isUndefinedOrNull","isNonMissingNumber","isNumber","designMatrix","data","quantitative","predictors","hash","nobs","values","contains","push","categories","extractCategoriesFromValues","k","row","val","yvalues","designMatrixMissing","missing","fitModel","omitMissing","out","MLR","yhat","predict","v","avgFitted","mean","mss","resid","subtract","rss","p","rSquared","adjRSquared","fScore","_","MultipleLinearRegression","props","t","qqPlot","draggable","editable","fit","generateQQPlotConfig","state","meta","type","residualPlot","mode","layout","xaxis","title","yaxis","onDiagnostics","onPredict","style","overflowX","width","className","counter","cdf","tCDF","bordered","size","toFixed","idx","summaryTable","round","fCDF","placement","tooltip","Button","variant","onClick","handlePredict","marginLeft","handleDiagnostics","Alert","nextProps","prevState","Component","defaultProps","withTranslation","arr","isArr","isArrayLike","len","SingularValueDecomposition","m","n","_options$computeLeftS","computeLeftSingularVectors","_options$computeRight","computeRightSingularVectors","_options$autoTranspos","wantu","Boolean","wantv","swapped","aux","console","warn","nu","min","ni","Float64Array","e","work","si","nct","nrt","max","mrc","get","set","_i3","_i4","_i5","_i6","_i7","_i8","_i9","_j","_j2","_t","_i10","_i11","_j3","_i12","_k","_j4","_t2","_i13","_i14","_i15","_i16","_i17","_k2","_j5","_t3","_i18","_i19","_i20","pp","eps","_k3","kase","alpha","MIN_VALUE","isNaN","ks","_t4","f","_j6","_t5","cs","sn","_i21","_f","_j7","_t6","_cs","_sn","_i22","scale","sp","spm1","epm1","sk","ek","c","shift","_f2","g","_j8","_t7","_cs2","_sn2","_i23","_i24","_i25","_t8","_i26","_i27","tmp","Y","scols","Ls","VL","vrows","urows","VLU","_i28","sum","solve","vcols","X","ucols","_i29","_j9","tol","r","ii","from","hypotenuse","WrapperMatrix2D","_AbstractMatrix","_super","call","rowIndex","columnIndex"],"mappings":"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","file":"static/js/MultipleLinearRegression.5594c527.chunk.js","sourcesContent":["import SVD from './dc/svd';\nimport Matrix from './matrix';\nexport function pseudoInverse(matrix) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.EPSILON;\n  matrix = Matrix.checkMatrix(matrix);\n\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n\n  var svdSolution = new SVD(matrix, {\n    autoTranspose: true\n  });\n  var U = svdSolution.leftSingularVectors;\n  var V = svdSolution.rightSingularVectors;\n  var s = svdSolution.diagonal;\n\n  for (var i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix, { SVD, pseudoInverse } from 'ml-matrix';\n\nvar MultivariateLinearRegression = /*#__PURE__*/function () {\n  function MultivariateLinearRegression(x, y) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, MultivariateLinearRegression);\n\n    var _options$intercept = options.intercept,\n        intercept = _options$intercept === void 0 ? true : _options$intercept,\n        _options$statistics = options.statistics,\n        statistics = _options$statistics === void 0 ? true : _options$statistics;\n    this.statistics = statistics;\n\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      y = new Matrix(y);\n\n      if (intercept) {\n        x.addColumn(new Array(x.rows).fill(1));\n      }\n\n      var xt = x.transpose();\n      var xx = xt.mmul(x);\n      var xy = xt.mmul(y);\n      var invxx = new SVD(xx).inverse();\n      var beta = xy.transpose().mmul(invxx).transpose();\n      this.weights = beta.to2DArray();\n      this.inputs = x.columns;\n      this.outputs = y.columns;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        var fittedValues = x.mmul(beta);\n        var residuals = y.clone().addM(fittedValues.neg());\n        var variance = residuals.to2DArray().map(function (ri) {\n          return Math.pow(ri[0], 2);\n        }).reduce(function (a, b) {\n          return a + b;\n        }) / (y.rows - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = pseudoInverse(xx).mul(variance);\n        this.stdErrors = this.stdErrorMatrix.diagonal().map(function (d) {\n          return Math.sqrt(d);\n        });\n        this.tStats = this.weights.map(function (d, i) {\n          return _this.stdErrors[i] === 0 ? 0 : d[0] / _this.stdErrors[i];\n        });\n      }\n    }\n  }\n\n  _createClass(MultivariateLinearRegression, [{\n    key: \"predict\",\n    value: function predict(x) {\n      if (Array.isArray(x)) {\n        if (typeof x[0] === 'number') {\n          return this._predict(x);\n        } else if (Array.isArray(x[0])) {\n          var y = new Array(x.length);\n\n          for (var i = 0; i < x.length; i++) {\n            y[i] = this._predict(x[i]);\n          }\n\n          return y;\n        }\n      } else if (Matrix.isMatrix(x)) {\n        var _y = new Matrix(x.rows, this.outputs);\n\n        for (var _i = 0; _i < x.rows; _i++) {\n          _y.setRow(_i, this._predict(x.getRow(_i)));\n        }\n\n        return _y;\n      }\n\n      throw new TypeError('x must be a matrix or array of numbers');\n    }\n  }, {\n    key: \"_predict\",\n    value: function _predict(x) {\n      var result = new Array(this.outputs);\n\n      if (this.intercept) {\n        for (var i = 0; i < this.outputs; i++) {\n          result[i] = this.weights[this.inputs][i];\n        }\n      } else {\n        result.fill(0);\n      }\n\n      for (var _i2 = 0; _i2 < this.inputs; _i2++) {\n        for (var j = 0; j < this.outputs; j++) {\n          result[j] += this.weights[_i2][j] * x[_i2];\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"score\",\n    value: function score() {\n      throw new Error('score method is not implemented yet');\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this2 = this;\n\n      return {\n        name: 'multivariateLinearRegression',\n        weights: this.weights,\n        inputs: this.inputs,\n        outputs: this.outputs,\n        intercept: this.intercept,\n        summary: this.statistics ? {\n          regressionStatistics: {\n            standardError: this.stdError,\n            observations: this.outputs\n          },\n          variables: this.weights.map(function (d, i) {\n            return {\n              label: i === _this2.weights.length - 1 ? 'Intercept' : \"X Variable \".concat(i + 1),\n              coefficients: d,\n              standardError: _this2.stdErrors[i],\n              tStat: _this2.tStats[i]\n            };\n          })\n        } : undefined\n      };\n    }\n  }], [{\n    key: \"load\",\n    value: function load(model) {\n      if (model.name !== 'multivariateLinearRegression') {\n        throw new Error('not a MLR model');\n      }\n\n      return new MultivariateLinearRegression(true, model);\n    }\n  }]);\n\n  return MultivariateLinearRegression;\n}();\n\nexport { MultivariateLinearRegression as default };","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MLR from 'ml-regression-multivariate-linear';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport pow from '@stdlib/math/base/special/pow';\nimport round from '@stdlib/math/base/special/round';\nimport fCDF from '@stdlib/stats/base/dists/f/cdf';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isUndefinedOrNull from '@stdlib/assert/is-undefined-or-null';\nimport isnan from '@stdlib/assert/is-nan';\nimport abs from '@stdlib/math/base/special/abs';\nimport tCDF from '@stdlib/stats/base/dists/t/cdf';\nimport Table from '@isle-project/components/table';\nimport Tooltip from '@isle-project/components/tooltip';\nimport Plotly from '@isle-project/components/plotly';\nimport { generateQQPlotConfig } from '@isle-project/components/plots/qqplot';\nimport subtract from '@isle-project/utils/subtract';\nimport mean from '@isle-project/utils/statistic/mean';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport { addResources } from '@isle-project/locales';\n\n\n// VARIABLES //\n\naddResources( 'StatisticalModels' );\nlet COUNTER = 0;\nconst TSTAT = 't';\nconst DF = 'df';\nconst R2 = 'R&#178;:';\n\n\n// FUNCTIONS //\n\nfunction isMissing( x ) {\n\treturn isnan( x ) || isUndefinedOrNull( x );\n}\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\nfunction designMatrix( x, y, data, quantitative, intercept ) {\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tconst matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tconst nobs = data[ x[ 0 ] ].length;\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tconst row = [];\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\trow.push( values[ i ] );\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatrix.push( row );\n\t}\n\tconst yvalues = data[ y ].map( x => [ x ]);\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nfunction designMatrixMissing( x, y, data, quantitative, intercept ) {\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tconst matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tconst yvalues = [];\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tfor ( let i = 0; i < data[ x[ 0 ] ].length; i++ ) {\n\t\tconst row = [];\n\t\tlet missing = false;\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tif ( isNonMissingNumber( values[ i ] ) ) {\n\t\t\t\t\trow.push( values[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tif ( isMissing( val ) ) {\n\t\t\t\t\tmissing = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !missing ) {\n\t\t\tmatrix.push( row );\n\t\t\tyvalues.push( [ data[ y ][ i ] ] );\n\t\t}\n\t}\n\tconst nobs = yvalues.length;\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nconst summaryTable = ( y, x, nobs, result, t ) => {\n\tconst cdf = tCDF.factory( nobs - x.length - 1 );\n\treturn (\n\t\t<Table bordered size=\"sm\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>{t('predictor')}</th>\n\t\t\t\t\t<th>{t('coefficient')}</th>\n\t\t\t\t\t<th>{t('std-error')}</th>\n\t\t\t\t\t<th>{TSTAT}</th>\n\t\t\t\t\t<th>{t('p-value')}</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{ result.intercept ? <tr>\n\t\t\t\t\t<th>{t('intercept')}</th>\n\t\t\t\t\t<td>{result.weights[ x.length ][ 0 ].toFixed( 6 )}</td>\n\t\t\t\t\t<td>{result.stdErrors[ x.length ].toFixed( 4 )}</td>\n\t\t\t\t\t<td>{result.tStats[ x.length ].toFixed( 4 )}</td>\n\t\t\t\t\t<td>{2.0 * (1.0-cdf( abs( result.tStats[ x.length ] ) ) ).toFixed( 4 )}</td>\n\t\t\t\t</tr> : null }\n\t\t\t\t{x.map( ( name, idx ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={idx} >\n\t\t\t\t\t\t\t<th>{name}</th>\n\t\t\t\t\t\t\t<td>{result.weights[ idx ][ 0 ].toFixed( 6 )}</td>\n\t\t\t\t\t\t\t<td>{result.stdErrors[ idx ].toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{result.tStats[ idx ].toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{2.0 * (1.0-cdf( abs( result.tStats[ idx ] ) ) ).toFixed( 4 )}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\nconst fitModel = ({ x, y, intercept, omitMissing, data, quantitative }) => {\n\tconst out = {};\n\ttry {\n\t\tconst dMatrix = omitMissing ? designMatrixMissing : designMatrix;\n\t\tconst { matrix, predictors, yvalues, nobs } = dMatrix( x, y, data, quantitative, intercept );\n\t\tout.result = new MLR( matrix, yvalues, {\n\t\t\tintercept\n\t\t});\n\t\tconst yhat = out.result.predict( matrix ).map( v => v[ 0 ] );\n\t\tout.yhat = yhat;\n\t\tconst avgFitted = mean( yhat );\n\t\tlet mss = 0;\n\t\tfor ( let i = 0; i < yhat.length; i++ ) {\n\t\t\tmss += pow( yhat[ i ] - avgFitted, 2 );\n\t\t}\n\t\tconst resid = subtract( yhat, yvalues );\n\t\tlet rss = 0;\n\t\tfor ( let i = 0; i < resid.length; i++ ) {\n\t\t\trss += pow( resid[ i ], 2 );\n\t\t}\n\t\tconst p = predictors.length;\n\t\tout.resid = resid;\n\t\tout.rSquared = mss / ( mss + rss );\n\t\tout.adjRSquared = 1 - ( 1 - out.rSquared ) * ( nobs - 1 ) / ( nobs - p - 1 );\n\t\tout.fScore = ( mss / p ) / ( rss / ( nobs - p - 1 ) );\n\t\tout.p = p;\n\t\tout.nobs = nobs;\n\t\tout.predictors = predictors;\n\t\treturn out;\n\t} catch ( _ ) {\n\t\treturn out;\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Multiple linear regression.\n*\n* @property {Object} data - object of value arrays\n* @property {string} y - outcome variable\n* @property {Array<string>} x - one or more predictor variables\n* @property {Array<string>} quantitative - array of variables in `data` that are `quantitative`\n* @property {boolean} omitMissing - controls whether to omit missing values\n* @property {boolean} intercept - controls whether to fit a model with an intercept term\n* @property {Function} onDiagnostics - callback invoked with diagnostic plots\n* @property {Function} onPredict - callback invoked with predictions and residuals after model fitting\n*/\nclass MultipleLinearRegression extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tCOUNTER += 1;\n\t\tconst { x, y, intercept, omitMissing, data, quantitative } = props;\n\t\tthis.state = {\n\t\t\t...fitModel({ x, y, intercept, omitMissing, data, quantitative }),\n\t\t\t...props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.quantitative !== prevState.quantitative ||\n\t\t\tnextProps.x !== prevState.x ||\n\t\t\tnextProps.y !== prevState.y ||\n\t\t\tnextProps.omitMissing !== prevState.omitMissing ||\n\t\t\tnextProps.intercept !== prevState.intercept\n\t\t) {\n\t\t\tconst { x, y, intercept, omitMissing, data, quantitative } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel({ x, y, intercept, omitMissing, data, quantitative }),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\thandleDiagnostics = () => {\n\t\tconst { x, y, intercept, t } = this.props;\n\t\tconst qqPlot = <Plotly\n\t\t\tdraggable\n\t\t\teditable fit\n\t\t\t{...generateQQPlotConfig( this.state.resid, 'residuals' )}\n\t\t\tmeta={{ type: 'qqplot of regression residuals', x, y, intercept }}\n\t\t/>;\n\t\tconst residualPlot = <Plotly\n\t\t\tdraggable editable fit\n\t\t\tdata={[\n\t\t\t\t{\n\t\t\t\t\tx: this.state.yhat,\n\t\t\t\t\ty: this.state.resid,\n\t\t\t\t\tmode: 'markers',\n\t\t\t\t\ttype: this.state.yhat.length > 2000 ? 'scattergl' : 'scatter'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tlayout={{\n\t\t\t\txaxis: {\n\t\t\t\t\ttitle: t('fitted-values')\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: t('residuals')\n\t\t\t\t},\n\t\t\t\ttitle: t('residuals-vs-fitted')\n\t\t\t}}\n\t\t\tmeta={{ type: 'regression residuals vs. fitted', x, y, intercept }}\n\t\t/>;\n\t\tthis.props.onDiagnostics([ qqPlot, residualPlot ]);\n\t}\n\n\thandlePredict = () => {\n\t\tconst { data, quantitative, intercept } = this.props;\n\t\tlet { x, y } = this.props;\n\t\tconst { matrix } = designMatrix( x, y, data, quantitative, intercept );\n\t\tconst yhat = this.state.result.predict( matrix ).map( v => v[ 0 ] );\n\t\tconst resid = subtract( yhat, data[ y ] );\n\t\tthis.props.onPredict( yhat, resid, COUNTER );\n\t}\n\n\trender() {\n\t\tconst { y, predictors, nobs, result, adjRSquared, p, fScore, rSquared } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !result ) {\n\t\t\treturn <Alert variant=\"danger\">{this.props.t('missing-attributes')}</Alert>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ overflowX: 'auto', width: '100%' }}>\n\t\t\t\t<span className=\"title\" >{t('multiple-regression-title', { y, counter: COUNTER })}</span>\n\t\t\t\t{summaryTable( y, predictors, nobs, result, t )}\n\t\t\t\t<p>{t('residual-standard-error')}: {round( result.stdError )}</p>\n\t\t\t\t<p>{R2} {rSquared.toFixed( 6 )}, {t('adjusted')} {R2} {adjRSquared.toFixed( 6 )}</p>\n\t\t\t\t<p>{t('f-statistic')}: {fScore.toFixed( 3 )} (${DF}: {nobs-p-1}, {p}), {t('p-value')}: {(1.0 - fCDF( fScore, p, nobs-p-1 )).toFixed( 6 )}</p>\n\t\t\t\t{ this.props.onPredict ? <Tooltip placement=\"top\" tooltip={t('use-model-to-predict-tooltip')} >\n\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\" onClick={this.handlePredict}>{t('use-model-to-predict')}</Button>\n\t\t\t\t</Tooltip> : null }\n\t\t\t\t{ this.props.onDiagnostics ? <Button variant=\"secondary\" size=\"sm\" style={{ marginLeft: 6 }} onClick={this.handleDiagnostics} >\n\t\t\t\t\t{t('model-diagnostics')}\n\t\t\t\t</Button> : null }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nMultipleLinearRegression.defaultProps = {\n\tomitMissing: false,\n\tintercept: true,\n\tonDiagnostics: null,\n\tonPredict: null\n};\n\nMultipleLinearRegression.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\ty: PropTypes.string.isRequired,\n\tx: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf( PropTypes.string ),\n\t\tPropTypes.string\n\t]).isRequired,\n\tquantitative: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tomitMissing: PropTypes.bool,\n\tintercept: PropTypes.bool,\n\tonDiagnostics: PropTypes.func,\n\tonPredict: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'StatisticalModels' )( MultipleLinearRegression );\n","// MODULES //\n\nimport isArrayLike from '@stdlib/assert/is-array-like';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n\n\n// MAIN //\n\n/**\n* Computes an element-wise subtraction.\n*\n* @param {NumberArray} arr - input array\n* @param {(NumberArray|number)} x - either an array of equal length or a scalar\n* @returns {NumberArray} output array\n*/\nfunction subtract( arr, x ) {\n\tconst isArr = isArrayLike( x );\n\tif ( !isArrayLike( arr ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must either be an array or number primitive. Value: `' + x + '`.' );\n\t}\n\tconst len = arr.length;\n\tconst out = new Array( len );\n\n\t// Case 1: x is an array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'invalid input argument. Array to be added must have a length equal to that of the input array.' );\n\t\t}\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x[ i ];\n\t\t}\n\t}\n\t// Case 2: scalar\n\telse {\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default subtract;\n","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar SingularValueDecomposition = /*#__PURE__*/function () {\n  function SingularValueDecomposition(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SingularValueDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    var m = value.rows;\n    var n = value.columns;\n    var _options$computeLeftS = options.computeLeftSingularVectors,\n        computeLeftSingularVectors = _options$computeLeftS === void 0 ? true : _options$computeLeftS,\n        _options$computeRight = options.computeRightSingularVectors,\n        computeRightSingularVectors = _options$computeRight === void 0 ? true : _options$computeRight,\n        _options$autoTranspos = options.autoTranspose,\n        autoTranspose = _options$autoTranspos === void 0 ? false : _options$autoTranspos;\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n    var swapped = false;\n    var a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Float64Array(ni);\n    var U = new Matrix(m, nu);\n    var V = new Matrix(n, n);\n    var e = new Float64Array(n);\n    var work = new Float64Array(m);\n    var si = new Float64Array(ni);\n\n    for (var i = 0; i < ni; i++) {\n      si[i] = i;\n    }\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (var k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (var _i = k; _i < m; _i++) {\n          s[k] = hypotenuse(s[k], a.get(_i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (var _i2 = k; _i2 < m; _i2++) {\n            a.set(_i2, k, a.get(_i2, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (var j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          var t = 0;\n\n          for (var _i3 = k; _i3 < m; _i3++) {\n            t += a.get(_i3, k) * a.get(_i3, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (var _i4 = k; _i4 < m; _i4++) {\n            a.set(_i4, j, a.get(_i4, j) + t * a.get(_i4, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (var _i5 = k; _i5 < m; _i5++) {\n          U.set(_i5, k, a.get(_i5, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (var _i6 = k + 1; _i6 < n; _i6++) {\n          e[k] = hypotenuse(e[k], e[_i6]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (var _i7 = k + 1; _i7 < n; _i7++) {\n            e[_i7] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (var _i8 = k + 1; _i8 < m; _i8++) {\n            work[_i8] = 0;\n          }\n\n          for (var _i9 = k + 1; _i9 < m; _i9++) {\n            for (var _j = k + 1; _j < n; _j++) {\n              work[_i9] += e[_j] * a.get(_i9, _j);\n            }\n          }\n\n          for (var _j2 = k + 1; _j2 < n; _j2++) {\n            var _t = -e[_j2] / e[k + 1];\n\n            for (var _i10 = k + 1; _i10 < m; _i10++) {\n              a.set(_i10, _j2, a.get(_i10, _j2) + _t * work[_i10]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (var _i11 = k + 1; _i11 < n; _i11++) {\n            V.set(_i11, k, e[_i11]);\n          }\n        }\n      }\n    }\n\n    var p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (var _j3 = nct; _j3 < nu; _j3++) {\n        for (var _i12 = 0; _i12 < m; _i12++) {\n          U.set(_i12, _j3, 0);\n        }\n\n        U.set(_j3, _j3, 1);\n      }\n\n      for (var _k = nct - 1; _k >= 0; _k--) {\n        if (s[_k] !== 0) {\n          for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n            var _t2 = 0;\n\n            for (var _i13 = _k; _i13 < m; _i13++) {\n              _t2 += U.get(_i13, _k) * U.get(_i13, _j4);\n            }\n\n            _t2 = -_t2 / U.get(_k, _k);\n\n            for (var _i14 = _k; _i14 < m; _i14++) {\n              U.set(_i14, _j4, U.get(_i14, _j4) + _t2 * U.get(_i14, _k));\n            }\n          }\n\n          for (var _i15 = _k; _i15 < m; _i15++) {\n            U.set(_i15, _k, -U.get(_i15, _k));\n          }\n\n          U.set(_k, _k, 1 + U.get(_k, _k));\n\n          for (var _i16 = 0; _i16 < _k - 1; _i16++) {\n            U.set(_i16, _k, 0);\n          }\n        } else {\n          for (var _i17 = 0; _i17 < m; _i17++) {\n            U.set(_i17, _k, 0);\n          }\n\n          U.set(_k, _k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (var _k2 = n - 1; _k2 >= 0; _k2--) {\n        if (_k2 < nrt && e[_k2] !== 0) {\n          for (var _j5 = _k2 + 1; _j5 < n; _j5++) {\n            var _t3 = 0;\n\n            for (var _i18 = _k2 + 1; _i18 < n; _i18++) {\n              _t3 += V.get(_i18, _k2) * V.get(_i18, _j5);\n            }\n\n            _t3 = -_t3 / V.get(_k2 + 1, _k2);\n\n            for (var _i19 = _k2 + 1; _i19 < n; _i19++) {\n              V.set(_i19, _j5, V.get(_i19, _j5) + _t3 * V.get(_i19, _k2));\n            }\n          }\n        }\n\n        for (var _i20 = 0; _i20 < n; _i20++) {\n          V.set(_i20, _k2, 0);\n        }\n\n        V.set(_k2, _k2, 1);\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n\n    while (p > 0) {\n      var _k3 = void 0,\n          kase = void 0;\n\n      for (_k3 = p - 2; _k3 >= -1; _k3--) {\n        if (_k3 === -1) {\n          break;\n        }\n\n        var alpha = Number.MIN_VALUE + eps * Math.abs(s[_k3] + Math.abs(s[_k3 + 1]));\n\n        if (Math.abs(e[_k3]) <= alpha || Number.isNaN(e[_k3])) {\n          e[_k3] = 0;\n          break;\n        }\n      }\n\n      if (_k3 === p - 2) {\n        kase = 4;\n      } else {\n        var ks = void 0;\n\n        for (ks = p - 1; ks >= _k3; ks--) {\n          if (ks === _k3) {\n            break;\n          }\n\n          var _t4 = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * _t4) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === _k3) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          _k3 = ks;\n        }\n      }\n\n      _k3++;\n\n      switch (kase) {\n        case 1:\n          {\n            var f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n              var _t5 = hypotenuse(s[_j6], f);\n\n              var cs = s[_j6] / _t5;\n              var sn = f / _t5;\n              s[_j6] = _t5;\n\n              if (_j6 !== _k3) {\n                f = -sn * e[_j6 - 1];\n                e[_j6 - 1] = cs * e[_j6 - 1];\n              }\n\n              if (wantv) {\n                for (var _i21 = 0; _i21 < n; _i21++) {\n                  _t5 = cs * V.get(_i21, _j6) + sn * V.get(_i21, p - 1);\n                  V.set(_i21, p - 1, -sn * V.get(_i21, _j6) + cs * V.get(_i21, p - 1));\n                  V.set(_i21, _j6, _t5);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            var _f = e[_k3 - 1];\n            e[_k3 - 1] = 0;\n\n            for (var _j7 = _k3; _j7 < p; _j7++) {\n              var _t6 = hypotenuse(s[_j7], _f);\n\n              var _cs = s[_j7] / _t6;\n\n              var _sn = _f / _t6;\n\n              s[_j7] = _t6;\n              _f = -_sn * e[_j7];\n              e[_j7] = _cs * e[_j7];\n\n              if (wantu) {\n                for (var _i22 = 0; _i22 < m; _i22++) {\n                  _t6 = _cs * U.get(_i22, _j7) + _sn * U.get(_i22, _k3 - 1);\n                  U.set(_i22, _k3 - 1, -_sn * U.get(_i22, _j7) + _cs * U.get(_i22, _k3 - 1));\n                  U.set(_i22, _j7, _t6);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            var scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[_k3]), Math.abs(e[_k3]));\n            var sp = s[p - 1] / scale;\n            var spm1 = s[p - 2] / scale;\n            var epm1 = e[p - 2] / scale;\n            var sk = s[_k3] / scale;\n            var ek = e[_k3] / scale;\n            var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            var c = sp * epm1 * (sp * epm1);\n            var shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            var _f2 = (sk + sp) * (sk - sp) + shift;\n\n            var g = sk * ek;\n\n            for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n              var _t7 = hypotenuse(_f2, g);\n\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n\n              var _cs2 = _f2 / _t7;\n\n              var _sn2 = g / _t7;\n\n              if (_j8 !== _k3) {\n                e[_j8 - 1] = _t7;\n              }\n\n              _f2 = _cs2 * s[_j8] + _sn2 * e[_j8];\n              e[_j8] = _cs2 * e[_j8] - _sn2 * s[_j8];\n              g = _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = _cs2 * s[_j8 + 1];\n\n              if (wantv) {\n                for (var _i23 = 0; _i23 < n; _i23++) {\n                  _t7 = _cs2 * V.get(_i23, _j8) + _sn2 * V.get(_i23, _j8 + 1);\n                  V.set(_i23, _j8 + 1, -_sn2 * V.get(_i23, _j8) + _cs2 * V.get(_i23, _j8 + 1));\n                  V.set(_i23, _j8, _t7);\n                }\n              }\n\n              _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              _cs2 = _f2 / _t7;\n              _sn2 = g / _t7;\n              s[_j8] = _t7;\n              _f2 = _cs2 * e[_j8] + _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * s[_j8 + 1];\n              g = _sn2 * e[_j8 + 1];\n              e[_j8 + 1] = _cs2 * e[_j8 + 1];\n\n              if (wantu && _j8 < m - 1) {\n                for (var _i24 = 0; _i24 < m; _i24++) {\n                  _t7 = _cs2 * U.get(_i24, _j8) + _sn2 * U.get(_i24, _j8 + 1);\n                  U.set(_i24, _j8 + 1, -_sn2 * U.get(_i24, _j8) + _cs2 * U.get(_i24, _j8 + 1));\n                  U.set(_i24, _j8, _t7);\n                }\n              }\n            }\n\n            e[p - 2] = _f2;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[_k3] <= 0) {\n              s[_k3] = s[_k3] < 0 ? -s[_k3] : 0;\n\n              if (wantv) {\n                for (var _i25 = 0; _i25 <= pp; _i25++) {\n                  V.set(_i25, _k3, -V.get(_i25, _k3));\n                }\n              }\n            }\n\n            while (_k3 < pp) {\n              if (s[_k3] >= s[_k3 + 1]) {\n                break;\n              }\n\n              var _t8 = s[_k3];\n              s[_k3] = s[_k3 + 1];\n              s[_k3 + 1] = _t8;\n\n              if (wantv && _k3 < n - 1) {\n                for (var _i26 = 0; _i26 < n; _i26++) {\n                  _t8 = V.get(_i26, _k3 + 1);\n                  V.set(_i26, _k3 + 1, V.get(_i26, _k3));\n                  V.set(_i26, _k3, _t8);\n                }\n              }\n\n              if (wantu && _k3 < m - 1) {\n                for (var _i27 = 0; _i27 < m; _i27++) {\n                  _t8 = U.get(_i27, _k3 + 1);\n                  U.set(_i27, _k3 + 1, U.get(_i27, _k3));\n                  U.set(_i27, _k3, _t8);\n                }\n              }\n\n              _k3++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  _createClass(SingularValueDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      var Y = value;\n      var e = this.threshold;\n      var scols = this.s.length;\n      var Ls = Matrix.zeros(scols, scols);\n\n      for (var i = 0; i < scols; i++) {\n        if (Math.abs(this.s[i]) <= e) {\n          Ls.set(i, i, 0);\n        } else {\n          Ls.set(i, i, 1 / this.s[i]);\n        }\n      }\n\n      var U = this.U;\n      var V = this.rightSingularVectors;\n      var VL = V.mmul(Ls);\n      var vrows = V.rows;\n      var urows = U.rows;\n      var VLU = Matrix.zeros(vrows, urows);\n\n      for (var _i28 = 0; _i28 < vrows; _i28++) {\n        for (var j = 0; j < urows; j++) {\n          var sum = 0;\n\n          for (var k = 0; k < scols; k++) {\n            sum += VL.get(_i28, k) * U.get(j, k);\n          }\n\n          VLU.set(_i28, j, sum);\n        }\n      }\n\n      return VLU.mmul(Y);\n    }\n  }, {\n    key: \"solveForDiagonal\",\n    value: function solveForDiagonal(value) {\n      return this.solve(Matrix.diag(value));\n    }\n  }, {\n    key: \"inverse\",\n    value: function inverse() {\n      var V = this.V;\n      var e = this.threshold;\n      var vrows = V.rows;\n      var vcols = V.columns;\n      var X = new Matrix(vrows, this.s.length);\n\n      for (var i = 0; i < vrows; i++) {\n        for (var j = 0; j < vcols; j++) {\n          if (Math.abs(this.s[j]) > e) {\n            X.set(i, j, V.get(i, j) / this.s[j]);\n          }\n        }\n      }\n\n      var U = this.U;\n      var urows = U.rows;\n      var ucols = U.columns;\n      var Y = new Matrix(vrows, urows);\n\n      for (var _i29 = 0; _i29 < vrows; _i29++) {\n        for (var _j9 = 0; _j9 < urows; _j9++) {\n          var sum = 0;\n\n          for (var k = 0; k < ucols; k++) {\n            sum += X.get(_i29, k) * U.get(_j9, k);\n          }\n\n          Y.set(_i29, _j9, sum);\n        }\n      }\n\n      return Y;\n    }\n  }, {\n    key: \"condition\",\n    get: function get() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n  }, {\n    key: \"norm2\",\n    get: function get() {\n      return this.s[0];\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n      var r = 0;\n      var s = this.s;\n\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (s[i] > tol) {\n          r++;\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"diagonal\",\n    get: function get() {\n      return Array.from(this.s);\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n  }, {\n    key: \"leftSingularVectors\",\n    get: function get() {\n      return this.U;\n    }\n  }, {\n    key: \"rightSingularVectors\",\n    get: function get() {\n      return this.V;\n    }\n  }, {\n    key: \"diagonalMatrix\",\n    get: function get() {\n      return Matrix.diag(this.s);\n    }\n  }]);\n\n  return SingularValueDecomposition;\n}();\n\nexport { SingularValueDecomposition as default };","export function hypotenuse(a, b) {\n  var r = 0;\n\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n\n  return 0;\n}","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AbstractMatrix } from '../matrix';\n\nvar WrapperMatrix2D = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(WrapperMatrix2D, _AbstractMatrix);\n\n  var _super = _createSuper(WrapperMatrix2D);\n\n  function WrapperMatrix2D(data) {\n    var _this;\n\n    _classCallCheck(this, WrapperMatrix2D);\n\n    _this = _super.call(this);\n    _this.data = data;\n    _this.rows = data.length;\n    _this.columns = data[0].length;\n    return _this;\n  }\n\n  _createClass(WrapperMatrix2D, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.data[rowIndex][columnIndex] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.data[rowIndex][columnIndex];\n    }\n  }]);\n\n  return WrapperMatrix2D;\n}(AbstractMatrix);\n\nexport { WrapperMatrix2D as default };"],"sourceRoot":""}