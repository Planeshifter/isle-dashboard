{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/slider/main.js","../node_modules/@isle-project/components/input/slider/index.js"],"names":["ScatterplotMenu","props","variables","groupingVariables","defaultX","defaultY","t","useState","xval","setXval","yval","setYval","color","setColor","type","setType","size","setSize","text","setText","regressionLine","setRegressionLine","regressionMethod","setRegressionMethod","lineBy","setLineBy","smoothSpan","setSmoothSpan","style","minWidth","as","title","content","width","legend","defaultValue","options","float","paddingRight","onChange","paddingLeft","clearable","clear","opacity","showRegressionOption","inline","multi","disabled","value","isArray","contains","min","max","step","variant","block","onClick","plotId","randomstring","action","output","data","id","onSelected","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_SCATTERPLOT","DATA_EXPLORER_SCATTERPLOT","onCreated","defaultProps","popover","trigger","placement","rootClose","overlay","className","CheckboxInput","context","newValue","setState","bind","global","lesson","event","target","checked","updateValue","state","this","globalVal","input","handleChange","aria-label","tooltip","tooltipPlacement","marginLeft","role","tabIndex","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","debug","logger","createTooltip","PINF","NINF","SliderInput","parseFloat","valid","validity","prevProps","precision","minLabel","maxLabel","roundn","rangeInput","handleInputChange","display","rangeInputStyle","numberInput","name","onBlur","finishChange","marginTop","numberInputStyle","autoComplete","padding","Badge","show","hideTooltip"],"mappings":"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","file":"static/js/36360.e46389ce.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport ScatterPlot from '@isle-project/components/plots/scatterplot';\nimport { DATA_EXPLORER_SHARE_SCATTERPLOT, DATA_EXPLORER_SCATTERPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ xval, setXval ] = useState( defaultX || variables[ 0 ] );\n\tconst [ yval, setYval ] = useState( defaultY || variables[ 1 ] );\n\tconst [ color, setColor ] = useState( null );\n\tconst [ type, setType ] = useState( null );\n\tconst [ size, setSize ] = useState( null );\n\tconst [ text, setText ] = useState( null );\n\tconst [ regressionLine, setRegressionLine ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState([ 'linear' ]);\n\tconst [ lineBy, setLineBy ] = useState( null );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\n\tconst generateScatterplot = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = { xval, yval, plotId };\n\t\tif ( color ) {\n\t\t\taction.color = color;\n\t\t}\n\t\tif ( type ) {\n\t\t\taction.type = type;\n\t\t}\n\t\tif ( size ) {\n\t\t\taction.size = size;\n\t\t}\n\t\tif ( text ) {\n\t\t\taction.text = text;\n\t\t}\n\t\tif ( regressionLine ) {\n\t\t\taction.regressionLine = regressionLine;\n\t\t\taction.regressionMethod = regressionMethod;\n\t\t}\n\t\tif ( contains( regressionMethod, 'smooth' ) ) {\n\t\t\taction.smoothSpan = smoothSpan;\n\t\t}\n\t\tif ( lineBy ) {\n\t\t\taction.lineBy = lineBy;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SCATTERPLOT, action );\n\t\t};\n\t\tconst output = <ScatterPlot\n\t\t\tdata={props.data}\n\t\t\txval={xval} yval={yval} color={color} type={type} size={size} text={text}\n\t\t\tregressionLine={regressionLine} regressionMethod={regressionMethod}\n\t\t\tlineBy={lineBy} smoothSpan={smoothSpan}\n\t\t\tid={plotId}\n\t\t\taction={action}\n\t\t\tonSelected={props.onSelected}\n\t\t\tonShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SCATTERPLOT, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card style={{ minWidth: 650 }} >\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot')}\n\t\t\t\t<QuestionButton title={t('Scatterplot')} content={t('Scatterplot-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('x-axis')}\n\t\t\t\t\t\tdefaultValue={xval}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setXval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\tdefaultValue={yval}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setYval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Labels:\"\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tonChange={setText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Color:\"\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setColor}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Type:\"\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setType}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Size:\"\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setSize}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<div style={{\n\t\t\t\t\topacity: props.showRegressionOption ? 1.0 : 0.0\n\t\t\t\t}}>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend=\"Show Regression Model\"\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetRegressionLine( !regressionLine );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend=\"Method:\"\n\t\t\t\t\t\t\tdefaultValue=\"linear\"\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend=\"Split By:\"\n\t\t\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={setLineBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains( regressionMethod, 'smooth' )}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={0.66}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<Button variant=\"primary\" block onClick={generateScatterplot}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {},\n\tshowRegressionOption: true\n};\n\nScatterplotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowRegressionOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Badge from 'react-bootstrap/Badge';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// FUNCTIONS //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}:`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}:`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\treturn tooltip;\n}\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nclass SliderInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\ttooltip: createTooltip( props ),\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t} else if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = createTooltip( nextProps );\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tconst { max, min, step } = this.props;\n\t\tlet value = event.target.value;\n\t\tif ( value !== '' ) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if ( step === 1.0 && value !== '' ) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( valid && value !== '' ) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tconst { legend, disabled, inline, min, max, precision, step, minLabel, maxLabel } = this.props;\n\t\tif ( value !== '' ) {\n\t\t\troundn( value, ( -1.0 )*precision );\n\t\t}\n\t\tconst rangeInput = <input\n\t\t\ttype=\"range\"\n\t\t\tclassName=\"slider-range-input\"\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tstyle={{\n\t\t\t\twidth: '160px',\n\t\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t\t...this.props.rangeInputStyle\n\t\t\t}}\n\t\t/>;\n\t\tconst numberInput = <input\n\t\t\ttype=\"number\"\n\t\t\tname=\"input\"\n\t\t\tclassName=\"slider-number-input\"\n\t\t\tdisabled={disabled}\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tstyle={{\n\t\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t\t...this.props.numberInputStyle\n\t\t\t}}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\n\t\tif ( inline ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"input\" style={{\n\t\t\t\t\tpadding: '5px',\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tooltip\n\t\t\t\tid=\"sliderTooltip\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tshow={!this.props.hideTooltip}\n\t\t\t\ttooltip={disabled ? 'The slider input is disabled right now.' : this.state.tooltip}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\nSliderInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}