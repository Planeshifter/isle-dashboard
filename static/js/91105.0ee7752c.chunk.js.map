{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/max.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/sum.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/nest.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-force/src/center.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-force/src/link.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../node_modules/d3-hierarchy/src/cluster.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/pack/index.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/partition.js","../node_modules/d3-hierarchy/src/stratify.js","../node_modules/d3-hierarchy/src/tree.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../node_modules/d3-hierarchy/src/treemap/index.js","../node_modules/d3-hierarchy/src/treemap/binary.js","../node_modules/d3-hierarchy/src/treemap/sliceDice.js","../node_modules/d3-hierarchy/src/treemap/resquarify.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-timer/src/timer.js"],"names":["a","b","NaN","compare","length","f","d","x","array","Array","prototype","slice","map","Math","sqrt","values","valueof","value","max","n","i","m","sum","isNaN","min","prefix","Map","object","each","key","set","isArray","o","constructor","has","this","get","remove","property","clear","keys","push","entries","size","empty","_sortValues","_rollup","nest","_sortKeys","apply","depth","createResult","setResult","sort","keyValue","valuesByKey","result","_entries","sortKey","v","k","createObject","setObject","createMap","setMap","sortKeys","order","sortValues","rollup","Set","proto","add","noop","dispatch","t","arguments","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","hasOwnProperty","type","c","callback","concat","on","typename","T","copy","call","that","args","y","nodes","force","node","sx","sy","initialize","random","tree","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","next","defaultX","defaultY","quadtree","Quadtree","addAll","undefined","leaf_copy","treeProto","vx","vy","radius","radii","strength","iterations","xi","yi","ri","ri2","visitAfter","prepare","index","visit","quad","rj","r","l","jiggle","constant","child","source","target","pop","cover","xz","yz","Infinity","floor","z","extent","find","x2","y2","q","x3","y3","quads","dx","dy","d2","retainer","previous","removeAll","root","nodeById","nodeId","links","strengths","distances","count","bias","id","link","distance","alpha","initializeStrength","initializeDistance","initialAngle","PI","_nodes","simulation","_alpha","_alphaMin","_alphaDecay","pow","_alphaTarget","_velocityDecay","forces","stepper","timer","step","event","tick","stop","fx","fy","initializeNodes","angle","cos","sin","initializeForce","restart","alphaMin","alphaDecay","alphaTarget","velocityDecay","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","radiuses","defaultSeparation","meanXReduce","maxYReduce","separation","nodeSize","cluster","previousNode","eachAfter","children","reduce","meanX","maxY","left","leafLeft","leafRight","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","height","current","reverse","path","end","start","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","circles","p","e","shuffle","B","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","C","place","intersects","score","circle","packEnclose","aa","ca","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius","padding","radiusLeaf","packChildren","translateChild","round","partition","positionNode","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","s","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","create","phi","squarifyRatio","ratio","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","custom","squarify","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","resquarify","_squarify","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","setTimeout","clearNow","Timer","_call","_time","_next","delay","time","wake","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError"],"mappings":"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","file":"static/js/91105.0ee7752c.chunk.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import map from \"./map\";\nexport default function () {\n  var keys = [],\n      _sortKeys = [],\n      _sortValues,\n      _rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (_sortValues != null) array.sort(_sortValues);\n      return _rollup != null ? _rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function (values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n    return result;\n  }\n\n  function _entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array,\n        sortKey = _sortKeys[depth - 1];\n    if (_rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {\n      array.push({\n        key: k,\n        values: _entries(v, depth)\n      });\n    });\n    return sortKey != null ? array.sort(function (a, b) {\n      return sortKey(a.key, b.key);\n    }) : array;\n  }\n\n  return nest = {\n    object: function object(array) {\n      return apply(array, 0, createObject, setObject);\n    },\n    map: function map(array) {\n      return apply(array, 0, createMap, setMap);\n    },\n    entries: function entries(array) {\n      return _entries(apply(array, 0, createMap, setMap), 0);\n    },\n    key: function key(d) {\n      keys.push(d);\n      return nest;\n    },\n    sortKeys: function sortKeys(order) {\n      _sortKeys[keys.length - 1] = order;\n      return nest;\n    },\n    sortValues: function sortValues(order) {\n      _sortValues = order;\n      return nest;\n    },\n    rollup: function rollup(f) {\n      _rollup = f;\n      return nest;\n    }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export default function (x, y) {\n  var nodes;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, abort.\n\n\n  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, { defaultX } from \"./x.js\";\nimport tree_y, { defaultY } from \"./y.js\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function (radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n        i = (y < y0) << 1 | x < x0;\n        parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n        switch (i) {\n          case 0:\n            x1 = x0 + z, y1 = y0 + z;\n            break;\n\n          case 1:\n            x0 = x1 - z, y1 = y0 + z;\n            break;\n\n          case 2:\n            x1 = x0 + z, y0 = y1 - z;\n            break;\n\n          case 3:\n            x0 = x1 - z, y0 = y1 - z;\n            break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad.js\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad.js\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad.js\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { map } from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = _nodes.length,\n        node;\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n      forces.each(function (force) {\n        force(_alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\nimport { x, y } from \"./simulation\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do {\n          strength += strengths[q.data.index];\n        } while (q = q.next);\n      }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","import constant from \"./constant\";\nexport default function (radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","import constant from \"./constant\";\nexport default function (x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}","import constant from \"./constant\";\nexport default function (y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n\n  while (children = node.children) {\n    node = children[0];\n  }\n\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n\n  while (children = node.children) {\n    node = children[children.length - 1];\n  }\n\n  return node;\n}\n\nexport default function () {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0; // First walk, computing the initial x & y values.\n\n    root.eachAfter(function (node) {\n      var children = node.children;\n\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.\n\n    return root.eachAfter(nodeSize ? function (node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function (node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function (x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];\n  };\n\n  cluster.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;\n  };\n\n  return cluster;\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export var slice = Array.prototype.slice;\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}","import { shuffle, slice } from \"../array.js\";\nexport default function (circles) {\n  var i = 0,\n      n = (circles = shuffle(slice.call(circles))).length,\n      B = [],\n      p,\n      e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.\n\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  } // If we get here then B must have at least two elements.\n\n\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  } // If we get here then something is very wrong.\n\n\n  throw new Error();\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x21 = x2 - x1,\n      y21 = y2 - y1,\n      r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x3 = c.x,\n      y3 = c.y,\n      r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}","import enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x,\n      x,\n      a2,\n      dy = b.y - a.y,\n      y,\n      b2,\n      d2 = dx * dx + dy * dy;\n\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.\n\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r; // Place the second circle.\n\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r; // Place the third circle.\n\n  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.\n\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a; // Attempt to place each remaining circle…\n\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next); // Success! Insert the new circle c between a and b.\n\n\n    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.\n\n    aa = score(a);\n\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n\n    b = a.next;\n  } // Compute the enclosing circle of the front chain.\n\n\n  a = [b._], c = b;\n\n  while ((c = c.next) !== b) {\n    a.push(c._);\n  }\n\n  c = enclose(a); // Translate the circles to put the enclosing circle around the origin.\n\n  for (i = 0; i < n; ++i) {\n    a = circles[i], a.x -= c.x, a.y -= c.y;\n  }\n\n  return c.r;\n}\nexport default function (circles) {\n  packEnclose(circles);\n  return circles;\n}","export function optional(f) {\n  return f == null ? null : required(f);\n}\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error();\n  return f;\n}","export function constantZero() {\n  return 0;\n}\nexport default function (x) {\n  return function () {\n    return x;\n  };\n}","import { packEnclose } from \"./siblings.js\";\nimport { optional } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function () {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n\n    return root;\n  }\n\n  pack.radius = function (x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r += r;\n      }\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r -= r;\n      }\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}","import { required } from \"./accessors.js\";\nimport { Node, computeHeight } from \"./hierarchy/index.js\";\nvar keyPrefix = \"$\",\n    // Protect against keys like “__proto__”.\npreroot = {\n  depth: -1\n},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function () {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function (node) {\n      node.depth = node.parent.depth + 1;\n      --n;\n    }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n    return root;\n  }\n\n  stratify.id = function (x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function (x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}","import { Node } from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n} // function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\n\n\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n} // This function works analogously to nextLeft.\n\n\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n} // Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\n\n\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n} // All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\n\n\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\n\n\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n\n  this.a = this; // ancestor\n\n  this.z = 0; // prelim\n\n  this.m = 0; // mod\n\n  this.c = 0; // change\n\n  this.s = 0; // shift\n\n  this.t = null; // thread\n\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n} // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\n\nexport default function () {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.\n\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.\n\n    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n    return root;\n  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n\n\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  } // Computes all real x-coordinates by summing up the modifiers recursively.\n\n\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  } // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n\n\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function (x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];\n  };\n\n  tree.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;\n  };\n\n  return tree;\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nexport var phi = (1 + Math.sqrt(5)) / 2;\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx,\n      dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.\n\n    do {\n      sumValue = nodes[i1++].value;\n    } while (!sumValue && i1 < n);\n\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.\n\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n\n      if (newRatio > minRatio) {\n        sumValue -= nodeValue;\n        break;\n      }\n\n      minRatio = newRatio;\n    } // Position and record the row orientation.\n\n\n    rows.push(row = {\n      value: sumValue,\n      dice: dx < dy,\n      children: nodes.slice(i0, i1)\n    });\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\nexport default (function custom(ratio) {\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport { required } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\nexport default function () {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 = root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function (x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function (x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function (x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function (x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function (x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function (x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function (x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function (x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function (x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i,\n      n = nodes.length,\n      sum,\n      sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = value / 2 + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;\n    }\n\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if (x1 - x0 > y1 - y0) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\nexport default function (parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport { phi, squarifyRatio } from \"./squarify.js\";\nexport default (function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) {\n          row.value += nodes[i].value;\n        }\n\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);","export default function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return a * (1 - t) + b * t;\n  };\n}","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}"],"sourceRoot":""}