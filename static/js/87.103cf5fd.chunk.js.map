{"version":3,"sources":["../node_modules/d3-dispatch/src/index.js","../node_modules/@isle-project/utils/svg/index.js","../node_modules/d3-cloud/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/string/remove-punctuation/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/string/remove-punctuation/lib/remove_punctuation.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/stopwords-en/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-fin/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-fr/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-ger/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-it/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-por/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-sp/lib/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/datasets/savoy-stopwords-swe/lib/browser.js","../node_modules/@isle-project/components/word-cloud/main.js"],"names":["getSVGString","svgNode","setAttribute","cssText","element","styleElement","document","createElement","innerHTML","isArray","children","refNode","insertBefore","appendCSS","parentElement","selectorTextArr","push","id","classList","c","length","contains","nodes","getElementsByTagName","i","classes","extractedCSSText","styleSheets","s","cssRules","e","name","r","selectorText","getCSSStyles","svgString","XMLSerializer","serializeToString","replace","svgString2Image","width","height","callback","imgsrc","btoa","unescape","encodeURIComponent","canvas","context","getContext","image","Image","onload","clearRect","drawImage","toBlob","blob","filesize","round","src","dispatch","cloudRadians","Math","PI","ch","cloudText","d","text","cloudFont","cloudFontNormal","cloudFontSize","sqrt","value","cloudRotate","random","cloudPadding","cloudSprite","contextAndRatio","data","di","sprite","ratio","x","y","maxh","n","save","font","style","weight","size","w","measureText","h","rotate","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","abs","cw","translate","fillText","padding","lineWidth","strokeText","restore","xoff","yoff","x1","y1","x0","y0","hasText","pixels","getImageData","w32","seen","seenRow","j","k","m","slice","cloudCollide","tag","board","sw","last","lx","sx","msx","cloudBounds","bounds","b0","b1","archimedeanSpiral","t","cloudCanvas","functor","module","exports","fontSize","fontStyle","fontWeight","spiral","words","timeInterval","Infinity","event","timer","cloud","place","dxdy","dx","dy","a","b","startX","startY","maxDelta","dt","min","_","arguments","start","fillStyle","strokeStyle","textAlign","zeroArray","tags","map","call","this","sort","clearInterval","setInterval","step","Date","now","stop","spirals","on","apply","archimedean","rectangular","sign","removePunctuation","isString","isPrimitive","RE","str","TypeError","addResources","fill","scaleOrdinal","schemeCategory10","RE_NUMBERS","createBagOfWords","texts","stopwords","minCount","customStopwords","PINF","NINF","wordCounts","concat","tokens","newTokens","tokenize","lowercase","splice","bagOfWords","objectEntries","arr","filtered","Wrapper","props","word","state","svg","node","dataBlob","saveAs","language","STOPWORDS_EN","STOPWORDS_FIN","STOPWORDS_FR","STOPWORDS_GER","STOPWORDS_IT","STOPWORDS_POR","STOPWORDS_SP","STOPWORDS_SWE","generateStopwords","precalculated","nRecords","addWordCloud","nextProps","absdiff","updateThreshold","triggerRender","nobs","guessEquality","updateWordCloud","setState","fontSizeMapper","select","findDOMNode","selectAll","remove","append","attr","cloudLayout","transition","duration","enter","onClick","exit","position","saveButton","placement","tooltip","variant","saveToPNG","right","top","zIndex","aria-label","className","prevState","newState","Component","defaultProps","withTranslation"],"mappings":";4FAAA,iE,kCCAA,4HA4EA,SAASA,EAAcC,GACtBA,EAAQC,aAAc,QAAS,gCAC/BD,EAAQC,aAAc,QAAS,sBAjEhC,SAAoBC,EAASC,GAC5B,IAAMC,EAAeC,SAASC,cAAe,SAG7C,GAFAF,EAAaH,aAAc,OAAQ,YACnCG,EAAaG,UAAYL,EACpBM,IAASL,EAAQM,UAAa,CAClC,IAAMC,EAAUP,EAAQM,SAAU,IAAO,KACzCN,EAAQQ,aAAcP,EAAcM,IA6DrCE,CAzDD,SAAuBC,GACtB,IAAMC,EAAkB,GAExB,GADAA,EAAgBC,KAAM,IAAIF,EAAcG,IACnCR,IAASK,EAAcI,WAC3B,IAAM,IAAIC,EAAI,EAAGA,EAAIL,EAAcI,UAAUE,OAAQD,IAC9CE,IAAUN,EAAiB,IAAID,EAAcI,UAAUC,KAC5DJ,EAAgBC,KAAM,IAAIF,EAAcI,UAAUC,IAKrD,IADA,IAAMG,EAAQR,EAAcS,qBAAsB,KACxCC,EAAI,EAAGA,EAAIF,EAAMF,OAAQI,IAAM,CACxC,IAAMP,EAAKK,EAAME,GAAGP,GACdI,IAAUN,EAAiB,IAAIE,IACpCF,EAAgBC,KAAM,IAAIC,GAE3B,IAAMQ,EAAUH,EAAME,GAAGN,UACzB,GAAKT,IAASgB,GACb,IAAM,IAAIN,EAAI,EAAGA,EAAIM,EAAQL,OAAQD,IAC9BE,IAAUN,EAAiB,IAAIU,EAAQN,KAC5CJ,EAAgBC,KAAM,IAAIS,EAAQN,IAOtC,IADA,IAAIO,EAAmB,GACbF,EAAI,EAAGA,EAAIlB,SAASqB,YAAYP,OAAQI,IAAM,CACvD,IAAMI,EAAItB,SAASqB,YAAYH,GAC/B,IACC,IAAMI,EAAEC,SACP,SAEA,MAAQC,GACR,GAAgB,kBAAXA,EAAEC,KACN,MAAMD,EAEP,SAIF,IADA,IAAMD,EAAWD,EAAEC,SACTG,EAAI,EAAGA,EAAIH,EAAST,OAAQY,IAChCX,IAAUN,EAAiBc,EAASG,GAAGC,gBAC3CP,GAAoBG,EAASG,GAAG7B,SAInC,OAAOuB,EAScQ,CAAcjC,GACVA,GAEzB,IACIkC,GADe,IAAIC,eACIC,kBAAmBpC,GAI9C,OAFAkC,GADAA,EAAYA,EAAUG,QAAQ,kBAAmB,iBAC3BA,QAAQ,cAAe,cAK9C,SAASC,EAAiBJ,EAAWK,EAAOC,EAAQC,GACnD,IAAMC,EAAS,6BAA8BC,KAAMC,SAAUC,mBAAoBX,KAE3EY,EAASzC,SAASC,cAAe,UACjCyC,EAAUD,EAAOE,WAAY,MAEnCF,EAAOP,MAAQA,EACfO,EAAON,OAASA,EAEhB,IAAMS,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACdJ,EAAQK,UAAW,EAAG,EAAGb,EAAOC,GAChCO,EAAQM,UAAWJ,EAAO,EAAG,EAAGV,EAAOC,GAEvCM,EAAOQ,QAAQ,SAAiBC,GAC/B,IAAMC,EAAWC,IAAOF,EAAKpC,OAAO,MAAS,MAC7C,GAAKsB,EACJ,OAAOA,EAAUc,EAAMC,OAI1BP,EAAMS,IAAMhB,I,qBC7Gb,IAAIiB,EAAW,EAAQ,MAAeA,SAElCC,EAAeC,KAAKC,GAAK,IAEzBC,EAAK,KAwNT,SAASC,EAAUC,GACjB,OAAOA,EAAEC,KAGX,SAASC,IACP,MAAO,QAGT,SAASC,IACP,MAAO,SAGT,SAASC,EAAcJ,GACrB,OAAOJ,KAAKS,KAAKL,EAAEM,OAGrB,SAASC,IACP,OAAqC,OAAV,EAAhBX,KAAKY,UAAgB,GAGlC,SAASC,IACP,OAAO,EAKT,SAASC,EAAYC,EAAiBX,EAAGY,EAAMC,GAC7C,IAAIb,EAAEc,OAAN,CACA,IAAI7D,EAAI0D,EAAgB7B,QACpBiC,EAAQJ,EAAgBI,MAC5B9D,EAAEkC,UAAU,EAAG,EAAG,KAAY4B,EAAOjB,EAAKiB,GAC1C,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAO,EACPC,EAAIP,EAAK1D,OAGb,MAFE2D,IAEOA,EAAKM,GAAG,CACfnB,EAAIY,EAAKC,GACT5D,EAAEmE,OACFnE,EAAEoE,KAAOrB,EAAEsB,MAAQ,IAAMtB,EAAEuB,OAAS,QAAUvB,EAAEwB,KAAO,GAAKT,GAAS,MAAQf,EAAEqB,KAC/E,IAAII,EAAIxE,EAAEyE,YAAY1B,EAAEC,KAAO,KAAK3B,MAAQyC,EACxCY,EAAI3B,EAAEwB,MAAQ,EAElB,GAAIxB,EAAE4B,OAAQ,CACZ,IAAIC,EAAKjC,KAAKkC,IAAI9B,EAAE4B,OAASjC,GACzBoC,EAAKnC,KAAKoC,IAAIhC,EAAE4B,OAASjC,GACzBsC,EAAMR,EAAIM,EACVG,EAAMT,EAAII,EACVM,EAAMR,EAAII,EACVK,EAAMT,EAAIE,EACdJ,EAAI7B,KAAKyC,IAAIzC,KAAK0C,IAAIL,EAAMG,GAAMxC,KAAK0C,IAAIL,EAAMG,IAAQ,IAAQ,GAAK,EACtET,IAAM/B,KAAKyC,IAAIzC,KAAK0C,IAAIJ,EAAMC,GAAMvC,KAAK0C,IAAIJ,EAAMC,SAEnDV,EAAIA,EAAI,IAAQ,GAAK,EAWvB,GARIE,EAAIT,IAAMA,EAAOS,GAEjBX,EAAIS,GAAKc,OACXvB,EAAI,EACJC,GAAKC,EACLA,EAAO,GAGLD,EAAIU,GAAK7B,EAAI,MACjB7C,EAAEuF,WAAWxB,GAAKS,GAAK,IAAMV,GAAQE,GAAKU,GAAK,IAAMZ,GACjDf,EAAE4B,QAAQ3E,EAAE2E,OAAO5B,EAAE4B,OAASjC,GAClC1C,EAAEwF,SAASzC,EAAEC,KAAM,EAAG,GAClBD,EAAE0C,UAASzF,EAAE0F,UAAY,EAAI3C,EAAE0C,QAASzF,EAAE2F,WAAW5C,EAAEC,KAAM,EAAG,IACpEhD,EAAE4F,UACF7C,EAAE1B,MAAQmD,EACVzB,EAAEzB,OAASoD,EACX3B,EAAE8C,KAAO9B,EACThB,EAAE+C,KAAO9B,EACTjB,EAAEgD,GAAKvB,GAAK,EACZzB,EAAEiD,GAAKtB,GAAK,EACZ3B,EAAEkD,IAAMlD,EAAEgD,GACVhD,EAAEmD,IAAMnD,EAAEiD,GACVjD,EAAEoD,SAAU,EACZpC,GAAKS,EAMP,IAHA,IAAI4B,EAASpG,EAAEqG,aAAa,EAAG,EAAG,KAAYvC,EAAOjB,EAAKiB,GAAOH,KAC7DE,EAAS,KAEJD,GAAM,GAEb,IADAb,EAAIY,EAAKC,IACFuC,QAAP,CAKA,IAJA,IACIG,GADA9B,EAAIzB,EAAE1B,QACK,EAGNhB,GAFLqE,EAAI3B,EAAEiD,GAAKjD,EAAEmD,GAEJ,GAAG7F,EAAIqE,EAAI4B,EAAKjG,IAC3BwD,EAAOxD,GAAK,EAId,GAAS,OADT0D,EAAIhB,EAAE8C,MACS,OACf7B,EAAIjB,EAAE+C,KAIN,IAHA,IAAIS,EAAO,EACPC,GAAW,EAENC,EAAI,EAAGA,EAAI/B,EAAG+B,IAAK,CAC1B,IAASpG,EAAI,EAAGA,EAAImE,EAAGnE,IAAK,CAC1B,IAAIqG,EAAIJ,EAAMG,GAAKpG,GAAK,GACpBsG,EAAIP,EAAiB,MAATpC,EAAIyC,IAAkB1C,EAAI1D,IAAM,GAAK,GAAK,GAAKA,EAAI,GAAK,EACxEwD,EAAO6C,IAAMC,EACbJ,GAAQI,EAGNJ,EAAMC,EAAUC,GAClB1D,EAAEmD,KACFxB,IACA+B,IACAzC,KAIJjB,EAAEiD,GAAKjD,EAAEmD,GAAKM,EACdzD,EAAEc,OAASA,EAAO+C,MAAM,GAAI7D,EAAEiD,GAAKjD,EAAEmD,IAAMI,KAK/C,SAASO,EAAaC,EAAKC,EAAOC,GAChCA,IAAO,EAUP,IATA,IAOIC,EAPApD,EAASiD,EAAIjD,OACbW,EAAIsC,EAAIzF,OAAS,EACjB6F,EAAKJ,EAAI/C,GAAKS,GAAK,GACnB2C,EAAU,IAALD,EACLE,EAAM,GAAKD,EACXzC,EAAIoC,EAAId,GAAKc,EAAIZ,GACjBnC,GAAK+C,EAAI9C,EAAI8C,EAAIZ,IAAMc,GAAME,GAAM,GAG9BT,EAAI,EAAGA,EAAI/B,EAAG+B,IAAK,CAC1BQ,EAAO,EAEP,IAAK,IAAI5G,EAAI,EAAGA,GAAKmE,EAAGnE,IACtB,IAAK4G,GAAQG,GAAO/G,EAAImE,GAAKyC,EAAOpD,EAAO4C,EAAIjC,EAAInE,MAAQ8G,EAAK,IAAMJ,EAAMhD,EAAI1D,GAAI,OAAO,EAG7F0D,GAAKiD,EAGP,OAAO,EAGT,SAASK,EAAYC,EAAQvE,GAC3B,IAAIwE,EAAKD,EAAO,GACZE,EAAKF,EAAO,GACZvE,EAAEgB,EAAIhB,EAAEkD,GAAKsB,EAAGxD,IAAGwD,EAAGxD,EAAIhB,EAAEgB,EAAIhB,EAAEkD,IAClClD,EAAEiB,EAAIjB,EAAEmD,GAAKqB,EAAGvD,IAAGuD,EAAGvD,EAAIjB,EAAEiB,EAAIjB,EAAEmD,IAClCnD,EAAEgB,EAAIhB,EAAEgD,GAAKyB,EAAGzD,IAAGyD,EAAGzD,EAAIhB,EAAEgB,EAAIhB,EAAEgD,IAClChD,EAAEiB,EAAIjB,EAAEiD,GAAKwB,EAAGxD,IAAGwD,EAAGxD,EAAIjB,EAAEiB,EAAIjB,EAAEiD,IAOxC,SAASyB,EAAkBlD,GACzB,IAAI5D,EAAI4D,EAAK,GAAKA,EAAK,GACvB,OAAO,SAAUmD,GACf,MAAO,CAAC/G,GAAK+G,GAAK,IAAM/E,KAAKoC,IAAI2C,GAAIA,EAAI/E,KAAKkC,IAAI6C,KA8CtD,SAASC,IACP,OAAOxI,SAASC,cAAc,UAGhC,SAASwI,EAAQ7E,GACf,MAAoB,oBAANA,EAAmBA,EAAI,WACnC,OAAOA,GA/aX8E,EAAOC,QAAU,WACf,IAAIvD,EAAO,CAAC,IAAK,KACbvB,EAAOF,EACPsB,EAAOnB,EACP8E,EAAW5E,EACX6E,EAAY9E,EACZ+E,EAAa/E,EACbyB,EAASrB,EACTmC,EAAUjC,EACV0E,EAAST,EACTU,EAAQ,GACRC,EAAeC,IACfC,EAAQ7F,EAAS,OAAQ,OACzB8F,EAAQ,KACRhF,EAASZ,KAAKY,OACdiF,EAAQ,GACR5G,EAAS+F,EAqFb,SAASc,EAAM1B,EAAOD,EAAKQ,GAKpB/C,EAAK,GACLA,EAAK,GAYV,IAjBA,IAaImE,EACAC,EACAC,EA+PcC,EAAGC,EAvQjBC,EAASjC,EAAI/C,EACbiF,EAASlC,EAAI9C,EACbiF,EAAWtG,KAAKS,KAAKmB,EAAK,GAAKA,EAAK,GAAKA,EAAK,GAAKA,EAAK,IACxD9D,EAAIyH,EAAO3D,GACX2E,EAAK3F,IAAW,GAAK,GAAK,EAC1BmE,GAAKwB,GAKFR,EAAOjI,EAAEiH,GAAKwB,MACnBP,IAAOD,EAAK,GACZE,IAAOF,EAAK,KACR/F,KAAKwG,IAAIxG,KAAK0C,IAAIsD,GAAKhG,KAAK0C,IAAIuD,KAAQK,KAG5C,GAFAnC,EAAI/C,EAAIgF,EAASJ,EACjB7B,EAAI9C,EAAIgF,EAASJ,IACb9B,EAAI/C,EAAI+C,EAAIb,GAAK,GAAKa,EAAI9C,EAAI8C,EAAIZ,GAAK,GAAKY,EAAI/C,EAAI+C,EAAIf,GAAKxB,EAAK,IAAMuC,EAAI9C,EAAI8C,EAAId,GAAKzB,EAAK,OAE7F+C,IAAWT,EAAaC,EAAKC,EAAOxC,EAAK,QACvC+C,IAoPYwB,EApPgBxB,GAoPnBuB,EApPc/B,GAqPzB/C,EAAI8E,EAAE9C,GAAK+C,EAAE,GAAG/E,GAAK8E,EAAE9E,EAAI8E,EAAE5C,GAAK6C,EAAE,GAAG/E,GAAK8E,EAAE7E,EAAI6E,EAAE7C,GAAK8C,EAAE,GAAG9E,GAAK6E,EAAE7E,EAAI6E,EAAE3C,GAAK4C,EAAE,GAAG9E,IArP9C,CAWxC,IAVA,IAQIiD,EARApD,EAASiD,EAAIjD,OACbW,EAAIsC,EAAIzF,OAAS,EACjB2F,EAAKzC,EAAK,IAAM,EAChB2C,EAAKJ,EAAI/C,GAAKS,GAAK,GACnB2C,EAAU,IAALD,EACLE,EAAM,GAAKD,EACXzC,EAAIoC,EAAId,GAAKc,EAAIZ,GACjBnC,GAAK+C,EAAI9C,EAAI8C,EAAIZ,IAAMc,GAAME,GAAM,GAG9BT,EAAI,EAAGA,EAAI/B,EAAG+B,IAAK,CAC1BQ,EAAO,EAEP,IAAK,IAAI5G,EAAI,EAAGA,GAAKmE,EAAGnE,IACtB0G,EAAMhD,EAAI1D,IAAM4G,GAAQG,GAAO/G,EAAImE,GAAKyC,EAAOpD,EAAO4C,EAAIjC,EAAInE,MAAQ8G,EAAK,GAG7EpD,GAAKiD,EAIP,cADOF,EAAIjD,QACJ,EAKb,OAAO,EAwDT,OAjMA2E,EAAM5G,OAAS,SAAUwH,GACvB,OAAOC,UAAUpJ,QAAU2B,EAASgG,EAAQwB,GAAIZ,GAAS5G,GAG3D4G,EAAMc,MAAQ,WACZ,IAAI5F,EAgEN,SAAoB9B,GAClBA,EAAOP,MAAQO,EAAON,OAAS,EAC/B,IAAIwC,EAAQnB,KAAKS,KAAKxB,EAAOE,WAAW,MAAMuE,aAAa,EAAG,EAAG,EAAG,GAAG1C,KAAK1D,QAAU,GACtF2B,EAAOP,MAAQ,KAAYyC,EAC3BlC,EAAON,OAASuB,EAAKiB,EACrB,IAAIjC,EAAUD,EAAOE,WAAW,MAGhC,OAFAD,EAAQ0H,UAAY1H,EAAQ2H,YAAc,MAC1C3H,EAAQ4H,UAAY,SACb,CACL5H,QAASA,EACTiC,MAAOA,GA1EahC,CAAWF,KAC7BmF,EAsYR,SAAmB7C,GACjB,IAAI2E,EAAI,GACJxI,GAAK,EAET,OAASA,EAAI6D,GACX2E,EAAExI,GAAK,EAGT,OAAOwI,EA9YOa,EAAWnF,EAAK,IAAM,GAAKA,EAAK,IACxC+C,EAAS,KACTpD,EAAIiE,EAAMlI,OACVI,GAAK,EACLsJ,EAAO,GACPhG,EAAOwE,EAAMyB,KAAI,SAAU7G,EAAG1C,GAQhC,OAPA0C,EAAEC,KAAOA,EAAK6G,KAAKC,KAAM/G,EAAG1C,GAC5B0C,EAAEqB,KAAOA,EAAKyF,KAAKC,KAAM/G,EAAG1C,GAC5B0C,EAAEsB,MAAQ2D,EAAU6B,KAAKC,KAAM/G,EAAG1C,GAClC0C,EAAEuB,OAAS2D,EAAW4B,KAAKC,KAAM/G,EAAG1C,GACpC0C,EAAE4B,OAASA,EAAOkF,KAAKC,KAAM/G,EAAG1C,GAChC0C,EAAEwB,OAASwD,EAAS8B,KAAKC,KAAM/G,EAAG1C,GAClC0C,EAAE0C,QAAUA,EAAQoE,KAAKC,KAAM/G,EAAG1C,GAC3B0C,KACNgH,MAAK,SAAUlB,EAAGC,GACnB,OAAOA,EAAEvE,KAAOsE,EAAEtE,QAKpB,OAHIgE,GAAOyB,cAAczB,GACzBA,EAAQ0B,YAAYC,EAAM,GAC1BA,IACO1B,EAEP,SAAS0B,IAGP,IAFA,IAAIZ,EAAQa,KAAKC,MAEVD,KAAKC,MAAQd,EAAQlB,KAAkB/H,EAAI6D,GAAKqE,GAAO,CAC5D,IAAIxF,EAAIY,EAAKtD,GACb0C,EAAEgB,EAAIQ,EAAK,IAAMhB,IAAW,KAAO,EACnCR,EAAEiB,EAAIO,EAAK,IAAMhB,IAAW,KAAO,EACnCE,EAAYC,EAAiBX,EAAGY,EAAMtD,GAElC0C,EAAEoD,SAAWsC,EAAM1B,EAAOhE,EAAGuE,KAC/BqC,EAAK9J,KAAKkD,GACVuF,EAAMuB,KAAK,OAAQrB,EAAOzF,GACtBuE,EAAQD,EAAYC,EAAQvE,GAAQuE,EAAS,CAAC,CAChDvD,EAAGhB,EAAEgB,EAAIhB,EAAEkD,GACXjC,EAAGjB,EAAEiB,EAAIjB,EAAEmD,IACV,CACDnC,EAAGhB,EAAEgB,EAAIhB,EAAEgD,GACX/B,EAAGjB,EAAEiB,EAAIjB,EAAEiD,KAGbjD,EAAEgB,GAAKQ,EAAK,IAAM,EAClBxB,EAAEiB,GAAKO,EAAK,IAAM,GAIlBlE,GAAK6D,IACPsE,EAAM6B,OACN/B,EAAMuB,KAAK,MAAOrB,EAAOmB,EAAMrC,MAKrCkB,EAAM6B,KAAO,WAMX,OALI9B,IACFyB,cAAczB,GACdA,EAAQ,MAGHC,GA0ETA,EAAMJ,aAAe,SAAUgB,GAC7B,OAAOC,UAAUpJ,QAAUmI,EAAoB,MAALgB,EAAYf,IAAWe,EAAGZ,GAASJ,GAG/EI,EAAML,MAAQ,SAAUiB,GACtB,OAAOC,UAAUpJ,QAAUkI,EAAQiB,EAAGZ,GAASL,GAGjDK,EAAMjE,KAAO,SAAU6E,GACrB,OAAOC,UAAUpJ,QAAUsE,EAAO,EAAE6E,EAAE,IAAKA,EAAE,IAAKZ,GAASjE,GAG7DiE,EAAMpE,KAAO,SAAUgF,GACrB,OAAOC,UAAUpJ,QAAUmE,EAAOwD,EAAQwB,GAAIZ,GAASpE,GAGzDoE,EAAMR,UAAY,SAAUoB,GAC1B,OAAOC,UAAUpJ,QAAU+H,EAAYJ,EAAQwB,GAAIZ,GAASR,GAG9DQ,EAAMP,WAAa,SAAUmB,GAC3B,OAAOC,UAAUpJ,QAAUgI,EAAaL,EAAQwB,GAAIZ,GAASP,GAG/DO,EAAM7D,OAAS,SAAUyE,GACvB,OAAOC,UAAUpJ,QAAU0E,EAASiD,EAAQwB,GAAIZ,GAAS7D,GAG3D6D,EAAMxF,KAAO,SAAUoG,GACrB,OAAOC,UAAUpJ,QAAU+C,EAAO4E,EAAQwB,GAAIZ,GAASxF,GAGzDwF,EAAMN,OAAS,SAAUkB,GACvB,OAAOC,UAAUpJ,QAAUiI,EAASoC,EAAQlB,IAAMA,EAAGZ,GAASN,GAGhEM,EAAMT,SAAW,SAAUqB,GACzB,OAAOC,UAAUpJ,QAAU8H,EAAWH,EAAQwB,GAAIZ,GAAST,GAG7DS,EAAM/C,QAAU,SAAU2D,GACxB,OAAOC,UAAUpJ,QAAUwF,EAAUmC,EAAQwB,GAAIZ,GAAS/C,GAG5D+C,EAAMjF,OAAS,SAAU6F,GACvB,OAAOC,UAAUpJ,QAAUsD,EAAS6F,EAAGZ,GAASjF,GAGlDiF,EAAM+B,GAAK,WACT,IAAIlH,EAAQiF,EAAMiC,GAAGC,MAAMlC,EAAOe,WAClC,OAAOhG,IAAUiF,EAAQE,EAAQnF,GAG5BmF,GAgOT,IAAI8B,EAAU,CACZG,YAAahD,EACbiD,YAtDF,SAA2BnG,GACzB,IACIoE,EADK,EACKpE,EAAK,GAAKA,EAAK,GACzBR,EAAI,EACJC,EAAI,EACR,OAAO,SAAU0D,GACf,IAAIiD,EAAOjD,EAAI,GAAK,EAAI,EAExB,OAAQ/E,KAAKS,KAAK,EAAI,EAAIuH,EAAOjD,GAAKiD,EAAO,GAC3C,KAAK,EACH5G,GAAK4E,EACL,MAEF,KAAK,EACH3E,GAbG,EAcH,MAEF,KAAK,EACHD,GAAK4E,EACL,MAEF,QACE3E,GArBG,EAyBP,MAAO,CAACD,EAAGC,O,kCC/Xf,IAAI4G,EAAoB,EAAQ,MAGhC/C,EAAOC,QAAU8C,G,kCClBjB,IAAIC,EAAW,EAAQ,IAA4BC,YAE/C3J,EAAU,EAAQ,KAGlB4J,EAAK,qCAmCTlD,EAAOC,QATP,SAA2BkD,GACzB,IAAKH,EAASG,GACZ,MAAM,IAAIC,UAAU,8DAAgED,EAAM,MAG5F,OAAO7J,EAAQ6J,EAAKD,EAAI,M,kCCpC1B,IAAIpH,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,2vECdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,gmPCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,67HCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,q7JCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,kwGCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,y6FCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,4gFCdd,IAAIjD,EAAO,EAAQ,MAkBnBkE,EAAOC,QALP,WACE,OAAOnE,EAAKiD,U,whICIdsE,aAAc,aACd,IAAMC,GAAOC,YAAcC,KACrBC,GAAa,yBA+CnB,IAAMC,GAAmB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACvD,IAAMrM,IAASkM,IAA4B,IAAjBA,EAAMvL,OAC/B,MAAO,CAAEkJ,IAAKyC,IAAMxG,IAAKyG,IAAMC,WAAY,IAE5CL,EAAYA,EAAUM,OAAQJ,GAE9B,IADA,IAAIK,EAAS,GACH3L,EAAI,EAAGA,EAAImL,EAAMvL,OAAQI,IAAM,CACxC,IAAI2C,EAAOwI,EAAOnL,GAClB,GAAKwK,sBAAU7H,GAAS,CACvBA,EAAO4H,IAAmB5H,GAC1BA,EAAO7B,IAAS6B,EAAMsI,GAAY,KAClC,IAAIW,EAAYC,IAAUlJ,GAC1BgJ,EAASA,EAAOD,OAAQE,IAG1B,IAAM,IAAI5L,EAAI,EAAGA,EAAI2L,EAAO/L,OAAQI,IACnC2L,EAAQ3L,GAAM8L,IAAWH,EAAQ3L,IAElC,IAAM,IAAIA,EAAI2L,EAAO/L,OAAQI,EAAI,EAAGA,IAC9B2L,EAAO3L,IAAMH,IAAUuL,EAAWU,IAAWH,EAAO3L,MACxD2L,EAAOI,OAAQ/L,EAAG,GAIpB,IADA,IAAIgM,EAAa,GACPhM,EAAI,EAAGA,EAAI2L,EAAO/L,OAAQI,IAC9BgM,EAAYL,EAAQ3L,IACxBgM,EAAYL,EAAQ3L,KAAS,EAE7BgM,EAAYL,EAAQ3L,IAAQ,EAG9B,IAAI+E,EAAMyG,IACN1C,EAAMyC,IACJE,EAAaQ,IAAeD,GAAazC,KAAK,SAAA2C,GAOnD,OANKA,EAAK,GAAMnH,IACfA,EAAMmH,EAAK,IAEPA,EAAK,GAAMpD,IACfA,EAAMoD,EAAK,IAEL,CACNvJ,KAAMuJ,EAAK,GACXlJ,MAAOkJ,EAAK,OAGd,IAAMb,EACL,MAAO,CAAEvC,MAAK/D,MAAK0G,cAGpB,IADA,IAAMU,EAAW,GACPnM,EAAI,EAAGA,EAAIyL,EAAW7L,OAAQI,IAClCyL,EAAYzL,GAAIgD,OAASqI,GAC7Bc,EAAS3M,KAAMiM,EAAYzL,IAG7B,MAAO,CAAE8I,MAAK/D,MAAK0G,WAAYU,IA0B1BC,G,kDACL,WAAaC,GAAS,IAAD,sBACpB,cAAOA,GADa,6CA6EJ,SAAEC,GAAW,IAAD,EACP,EAAKC,MAAlBzD,EADoB,EACpBA,IAAK/D,EADe,EACfA,IACb,OAAKA,IAAQ+D,EACL,IAECwD,EAAKtJ,MAAQ8F,EAAM,IAAQ/D,EAAM+D,EAAM,GAAM,GAAO,MAlFzC,wCAoJT,WAAO,IAKdvI,EALa,EACS,EAAK8L,MAAvBrL,EADS,EACTA,MAAOC,EADE,EACFA,OACTN,EAAYnC,aAAc,EAAKgO,IAAIC,QACzC1L,aAAiBJ,EAAW,EAAIK,EAAO,EAAIC,GAQ3C,SAAeyL,GACdC,YAAQD,EAAUnM,MALlBA,EADI,EAAK8L,MAAM5M,GACR,EAAK4M,MAAM5M,GAAG,OAEd,mBA1JR,IAAI2L,EA9HoB,SAAEwB,GAC3B,IAAIxB,EACJ,OAASwB,GACR,QACA,IAAK,KACJxB,EAAYyB,MACb,MACA,IAAK,MACJzB,EAAY0B,MACb,MACA,IAAK,KACJ1B,EAAY2B,MACb,MACA,IAAK,MACJ3B,EAAY4B,MACb,MACA,IAAK,KACJ5B,EAAY6B,MACb,MACA,IAAK,MACJ7B,EAAY8B,MACb,MACA,IAAK,KACJ9B,EAAY+B,OACb,MACA,IAAK,MACJ/B,EAAYgC,OAGd,OAAOhC,EAiGUiC,CAAmBhB,EAAMO,UACzC,GAAMP,EAAMiB,cAeX,EAAKf,MAAQ,CACZd,WAAYY,EAAM/I,KAAKiD,QACvB6E,YACAmC,SAAUlB,EAAM/I,KAAK1D,YAlBK,CAAC,IAAD,EACMsL,GAAiB,CACjDC,MAAOkB,EAAM/I,KACb8H,YACAC,SAAUgB,EAAMhB,SAChBC,gBAAiBe,EAAMjB,YAJhBtC,EADmB,EACnBA,IAAK/D,EADc,EACdA,IAAK0G,EADS,EACTA,WAMlB,EAAKc,MAAQ,CACZd,aACA3C,MACA/D,MACAqG,YACAmC,SAAUlB,EAAM/I,KAAK1D,QAhBH,S,qDAkDrB,WACC6J,KAAK+D,iB,mCAGN,SAAuBC,GAEtB,SADaC,IAASD,EAAUnK,KAAK1D,OAAQ6J,KAAK8C,MAAMgB,WAE/C9D,KAAK4C,MAAMsB,iBACjBlE,KAAK4C,MAAMuB,gBArJhB,SAAwBlK,EAAGC,GAE1B,IADA,IAAIkK,EAAO/E,IAAKpF,EAAE9D,OAAQ,IAChBI,EAAI,EAAGA,EAAI6N,EAAM7N,IAC1B,GAAK0D,EAAG1D,KAAQ2D,EAAG3D,GAClB,OAAO,EAGT,OAAO,EA8I0B8N,CAAeL,EAAUnK,KAAMmG,KAAK4C,MAAM/I,OACzEmK,EAAUrC,UAAUxL,SAAW6J,KAAK4C,MAAMjB,UAAUxL,U,gCAOtD,WACM6J,KAAK8C,MAAMd,WAAW7L,OAAS,GACnC6J,KAAKsE,kBAEDtE,KAAK8C,MAAMgB,WAAa9D,KAAK4C,MAAM/I,KAAK1D,QAC5C6J,KAAKuE,SAAS,CACbT,SAAU9D,KAAK4C,MAAM/I,KAAK1D,W,0BAa7B,WAAgB,IAAD,OACRqO,EAAiBxE,KAAK4C,MAAM4B,gBAAkBxE,KAAKwE,eACzDC,YAAQC,sBAAa1E,OACnB2E,UAAW,OACXC,SACF5E,KAAK+C,IAAM0B,YAAQC,sBAAa1E,OAC9B6E,OAAQ,OACPC,KAAM,QAAS9E,KAAK4C,MAAMrL,OAC1BuN,KAAM,SAAU9E,KAAK4C,MAAMpL,QAC3B+C,MAAO,aAAc,WACxByF,KAAK+C,IAAI8B,OAAQ,KACfC,KAAM,YADR,oBACkC9E,KAAK4C,MAAMrL,MAAQ,EADrD,YAC0DyI,KAAK4C,MAAMpL,OAAS,EAD9E,MAEAwI,KAAK+E,YAAcrG,MACjBjE,KAAK,CAAEuF,KAAK4C,MAAMrL,MAAOyI,KAAK4C,MAAMpL,SACpC8C,KAAM0F,KAAK4C,MAAMtI,MACjB+D,MAAO2B,KAAK8C,MAAMd,YAClBrG,QAASqE,KAAK4C,MAAMjH,SACpBd,OAAQmF,KAAK4C,MAAM/H,QACnBoD,SAAUuG,GACV/D,GAAI,OAAO,SAAApC,GACX,IAAMnF,EAAO,EAAK6J,IAAI0B,OAAQ,KAC5BE,UAAW,QACX9K,KAAMwE,GAAO,SAAApF,GAAC,OAAIA,EAAEC,QAEtBA,EAAK8L,aACHC,SAAS,KACT1K,MAAO,aAAa,SAAAtB,GAAC,gBAAOA,EAAEwB,KAAT,SACrBqK,KAAM,aACN,SAAA7L,GAAC,0BAAiB,CAACA,EAAEgB,EAAGhB,EAAEiB,GAAzB,mBAAsCjB,EAAE4B,OAAxC,QAGH3B,EAAKgM,QACHL,OAAQ,QACRtK,MAAO,aAAa,SAAAtB,GAAC,gBAAOA,EAAEwB,KAAT,SACrBF,MAAO,cAAe,EAAKqI,MAAMtI,MACjCC,MAAO,QAAQ,SAAEtB,EAAG1C,GAAL,OAAY8K,GAAM9K,MACjCgE,MAAO,SAAU,WACjBuK,KAAM,cAAe,UACrBA,KAAM,aACN,SAAA7L,GAAC,0BAAiB,CAACA,EAAEgB,EAAGhB,EAAEiB,GAAzB,mBAAsCjB,EAAE4B,OAAxC,QAED3B,MAAM,SAAAD,GAAC,OAAIA,EAAEC,QACbuH,GAAI,QAAS,EAAKmC,MAAMuC,SAE1BjM,EAAKkM,OACHJ,aACAC,SAAU,KACV1K,MAAO,eAAgB,MACvBqK,YAEFpF,U,6BAGH,WACC,IAAMwC,EAAahC,KAAK8C,MAAMd,WAC9BhC,KAAK+E,YACHxE,OACAlC,MAAO2D,EAAWlC,KAAK,SAAA7G,GACvB,MAAO,CAAEC,KAAMD,EAAEC,KAAMK,MAAON,EAAEM,WAEhCiG,U,oBAmBH,WACC,OAAS,yBAAKjF,MAAK,aAAIhD,MAAOyI,KAAK4C,MAAMrL,MAAO8N,SAAU,YAAerF,KAAK4C,MAAMrI,QACjFyF,KAAK4C,MAAM0C,YAActF,KAAK8C,MAAMd,WAAW7L,OAAS,EAAI,kBAAC,KAAD,CAASoP,UAAU,OAAOC,QAASxF,KAAK4C,MAAMhF,EAAE,oBAC7G,kBAAC,IAAD,CAAQnD,KAAK,KAAKgL,QAAQ,QAAQN,QAASnF,KAAK0F,UAAWnL,MAAO,CACjE8K,SAAU,WACVM,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACNC,aAAY9F,KAAK4C,MAAMhF,EAAE,oBAC3B,yBAAKmI,UAAU,iBAEJ,S,uCApJf,SAAiC/B,EAAWgC,GAC3C,IAAIC,EACJ,GAAMjC,EAAUH,cAcfoC,EAAW,CACVjE,WAAYgC,EAAUnK,KAAKiD,aAfG,CAAC,IAAD,EACE2E,GAAiB,CACjDC,MAAOsC,EAAUnK,KACjB8H,UAAWqE,EAAUrE,UACrBC,SAAUoC,EAAUpC,SACpBC,gBAAiBmC,EAAUrC,YAJpBtC,EADuB,EACvBA,IAAK/D,EADkB,EAClBA,IAMb2K,EAAW,CACVjE,WAR8B,EACbA,WAQjB3C,MACA/D,MACAqG,UAAWqE,EAAUrE,WAOvB,OAAOsE,M,GAhDaC,aAwLtBvD,GAAQwD,aAAe,CACtBtM,KAAM,GACNS,KAAM,QACNkK,eAAgB,KAChBX,eAAe,EACfhJ,OAAQ,SAAAgI,GAAI,OAAIA,EAAKtJ,MAAQ,KAC7BhC,MAAO,IACPC,OAAQ,IACR2L,SAAU,KACVvB,SAAU,KACV0D,YAAY,EACZpB,gBAAiB,EACjBvC,UAAW,GACXwC,eAAe,EACfxI,QAAS,EACTwJ,QAfsB,aAgBtB5K,MAAO,IAoCO6L,sBAAiB,YAAjBA,CAAgCzD","file":"static/js/87.103cf5fd.chunk.js","sourcesContent":["export { default as dispatch } from \"./dispatch.js\";","/**\n* Code adapted from Nikita Rokotyan. MIT licensed. Source: http://bl.ocks.org/Rokotyan/0556f8facbaf344507cdc45dc3622177\n*/\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport round from '@stdlib/math/base/special/round';\n\n\n// FUNCTIONS //\n\nfunction appendCSS( cssText, element ) {\n\tconst styleElement = document.createElement( 'style' );\n\tstyleElement.setAttribute( 'type', 'text/css' );\n\tstyleElement.innerHTML = cssText;\n\tif ( isArray( element.children ) ) {\n\t\tconst refNode = element.children[ 0 ] || null;\n\t\telement.insertBefore( styleElement, refNode );\n\t}\n}\n\nfunction getCSSStyles( parentElement ) {\n\tconst selectorTextArr = [];\n\tselectorTextArr.push( '#'+parentElement.id );\n\tif ( isArray( parentElement.classList ) ) {\n\t\tfor ( let c = 0; c < parentElement.classList.length; c++ ) {\n\t\t\tif ( !contains( selectorTextArr, '.'+parentElement.classList[c] ) ) {\n\t\t\t\tselectorTextArr.push( '.'+parentElement.classList[c] );\n\t\t\t}\n\t\t}\n\t}\n\tconst nodes = parentElement.getElementsByTagName( '*' );\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tconst id = nodes[i].id;\n\t\tif ( !contains( selectorTextArr, '#'+id ) ) {\n\t\t\tselectorTextArr.push( '#'+id );\n\t\t}\n\t\tconst classes = nodes[i].classList;\n\t\tif ( isArray( classes ) ) {\n\t\t\tfor ( let c = 0; c < classes.length; c++) {\n\t\t\t\tif ( !contains( selectorTextArr, '.'+classes[c] ) ) {\n\t\t\t\t\tselectorTextArr.push( '.'+classes[c] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlet extractedCSSText = '';\n\tfor ( let i = 0; i < document.styleSheets.length; i++ ) {\n\t\tconst s = document.styleSheets[i];\n\t\ttry {\n\t\t\tif ( !s.cssRules ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\t\tif ( e.name !== 'SecurityError' ) {\n\t\t\t\t\tthrow e; // for Firefox\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\tconst cssRules = s.cssRules;\n\t\tfor ( let r = 0; r < cssRules.length; r++ ) {\n\t\t\tif ( contains( selectorTextArr, cssRules[r].selectorText ) ) {\n\t\t\t\textractedCSSText += cssRules[r].cssText;\n\t\t\t}\n\t\t}\n\t}\n\treturn extractedCSSText;\n}\n\n\n// MAIN //\n\nfunction getSVGString( svgNode ) {\n\tsvgNode.setAttribute( 'xlink', 'http://www.w3.org/1999/xlink' );\n\tsvgNode.setAttribute( 'style', 'background: white;' );\n\tconst cssStyleText = getCSSStyles( svgNode );\n\tappendCSS( cssStyleText, svgNode );\n\n\tconst serializer = new XMLSerializer();\n\tlet svgString = serializer.serializeToString( svgNode );\n\tsvgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n\tsvgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\n\treturn svgString;\n}\n\nfunction svgString2Image( svgString, width, height, callback ) {\n\tconst imgsrc = 'data:image/svg+xml;base64,'+ btoa( unescape( encodeURIComponent( svgString ) ) ); // Convert SVG string to data URL\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst context = canvas.getContext( '2d' );\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst image = new Image();\n\timage.onload = function onLoad() {\n\t\tcontext.clearRect( 0, 0, width, height );\n\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\tcanvas.toBlob( function onBlob( blob ) {\n\t\t\tconst filesize = round( blob.length/1024 ) + ' KB';\n\t\t\tif ( callback ) {\n\t\t\t\treturn callback( blob, filesize );\n\t\t\t}\n\t\t});\n\t};\n\timage.src = imgsrc;\n}\n\n\n// EXPORTS //\n\nexport { getSVGString, svgString2Image };\n","// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nmodule.exports = function () {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function (_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function () {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function (d, i) {\n      d.text = text.call(this, d, i);\n      d.font = font.call(this, d, i);\n      d.style = fontStyle.call(this, d, i);\n      d.weight = fontWeight.call(this, d, i);\n      d.rotate = rotate.call(this, d, i);\n      d.size = ~~fontSize.call(this, d, i);\n      d.padding = padding.call(this, d, i);\n      return d;\n    }).sort(function (a, b) {\n      return b.size - a.size;\n    });\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n    return cloud;\n\n    function step() {\n      var start = Date.now();\n\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = size[0] * (random() + .5) >> 1;\n        d.y = size[1] * (random() + .5) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);else bounds = [{\n            x: d.x + d.x0,\n            y: d.y + d.y0\n          }, {\n            x: d.x + d.x1,\n            y: d.y + d.y1\n          }]; // Temporary hack\n\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  };\n\n  cloud.stop = function () {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = context.strokeStyle = \"red\";\n    context.textAlign = \"center\";\n    return {\n      context: context,\n      ratio: ratio\n    };\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{\n      x: 0,\n      y: 0\n    }, {\n      x: size[0],\n      y: size[1]\n    }],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.\n\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n\n          for (var j = 0; j < h; j++) {\n            last = 0;\n\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n\n            x += sw;\n          }\n\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  cloud.timeInterval = function (_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function (_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function (_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function (_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function (_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function (_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function (_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function (_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function (_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function (_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function (_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function (_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function () {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n};\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n} // Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\n\n\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    var w = c.measureText(d.text + \"m\").width * ratio,\n        h = d.size << 1;\n\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n\n    if (h > maxh) maxh = h;\n\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0; // Zero the buffer\n\n    for (var i = 0; i < h * w32; i++) {\n      sprite[i] = 0;\n    }\n\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n} // Use mask-based collision detection.\n\n\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n\n  for (var j = 0; j < h; j++) {\n    last = 0;\n\n    for (var i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n\n    x += sw;\n  }\n\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function (t) {\n    var sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.\n\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n\n      case 1:\n        y += dy;\n        break;\n\n      case 2:\n        x -= dx;\n        break;\n\n      default:\n        y -= dy;\n        break;\n    }\n\n    return [x, y];\n  };\n} // TODO reuse arrays?\n\n\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n\n  while (++i < n) {\n    a[i] = 0;\n  }\n\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function () {\n    return d;\n  };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Remove punctuation characters from a string.\n*\n* @module @stdlib/string/remove-punctuation\n*\n* @example\n* var removePunctuation = require( '@stdlib/string/remove-punctuation' );\n*\n* var out = removePunctuation( 'Sun Tzu said: \"A leader leads by example not by force.\"' );\n* // returns 'Sun Tzu said A leader leads by example not by force'\n*\n* out = removePunctuation( 'Double, double, toil and trouble; Fire burn, and cauldron bubble!' ) );\n* // returns 'Double double toil and trouble Fire burn and cauldron bubble'\n*/\n// MODULES //\n\nvar removePunctuation = require('./remove_punctuation.js'); // EXPORTS //\n\n\nmodule.exports = removePunctuation;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive;\n\nvar replace = require('@stdlib/string/replace'); // VARIABLES //\n\n\nvar RE = /[!\"'(),–.:;<>?`{}|~\\/\\\\\\[\\]]/g; // eslint-disable-line no-useless-escape\n// MAIN //\n\n/**\n* Removes punctuation characters from a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} output string\n*\n* @example\n* var str = 'Sun Tzu said: \"A leader leads by example not by force.\"';\n* var out = removePunctuation( str );\n* // returns 'Sun Tzu said A leader leads by example not by force'\n*\n* @example\n* var str = 'Double, double, toil and trouble; Fire burn, and cauldron bubble!';\n* var out = removePunctuation( str );\n* // returns 'Double double toil and trouble Fire burn and cauldron bubble'\n*\n* @example\n* var str = 'This module removes these characters: `{}[]:,!/<>().;~|?\\'\"';\n* var out = removePunctuation( str );\n* // returns 'This module removes these characters '\n*/\n\nfunction removePunctuation(str) {\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. Must provide a string primitive. Value: `' + str + '`.');\n  }\n\n  return replace(str, RE, '');\n} // EXPORTS //\n\n\nmodule.exports = removePunctuation;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of English stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'about', 'above', 'across', 'actually', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of Finnish stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'aiemmin', 'aika', 'aikaa', 'aikaan', 'aikaisemmin', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of French stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'à', 'â', 'abord', 'afin', 'ah', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of German stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'ab', 'aber', 'ach', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of Italian stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'abbastanza', 'accidenti', 'ad', 'adesso', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of Portuguese stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'à', 'adeus', 'agora', 'aí', 'ainda', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of Spanish stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'a', 'acuerdo', 'adelante', 'ademas', 'además', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar data = require('./../data/words.json'); // MAIN //\n\n/**\n* Returns a list of Swedish stop words.\n*\n* @returns {StringArray} stop words\n*\n* @example\n* var list = stopwords();\n* // returns [ 'aderton', 'adertonde', 'adjö', 'aldrig', 'alla', 'allas', ... ]\n*/\n\n\nfunction stopwords() {\n  return data.slice();\n} // EXPORTS //\n\n\nmodule.exports = stopwords;","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport { scaleOrdinal, schemeCategory10, select } from 'd3';\nimport cloud from 'd3-cloud';\nimport saveAs from '@isle-project/utils/file-saver';\nimport absdiff from '@stdlib/math/base/utils/absolute-difference';\nimport min from '@stdlib/math/base/special/min';\nimport removePunctuation from '@stdlib/string/remove-punctuation';\nimport replace from '@stdlib/string/replace';\nimport tokenize from '@stdlib/nlp/tokenize';\nimport contains from '@stdlib/assert/contains';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport lowercase from '@stdlib/string/lowercase';\nimport objectEntries from '@stdlib/utils/entries';\nimport isArray from '@stdlib/assert/is-array';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport STOPWORDS_EN from '@stdlib/datasets/stopwords-en';\nimport STOPWORDS_FIN from '@stdlib/datasets/savoy-stopwords-fin';\nimport STOPWORDS_FR from '@stdlib/datasets/savoy-stopwords-fr';\nimport STOPWORDS_GER from '@stdlib/datasets/savoy-stopwords-ger';\nimport STOPWORDS_IT from '@stdlib/datasets/savoy-stopwords-it';\nimport STOPWORDS_POR from '@stdlib/datasets/savoy-stopwords-por';\nimport STOPWORDS_SP from '@stdlib/datasets/savoy-stopwords-sp';\nimport STOPWORDS_SWE from '@stdlib/datasets/savoy-stopwords-swe';\nimport Tooltip from '@isle-project/components/tooltip';\nimport { svgString2Image, getSVGString } from '@isle-project/utils/svg';\nimport { addResources } from '@isle-project/locales';\n\n\n// VARIABLES //\n\naddResources( 'WordCloud' );\nconst fill = scaleOrdinal( schemeCategory10 );\nconst RE_NUMBERS = /[+-]?[\\d.]+e?[+-]?\\d*/g;\n\n\n// FUNCTIONS //\n\nconst generateStopwords = ( language ) => {\n\tlet stopwords;\n\tswitch ( language ) {\n\t\tdefault:\n\t\tcase 'en':\n\t\t\tstopwords = STOPWORDS_EN();\n\t\tbreak;\n\t\tcase 'fin':\n\t\t\tstopwords = STOPWORDS_FIN();\n\t\tbreak;\n\t\tcase 'fr':\n\t\t\tstopwords = STOPWORDS_FR();\n\t\tbreak;\n\t\tcase 'ger':\n\t\t\tstopwords = STOPWORDS_GER();\n\t\tbreak;\n\t\tcase 'it':\n\t\t\tstopwords = STOPWORDS_IT();\n\t\tbreak;\n\t\tcase 'por':\n\t\t\tstopwords = STOPWORDS_POR();\n\t\tbreak;\n\t\tcase 'sp':\n\t\t\tstopwords = STOPWORDS_SP();\n\t\tbreak;\n\t\tcase 'swe':\n\t\t\tstopwords = STOPWORDS_SWE();\n\t\tbreak;\n\t}\n\treturn stopwords;\n};\n\nfunction guessEquality( x, y ) {\n\tlet nobs = min( x.length, 10 );\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tif ( x[ i ] !== y[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst createBagOfWords = ({ texts, stopwords, minCount, customStopwords }) => {\n\tif ( !isArray( texts ) || texts.length === 0 ) {\n\t\treturn { min: PINF, max: NINF, wordCounts: []};\n\t}\n\tstopwords = stopwords.concat( customStopwords );\n\tlet tokens = [];\n\tfor ( let i = 0; i < texts.length; i++ ) {\n\t\tlet text = texts[ i ];\n\t\tif ( isString( text ) ) {\n\t\t\ttext = removePunctuation( text );\n\t\t\ttext = replace( text, RE_NUMBERS, ' ' );\n\t\t\tlet newTokens = tokenize( text );\n\t\t\ttokens = tokens.concat( newTokens );\n\t\t}\n\t}\n\tfor ( let i = 0; i < tokens.length; i++ ) {\n\t\ttokens[ i ] = lowercase( tokens[ i ] );\n\t}\n\tfor ( let i = tokens.length; i > 0; i-- ) {\n\t\tif ( tokens[i] && contains( stopwords, lowercase( tokens[i] ) ) ) {\n\t\t\ttokens.splice( i, 1 );\n\t\t}\n\t}\n\tlet bagOfWords = {};\n\tfor ( let i = 0; i < tokens.length; i++ ) {\n\t\tif ( bagOfWords[ tokens[ i ] ] ) {\n\t\t\tbagOfWords[ tokens[ i ] ] += 1;\n\t\t} else {\n\t\t\tbagOfWords[ tokens[ i ] ] = 1;\n\t\t}\n\t}\n\tlet max = NINF;\n\tlet min = PINF;\n\tconst wordCounts = objectEntries( bagOfWords ).map( arr => {\n\t\tif ( arr[ 1 ] > max ) {\n\t\t\tmax = arr[ 1 ];\n\t\t}\n\t\tif ( arr[ 1 ] < min ) {\n\t\t\tmin = arr[ 1 ];\n\t\t}\n\t\treturn {\n\t\t\ttext: arr[ 0 ],\n\t\t\tvalue: arr[ 1 ]\n\t\t};\n\t});\n\tif ( !minCount ) {\n\t\treturn { min, max, wordCounts };\n\t}\n\tconst filtered = [];\n\tfor ( let i = 0; i < wordCounts.length; i++ ) {\n\t\tif ( wordCounts[ i ].value >= minCount ) {\n\t\t\tfiltered.push( wordCounts[ i ] );\n\t\t}\n\t}\n\treturn { min, max, wordCounts: filtered };\n};\n\n\n// MAIN //\n\n/**\n* A word cloud component built on top of [d3-cloud](https://github.com/jasondavies/d3-cloud).\n*\n* @property {Array} data - either an array of texts from which to generate the word cloud or, if `precalculated` is set to `true`, and array of word count objects (with `text` and `value` keys)\n* @property {Function} font - accessor function specifying the font face for each word. Also accepts a constant instead of a function\n* @property {Function} fontSizeMapper - accessor function indicating the font size for each word. Defaults to `( count - min + 1 ) / ( max - min + 6 ) * 30.0 + 12.0`, where `min` and `max` denote the minimum and maximum word `counts`, respectively\n* @property {boolean} precalculated - controls whether the word cloud expects an array of precalculated word counts or will generate them for given texts\n* @property {(Function|number)} rotate - accessor function indicating the rotation angle (in degrees) for each word. Also accepts a constant instead of a function\n* @property {number} width - width of the word cloud (in px)\n* @property {number} height - height of the word cloud (in px)\n* @property {string} language - language identifier (determines the stopwords to be removed)\n* @property {number} minCount - if set, only include words that appear more than `minCount` times in the given data\n* @property {boolean} saveButton - controls whether to display a button for saving the word cloud as an image\n* @property {(Function|number)} padding - accessor function or constant indicating the numerical padding for each word\n* @property {number} updateThreshold - batch size of new documents in `data` before the word cloud is re-rendered\n* @property {boolean} triggerRender - rerender when the data set is exchanged\n* @property {Array} stopwords - additional stopwords to remove before rendering the word cloud\n* @property {Object} style - CSS inline styles\n* @property {Function} onClick - callback function invoked when a word on the word cloud is clicked\n*/\nclass Wrapper extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet stopwords = generateStopwords( props.language );\n\t\tif ( !props.precalculated ) {\n\t\t\tconst { min, max, wordCounts } = createBagOfWords({\n\t\t\t\ttexts: props.data,\n\t\t\t\tstopwords,\n\t\t\t\tminCount: props.minCount,\n\t\t\t\tcustomStopwords: props.stopwords\n\t\t\t});\n\t\t\tthis.state = {\n\t\t\t\twordCounts,\n\t\t\t\tmin,\n\t\t\t\tmax,\n\t\t\t\tstopwords,\n\t\t\t\tnRecords: props.data.length\n\t\t\t};\n\t\t} else {\n\t\t\tthis.state = {\n\t\t\t\twordCounts: props.data.slice(),\n\t\t\t\tstopwords,\n\t\t\t\tnRecords: props.data.length\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState;\n\t\tif ( !nextProps.precalculated ) {\n\t\t\tconst { min, max, wordCounts } = createBagOfWords({\n\t\t\t\ttexts: nextProps.data,\n\t\t\t\tstopwords: prevState.stopwords,\n\t\t\t\tminCount: nextProps.minCount,\n\t\t\t\tcustomStopwords: nextProps.stopwords\n\t\t\t});\n\t\t\tnewState = {\n\t\t\t\twordCounts,\n\t\t\t\tmin,\n\t\t\t\tmax,\n\t\t\t\tstopwords: prevState.stopwords\n\t\t\t};\n\t\t} else {\n\t\t\tnewState = {\n\t\t\t\twordCounts: nextProps.data.slice()\n\t\t\t};\n\t\t}\n\t\treturn newState;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.addWordCloud();\n\t}\n\n\tshouldComponentUpdate( nextProps ) {\n\t\tconst diff = absdiff( nextProps.data.length, this.state.nRecords );\n\t\tif (\n\t\t\tdiff >= this.props.updateThreshold ||\n\t\t\t( this.props.triggerRender && !guessEquality( nextProps.data, this.props.data ) ) ||\n\t\t\tnextProps.stopwords.length !== this.props.stopwords.length\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.state.wordCounts.length > 0 ) {\n\t\t\tthis.updateWordCloud();\n\t\t}\n\t\tif ( this.state.nRecords !== this.props.data.length ) {\n\t\t\tthis.setState({\n\t\t\t\tnRecords: this.props.data.length\n\t\t\t});\n\t\t}\n\t}\n\n\tfontSizeMapper = ( word ) => {\n\t\tconst { min, max } = this.state;\n\t\tif ( max === min ) {\n\t\t\treturn 50.0;\n\t\t}\n\t\treturn ( word.value - min + 1 ) / ( max - min + 6 ) * 30.0 + 12.0;\n\t}\n\n\taddWordCloud() {\n\t\tconst fontSizeMapper = this.props.fontSizeMapper || this.fontSizeMapper;\n\t\tselect( findDOMNode( this ) )\n\t\t\t.selectAll( 'svg' )\n\t\t\t.remove();\n\t\tthis.svg = select( findDOMNode( this ) )\n\t\t\t.append( 'svg' )\n\t\t\t\t.attr( 'width', this.props.width )\n\t\t\t\t.attr( 'height', this.props.height )\n\t\t\t\t.style( 'background', '#ffffff' );\n\t\tthis.svg.append( 'g' )\n\t\t\t.attr( 'transform', `translate(${this.props.width / 2},${this.props.height / 2})` ); // eslint-disable-line i18next/no-literal-string\n\t\tthis.cloudLayout = cloud()\n\t\t\t.size([ this.props.width, this.props.height ])\n\t\t\t.font( this.props.font )\n\t\t\t.words( this.state.wordCounts )\n\t\t\t.padding( this.props.padding )\n\t\t\t.rotate( this.props.rotate )\n\t\t\t.fontSize( fontSizeMapper )\n\t\t\t.on( 'end', words => {\n\t\t\t\tconst text = this.svg.select( 'g' )\n\t\t\t\t\t.selectAll( 'text' )\n\t\t\t\t\t.data( words, d => d.text );\n\n\t\t\t\ttext.transition()\n\t\t\t\t\t.duration(750)\n\t\t\t\t\t.style( 'font-size', d => `${d.size}px` )\n\t\t\t\t\t.attr( 'transform',\n\t\t\t\t\t\td => `translate(${[d.x, d.y]})rotate(${d.rotate})`\n\t\t\t\t\t);\n\n\t\t\t\ttext.enter()\n\t\t\t\t\t.append( 'text' )\n\t\t\t\t\t.style( 'font-size', d => `${d.size}px` )\n\t\t\t\t\t.style( 'font-family', this.props.font )\n\t\t\t\t\t.style( 'fill', ( d, i ) => fill( i ) )\n\t\t\t\t\t.style( 'cursor', 'pointer' )\n\t\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t\t.attr( 'transform',\n\t\t\t\t\t\td => `translate(${[d.x, d.y]})rotate(${d.rotate})`\n\t\t\t\t\t)\n\t\t\t\t\t.text( d => d.text )\n\t\t\t\t\t.on( 'click', this.props.onClick );\n\n\t\t\t\ttext.exit()\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration( 750 )\n\t\t\t\t\t.style( 'fill-opacity', 1.0e-6 )\n\t\t\t\t\t.remove();\n\t\t\t})\n\t\t\t.start();\n\t}\n\n\tupdateWordCloud( ){\n\t\tconst wordCounts = this.state.wordCounts;\n\t\tthis.cloudLayout\n\t\t\t.stop()\n\t\t\t.words( wordCounts.map( d => {\n\t\t\t\treturn { text: d.text, value: d.value };\n\t\t\t}))\n\t\t\t.start();\n\t}\n\n\tsaveToPNG = () => {\n\t\tconst { width, height } = this.props;\n\t\tconst svgString = getSVGString( this.svg.node() );\n\t\tsvgString2Image( svgString, 2.0*width, 2.0*height, save );\n\n\t\tlet name;\n\t\tif ( this.props.id ) {\n\t\t\tname = this.props.id+'.png';\n\t\t} else {\n\t\t\tname = 'wordcloud.png';\n\t\t}\n\t\tfunction save( dataBlob ) {\n\t\t\tsaveAs( dataBlob, name );\n\t\t}\n\t}\n\n\trender() {\n\t\treturn ( <div style={{ width: this.props.width, position: 'relative', ...this.props.style }} >\n\t\t\t{ this.props.saveButton && this.state.wordCounts.length > 0 ? <Tooltip placement=\"left\" tooltip={this.props.t('save-word-cloud')} >\n\t\t\t\t<Button size=\"sm\" variant=\"light\" onClick={this.saveToPNG} style={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tright: -12,\n\t\t\t\t\ttop: -12,\n\t\t\t\t\tzIndex: 2\n\t\t\t\t}} aria-label={this.props.t('save-word-cloud')} >\n\t\t\t\t\t<div className=\"fa fa-save\" />\n\t\t\t\t</Button>\n\t\t\t</Tooltip> : null }\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nWrapper.defaultProps = {\n\tdata: [],\n\tfont: 'serif',\n\tfontSizeMapper: null,\n\tprecalculated: false,\n\trotate: word => word.value % 360,\n\twidth: 700,\n\theight: 600,\n\tlanguage: 'en',\n\tminCount: null,\n\tsaveButton: true,\n\tupdateThreshold: 5,\n\tstopwords: [],\n\ttriggerRender: true,\n\tpadding: 5,\n\tonClick() {},\n\tstyle: {}\n};\n\nWrapper.propTypes = {\n\tdata: PropTypes.array,\n\tfont: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t]),\n\tfontSizeMapper: PropTypes.func,\n\theight: PropTypes.number,\n\tlanguage: PropTypes.oneOf([\n\t\t'en', 'fin', 'fr', 'ger', 'it', 'por', 'sp', 'swe'\n\t]),\n\tminCount: PropTypes.number,\n\tsaveButton: PropTypes.bool,\n\tonClick: PropTypes.func,\n\tpadding: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.number\n\t]),\n\tprecalculated: PropTypes.bool,\n\trotate: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.number\n\t]),\n\tupdateThreshold: PropTypes.number,\n\tstopwords: PropTypes.array,\n\ttriggerRender: PropTypes.bool,\n\tstyle: PropTypes.object,\n\twidth: PropTypes.number\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'WordCloud' )( Wrapper );\n"],"sourceRoot":""}