{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/contingency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["debug","logger","ContingencyTableMenu","props","state","relativeFreqs","rowVar","defaultRowVar","variables","colVar","defaultColVar","group","nDecimalPlaces","display","this","session","addNotification","title","message","level","position","output","data","logAction","DATA_EXPLORER_CONTINGENCY_TABLE","onCreated","groupingVariables","t","Header","as","content","Body","legend","defaultValue","options","onChange","value","setState","clearable","menuPlacement","tooltip","multi","length","inline","width","max","min","variant","block","onClick","generateContingencyTable","bind","Component","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","createTooltip","step","PINF","NINF","CheckboxInput","context","newValue","global","lesson","event","target","checked","updateValue","globalVal","input","type","handleChange","disabled","aria-label","tooltipPlacement","style","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","CreateTooltip","NumberInput","uid","generateUID","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","number"],"mappings":"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","file":"static/js/104.43a4c389.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport ContingencyTable from '@isle-project/components/tables/contingency-table';\nimport { DATA_EXPLORER_CONTINGENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:contingency-table' );\n\n\n// MAIN //\n\nclass ContingencyTableMenu extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\trelativeFreqs: false,\n\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\tgroup: null, // eslint-disable-line react/no-unused-state\n\t\t\tnDecimalPlaces: 3,\n\t\t\tvariables: props.variables,\n\t\t\tdisplay: []\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( props.variables.length !== state.variables.length ) {\n\t\t\tdebug( 'Available variables have changed...' );\n\t\t\treturn {\n\t\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\t\tvariables: props.variables\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tgenerateContingencyTable() {\n\t\tconst { rowVar, colVar, group, relativeFreqs, nDecimalPlaces, display } = this.state;\n\t\tif ( !rowVar || !colVar ) {\n\t\t\treturn this.props.session.addNotification({\n\t\t\t\ttitle: 'Select Variables',\n\t\t\t\tmessage: 'You need to select a row and column variable for the contingency table',\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <ContingencyTable\n\t\t\trowVar={rowVar}\n\t\t\tcolVar={colVar}\n\t\t\tgroup={group}\n\t\t\trelativeFreqs={relativeFreqs}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdisplay={display}\n\t\t\tdata={this.props.data}\n\t\t/>;\n\t\tthis.props.logAction( DATA_EXPLORER_CONTINGENCY_TABLE, {\n\t\t\trowVar, colVar, group, relativeFreqs, display\n\t\t});\n\t\tthis.props.onCreated( output );\n\t}\n\n\trender() {\n\t\tconst { variables, groupingVariables, t } = this.props;\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t\t{t('Contingency Table')}\n\t\t\t\t\t<QuestionButton title={t('Contingency Table')} content={t('Contingency Table-description')} />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('row-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.rowVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trowVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('column-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.colVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcolVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tgroup: value // eslint-disable-line react/no-unused-state\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttooltip={t('contingency-table-group-tooltip')}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trelativeFreqs: !this.state.relativeFreqs\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('display')}\n\t\t\t\t\t\toptions={['Row Percent', 'Column Percent']}\n\t\t\t\t\t\tmulti\n\t\t\t\t\t\tonChange={( display ) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdisplay: display ? display : []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.state.relativeFreqs || this.state.display.length > 0 ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tdefaultValue={this.state.nDecimalPlaces}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tnDecimalPlaces: value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t\t</p> : null }\n\t\t\t\t\t<Button variant=\"primary\" block onClick={this.generateContingencyTable.bind( this )}>\n\t\t\t\t\t\t{t('generate')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nContingencyTableMenu.defaultProps = {\n\tdefaultRowVar: null,\n\tdefaultColVar: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nContingencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultColVar: PropTypes.string,\n\tdefaultRowVar: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ContingencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}