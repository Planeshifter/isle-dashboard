{"version":3,"sources":["../node_modules/csv-stringify/lib/index.js"],"names":["_wrapNativeSuper","_slicedToArray","_createForOfIteratorHelper","_objectSpread","_classCallCheck","_createClass","_inherits","_createSuper","Transform","bom_utf8","Buffer","from","Stringifier","_Transform","_super","_this","opts","arguments","length","undefined","this","call","writableObjectMode","err","options","opt","underscore","normalize","record_delimiter","state","stop","info","records","key","value","bom","CsvError","concat","JSON","stringify","delimiter","isBuffer","toString","quote","quoted","quoted_empty","quoted_match","Array","isArray","_step","_iterator","s","n","done","isRegExp","RegExp","Error","e","f","quoted_string","eof","escape","header","columns","normalize_columns","cast","bigint","boolean","date","getTime","number","object","string","chunk","encoding","callback","Object","keys","headers","emit","chunk_string","push","_this2","chunkIsHeader","_this$options","record","splice","_i","field","_this$__cast","__cast","index","column","_this$__cast2","_i2","_field","get","_this$__cast3","_this$__cast4","_err","_value","_step2","_iterator2","_field2","_this$__cast5","i","_this$__cast6","_err2","_value2","csvrecord","_loop","_i3","_record$_i","isObject","v","_options","containsdelimiter","indexOf","containsQuote","containsEscape","containsRecordDelimiter","quotedString","quotedMatch","filter","test","shouldQuote","regexp","replace","_regexp","_ret","map","context","type","Date","_step3","_newcolumns","_iterator3","newcolumns","k","data","_i4","argument","stringifier","chunks","on","read","join","setImmediate","_step4","_iterator4","write","end","_step5","_iterator5","_Error","_super2","code","message","_this3","captureStackTrace","_assertThisInitialized","_len","contexts","_key","_i5","_contexts","parse","module","exports","obj","str","_","match","toLowerCase","charCodeOfDot","charCodeAt","reEscapeChar","rePropName","reIsDeepProp","reIsPlainProp","isSymbol","prototype","getTag","castPath","isKey","result","expression","subString","trim","toKey","INFINITY","path"],"mappings":"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","file":"static/js/162.05adf1ed.chunk.js","sourcesContent":["var _assertThisInitialized = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _wrapNativeSuper = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _slicedToArray = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\n/*\nCSV Stringify\n\nPlease look at the [project documentation](https://csv.js.org/stringify/) for\nadditional information.\n*/\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nvar bom_utf8 = Buffer.from([239, 187, 191]);\n\nvar Stringifier = /*#__PURE__*/function (_Transform) {\n  \"use strict\";\n\n  _inherits(Stringifier, _Transform);\n\n  var _super = _createSuper(Stringifier);\n\n  function Stringifier() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Stringifier);\n\n    _this = _super.call(this, _objectSpread(_objectSpread({}, {\n      writableObjectMode: true\n    }), opts));\n    var options = {};\n    var err; // Merge with user options\n\n    for (var opt in opts) {\n      options[underscore(opt)] = opts[opt];\n    }\n\n    if (err = _this.normalize(options)) throw err;\n\n    switch (options.record_delimiter) {\n      case 'auto':\n        options.record_delimiter = null;\n        break;\n\n      case 'unix':\n        options.record_delimiter = \"\\n\";\n        break;\n\n      case 'mac':\n        options.record_delimiter = \"\\r\";\n        break;\n\n      case 'windows':\n        options.record_delimiter = \"\\r\\n\";\n        break;\n\n      case 'ascii':\n        options.record_delimiter = \"\\x1E\";\n        break;\n\n      case 'unicode':\n        options.record_delimiter = \"\\u2028\";\n        break;\n    } // Expose options\n\n\n    _this.options = options; // Internal state\n\n    _this.state = {\n      stop: false\n    }; // Information\n\n    _this.info = {\n      records: 0\n    };\n    return _this;\n  }\n\n  _createClass(Stringifier, [{\n    key: \"normalize\",\n    value: function normalize(options) {\n      // Normalize option `bom`\n      if (options.bom === undefined || options.bom === null || options.bom === false) {\n        options.bom = false;\n      } else if (options.bom !== true) {\n        return new CsvError('CSV_OPTION_BOOLEAN_INVALID_TYPE', ['option `bom` is optional and must be a boolean value,', \"got \".concat(JSON.stringify(options.bom))]);\n      } // Normalize option `delimiter`\n\n\n      if (options.delimiter === undefined || options.delimiter === null) {\n        options.delimiter = ',';\n      } else if (Buffer.isBuffer(options.delimiter)) {\n        options.delimiter = options.delimiter.toString();\n      } else if (typeof options.delimiter !== 'string') {\n        return new CsvError('CSV_OPTION_DELIMITER_INVALID_TYPE', ['option `delimiter` must be a buffer or a string,', \"got \".concat(JSON.stringify(options.delimiter))]);\n      } // Normalize option `quote`\n\n\n      if (options.quote === undefined || options.quote === null) {\n        options.quote = '\"';\n      } else if (options.quote === true) {\n        options.quote = '\"';\n      } else if (options.quote === false) {\n        options.quote = '';\n      } else if (Buffer.isBuffer(options.quote)) {\n        options.quote = options.quote.toString();\n      } else if (typeof options.quote !== 'string') {\n        return new CsvError('CSV_OPTION_QUOTE_INVALID_TYPE', ['option `quote` must be a boolean, a buffer or a string,', \"got \".concat(JSON.stringify(options.quote))]);\n      } // Normalize option `quoted`\n\n\n      if (options.quoted === undefined || options.quoted === null) {\n        options.quoted = false;\n      } else {// todo\n      } // Normalize option `quoted_empty`\n\n\n      if (options.quoted_empty === undefined || options.quoted_empty === null) {\n        options.quoted_empty = undefined;\n      } else {// todo\n      } // Normalize option `quoted_match`\n\n\n      if (options.quoted_match === undefined || options.quoted_match === null || options.quoted_match === false) {\n        options.quoted_match = null;\n      } else if (!Array.isArray(options.quoted_match)) {\n        options.quoted_match = [options.quoted_match];\n      }\n\n      if (options.quoted_match) {\n        var _iterator = _createForOfIteratorHelper(options.quoted_match),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var quoted_match = _step.value;\n            var isString = typeof quoted_match === 'string';\n            var isRegExp = quoted_match instanceof RegExp;\n\n            if (!isString && !isRegExp) {\n              return Error(\"Invalid Option: quoted_match must be a string or a regex, got \".concat(JSON.stringify(quoted_match)));\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } // Normalize option `quoted_string`\n\n\n      if (options.quoted_string === undefined || options.quoted_string === null) {\n        options.quoted_string = false;\n      } else {// todo\n      } // Normalize option `eof`\n\n\n      if (options.eof === undefined || options.eof === null) {\n        options.eof = true;\n      } else {// todo\n      } // Normalize option `escape`\n\n\n      if (options.escape === undefined || options.escape === null) {\n        options.escape = '\"';\n      } else if (Buffer.isBuffer(options.escape)) {\n        options.escape = options.escape.toString();\n      } else if (typeof options.escape !== 'string') {\n        return Error(\"Invalid Option: escape must be a buffer or a string, got \".concat(JSON.stringify(options.escape)));\n      }\n\n      if (options.escape.length > 1) {\n        return Error(\"Invalid Option: escape must be one character, got \".concat(options.escape.length, \" characters\"));\n      } // Normalize option `header`\n\n\n      if (options.header === undefined || options.header === null) {\n        options.header = false;\n      } else {// todo\n      } // Normalize option `columns`\n\n\n      options.columns = this.normalize_columns(options.columns); // Normalize option `quoted`\n\n      if (options.quoted === undefined || options.quoted === null) {\n        options.quoted = false;\n      } else {// todo\n      } // Normalize option `cast`\n\n\n      if (options.cast === undefined || options.cast === null) {\n        options.cast = {};\n      } else {// todo\n      } // Normalize option cast.bigint\n\n\n      if (options.cast.bigint === undefined || options.cast.bigint === null) {\n        // Cast boolean to string by default\n        options.cast.bigint = function (value) {\n          return '' + value;\n        };\n      } // Normalize option cast.boolean\n\n\n      if (options.cast.boolean === undefined || options.cast.boolean === null) {\n        // Cast boolean to string by default\n        options.cast.boolean = function (value) {\n          return value ? '1' : '';\n        };\n      } // Normalize option cast.date\n\n\n      if (options.cast.date === undefined || options.cast.date === null) {\n        // Cast date to timestamp string by default\n        options.cast.date = function (value) {\n          return '' + value.getTime();\n        };\n      } // Normalize option cast.number\n\n\n      if (options.cast.number === undefined || options.cast.number === null) {\n        // Cast number to string using native casting by default\n        options.cast.number = function (value) {\n          return '' + value;\n        };\n      } // Normalize option cast.object\n\n\n      if (options.cast.object === undefined || options.cast.object === null) {\n        // Stringify object as JSON by default\n        options.cast.object = function (value) {\n          return JSON.stringify(value);\n        };\n      } // Normalize option cast.string\n\n\n      if (options.cast.string === undefined || options.cast.string === null) {\n        // Leave string untouched\n        options.cast.string = function (value) {\n          return value;\n        };\n      } // Normalize option `record_delimiter`\n\n\n      if (options.record_delimiter === undefined || options.record_delimiter === null) {\n        options.record_delimiter = '\\n';\n      } else if (Buffer.isBuffer(options.record_delimiter)) {\n        options.record_delimiter = options.record_delimiter.toString();\n      } else if (typeof options.record_delimiter !== 'string') {\n        return Error(\"Invalid Option: record_delimiter must be a buffer or a string, got \".concat(JSON.stringify(options.record_delimiter)));\n      }\n    }\n  }, {\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      if (this.state.stop === true) {\n        return;\n      } // Chunk validation\n\n\n      if (!Array.isArray(chunk) && typeof chunk !== 'object') {\n        this.state.stop = true;\n        return callback(Error(\"Invalid Record: expect an array or an object, got \".concat(JSON.stringify(chunk))));\n      } // Detect columns from the first record\n\n\n      if (this.info.records === 0) {\n        if (Array.isArray(chunk)) {\n          if (this.options.header === true && !this.options.columns) {\n            this.state.stop = true;\n            return callback(Error('Undiscoverable Columns: header option requires column option or object records'));\n          }\n        } else if (this.options.columns === undefined || this.options.columns === null) {\n          this.options.columns = this.normalize_columns(Object.keys(chunk));\n        }\n      } // Emit the header\n\n\n      if (this.info.records === 0) {\n        this.bom();\n        this.headers();\n      } // Emit and stringify the record if an object or an array\n\n\n      try {\n        this.emit('record', chunk, this.info.records);\n      } catch (err) {\n        this.state.stop = true;\n        return this.emit('error', err);\n      } // Convert the record into a string\n\n\n      var chunk_string;\n\n      if (this.options.eof) {\n        chunk_string = this.stringify(chunk);\n\n        if (chunk_string === undefined) {\n          return;\n        } else {\n          chunk_string = chunk_string + this.options.record_delimiter;\n        }\n      } else {\n        chunk_string = this.stringify(chunk);\n\n        if (chunk_string === undefined) {\n          return;\n        } else {\n          if (this.options.header || this.info.records) {\n            chunk_string = this.options.record_delimiter + chunk_string;\n          }\n        }\n      } // Emit the csv\n\n\n      this.info.records++;\n      this.push(chunk_string);\n      callback();\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush(callback) {\n      if (this.info.records === 0) {\n        this.bom();\n        this.headers();\n      }\n\n      callback();\n    }\n  }, {\n    key: \"stringify\",\n    value: function stringify(chunk) {\n      var _this2 = this;\n\n      var chunkIsHeader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (typeof chunk !== 'object') {\n        return chunk;\n      }\n\n      var _this$options = this.options,\n          columns = _this$options.columns,\n          header = _this$options.header;\n      var record = []; // Record is an array\n\n      if (Array.isArray(chunk)) {\n        // We are getting an array but the user has specified output columns. In\n        // this case, we respect the columns indexes\n        if (columns) {\n          chunk.splice(columns.length);\n        } // Cast record elements\n\n\n        for (var _i = 0; _i < chunk.length; _i++) {\n          var field = chunk[_i];\n\n          var _this$__cast = this.__cast(field, {\n            index: _i,\n            column: _i,\n            records: this.info.records,\n            header: chunkIsHeader\n          }),\n              _this$__cast2 = _slicedToArray(_this$__cast, 2),\n              err = _this$__cast2[0],\n              value = _this$__cast2[1];\n\n          if (err) {\n            this.emit('error', err);\n            return;\n          }\n\n          record[_i] = [value, field];\n        } // Record is a literal object\n\n      } else {\n        if (columns) {\n          for (var _i2 = 0; _i2 < columns.length; _i2++) {\n            var _field = get(chunk, columns[_i2].key);\n\n            var _this$__cast3 = this.__cast(_field, {\n              index: _i2,\n              column: columns[_i2].key,\n              records: this.info.records,\n              header: chunkIsHeader\n            }),\n                _this$__cast4 = _slicedToArray(_this$__cast3, 2),\n                _err = _this$__cast4[0],\n                _value = _this$__cast4[1];\n\n            if (_err) {\n              this.emit('error', _err);\n              return;\n            }\n\n            record[_i2] = [_value, _field];\n          }\n        } else {\n          var _iterator2 = _createForOfIteratorHelper(chunk),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var column = _step2.value;\n              var _field2 = chunk[column];\n\n              var _this$__cast5 = this.__cast(_field2, {\n                index: i,\n                column: columns[i].key,\n                records: this.info.records,\n                header: chunkIsHeader\n              }),\n                  _this$__cast6 = _slicedToArray(_this$__cast5, 2),\n                  _err2 = _this$__cast6[0],\n                  _value2 = _this$__cast6[1];\n\n              if (_err2) {\n                this.emit('error', _err2);\n                return;\n              }\n\n              record.push([_value2, _field2]);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n\n      var csvrecord = '';\n\n      var _loop = function _loop(_i3) {\n        var options = void 0,\n            err = void 0;\n\n        var _record$_i = _slicedToArray(record[_i3], 2),\n            value = _record$_i[0],\n            field = _record$_i[1];\n\n        if (typeof value === \"string\") {\n          options = _this2.options;\n        } else if (isObject(value)) {\n          // let { value, ...options } = value\n          options = value;\n          value = options.value;\n          delete options.value;\n\n          if (typeof value !== \"string\" && value !== undefined && value !== null) {\n            _this2.emit(\"error\", Error(\"Invalid Casting Value: returned value must return a string, null or undefined, got \".concat(JSON.stringify(value))));\n\n            return {\n              v: void 0\n            };\n          }\n\n          options = _objectSpread(_objectSpread({}, _this2.options), options);\n\n          if (err = _this2.normalize(options)) {\n            _this2.emit(\"error\", err);\n\n            return {\n              v: void 0\n            };\n          }\n        } else if (value === undefined || value === null) {\n          options = _this2.options;\n        } else {\n          _this2.emit(\"error\", Error(\"Invalid Casting Value: returned value must return a string, an object, null or undefined, got \".concat(JSON.stringify(value))));\n\n          return {\n            v: void 0\n          };\n        }\n\n        var _options = options,\n            delimiter = _options.delimiter,\n            escape = _options.escape,\n            quote = _options.quote,\n            quoted = _options.quoted,\n            quoted_empty = _options.quoted_empty,\n            quoted_string = _options.quoted_string,\n            quoted_match = _options.quoted_match,\n            record_delimiter = _options.record_delimiter;\n\n        if (value) {\n          if (typeof value !== 'string') {\n            _this2.emit(\"error\", Error(\"Formatter must return a string, null or undefined, got \".concat(JSON.stringify(value))));\n\n            return {\n              v: null\n            };\n          }\n\n          var containsdelimiter = delimiter.length && value.indexOf(delimiter) >= 0;\n          var containsQuote = quote !== '' && value.indexOf(quote) >= 0;\n          var containsEscape = value.indexOf(escape) >= 0 && escape !== quote;\n          var containsRecordDelimiter = value.indexOf(record_delimiter) >= 0;\n          var quotedString = quoted_string && typeof field === 'string';\n          var quotedMatch = quoted_match && quoted_match.filter(function (quoted_match) {\n            if (typeof quoted_match === 'string') {\n              return value.indexOf(quoted_match) !== -1;\n            } else {\n              return quoted_match.test(value);\n            }\n          });\n          quotedMatch = quotedMatch && quotedMatch.length > 0;\n          var shouldQuote = containsQuote === true || containsdelimiter || containsRecordDelimiter || quoted || quotedString || quotedMatch;\n\n          if (shouldQuote === true && containsEscape === true) {\n            var regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n            value = value.replace(regexp, escape + escape);\n          }\n\n          if (containsQuote === true) {\n            var _regexp = new RegExp(quote, 'g');\n\n            value = value.replace(_regexp, escape + quote);\n          }\n\n          if (shouldQuote === true) {\n            value = quote + value + quote;\n          }\n\n          csvrecord += value;\n        } else if (quoted_empty === true || field === '' && quoted_string === true && quoted_empty !== false) {\n          csvrecord += quote + quote;\n        }\n\n        if (_i3 !== record.length - 1) {\n          csvrecord += delimiter;\n        }\n      };\n\n      for (var _i3 = 0; _i3 < record.length; _i3++) {\n        var _ret = _loop(_i3);\n\n        if (typeof _ret === \"object\") return _ret.v;\n      }\n\n      return csvrecord;\n    }\n  }, {\n    key: \"bom\",\n    value: function bom() {\n      if (this.options.bom !== true) {\n        return;\n      }\n\n      this.push(bom_utf8);\n    }\n  }, {\n    key: \"headers\",\n    value: function headers() {\n      if (this.options.header === false) {\n        return;\n      }\n\n      if (this.options.columns === undefined) {\n        return;\n      }\n\n      var headers = this.options.columns.map(function (column) {\n        return column.header;\n      });\n\n      if (this.options.eof) {\n        headers = this.stringify(headers, true) + this.options.record_delimiter;\n      } else {\n        headers = this.stringify(headers);\n      }\n\n      this.push(headers);\n    }\n  }, {\n    key: \"__cast\",\n    value: function __cast(value, context) {\n      var type = typeof value;\n\n      try {\n        if (type === 'string') {\n          // Fine for 99% of the cases\n          return [undefined, this.options.cast.string(value, context)];\n        } else if (type === 'bigint') {\n          return [undefined, this.options.cast.bigint(value, context)];\n        } else if (type === 'number') {\n          return [undefined, this.options.cast.number(value, context)];\n        } else if (type === 'boolean') {\n          return [undefined, this.options.cast.boolean(value, context)];\n        } else if (value instanceof Date) {\n          return [undefined, this.options.cast.date(value, context)];\n        } else if (type === 'object' && value !== null) {\n          return [undefined, this.options.cast.object(value, context)];\n        } else {\n          return [undefined, value, value];\n        }\n      } catch (err) {\n        return [err];\n      }\n    }\n  }, {\n    key: \"normalize_columns\",\n    value: function normalize_columns(columns) {\n      if (columns === undefined || columns === null) {\n        return undefined;\n      }\n\n      if (typeof columns !== 'object') {\n        throw Error('Invalid option \"columns\": expect an array or an object');\n      }\n\n      if (!Array.isArray(columns)) {\n        var newcolumns = [];\n\n        for (var k in columns) {\n          newcolumns.push({\n            key: k,\n            header: columns[k]\n          });\n        }\n\n        columns = newcolumns;\n      } else {\n        var _newcolumns = [];\n\n        var _iterator3 = _createForOfIteratorHelper(columns),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var column = _step3.value;\n\n            if (typeof column === 'string') {\n              _newcolumns.push({\n                key: column,\n                header: column\n              });\n            } else if (typeof column === 'object' && column !== undefined && !Array.isArray(column)) {\n              if (!column.key) {\n                throw Error('Invalid column definition: property \"key\" is required');\n              }\n\n              if (column.header === undefined) {\n                column.header = column.key;\n              }\n\n              _newcolumns.push(column);\n            } else {\n              throw Error('Invalid column definition: expect a string or an object');\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        columns = _newcolumns;\n      }\n\n      return columns;\n    }\n  }]);\n\n  return Stringifier;\n}(Transform);\n\nvar stringify = function stringify() {\n  var data, options, callback;\n\n  for (var _i4 in arguments) {\n    var argument = arguments[_i4];\n    var type = typeof argument;\n\n    if (data === undefined && Array.isArray(argument)) {\n      data = argument;\n    } else if (options === undefined && isObject(argument)) {\n      options = argument;\n    } else if (callback === undefined && type === 'function') {\n      callback = argument;\n    } else {\n      throw new CsvError('CSV_INVALID_ARGUMENT', ['Invalid argument:', \"got \".concat(JSON.stringify(argument), \" at index \").concat(_i4)]);\n    }\n  }\n\n  var stringifier = new Stringifier(options);\n\n  if (callback) {\n    var chunks = [];\n    stringifier.on('readable', function () {\n      var chunk;\n\n      while ((chunk = this.read()) !== null) {\n        chunks.push(chunk);\n      }\n    });\n    stringifier.on('error', function (err) {\n      callback(err);\n    });\n    stringifier.on('end', function () {\n      callback(undefined, chunks.join(''));\n    });\n  }\n\n  if (data !== undefined) {\n    // Give a chance for events to be registered later\n    if (typeof setImmediate === 'function') {\n      setImmediate(function () {\n        var _iterator4 = _createForOfIteratorHelper(data),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var record = _step4.value;\n            stringifier.write(record);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        stringifier.end();\n      });\n    } else {\n      var _iterator5 = _createForOfIteratorHelper(data),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var record = _step5.value;\n          stringifier.write(record);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      stringifier.end();\n    }\n  }\n\n  return stringifier;\n};\n\nvar CsvError = /*#__PURE__*/function (_Error) {\n  \"use strict\";\n\n  _inherits(CsvError, _Error);\n\n  var _super2 = _createSuper(CsvError);\n\n  function CsvError(code, message) {\n    var _this3;\n\n    _classCallCheck(this, CsvError);\n\n    if (Array.isArray(message)) message = message.join(' ');\n    _this3 = _super2.call(this, message);\n\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(_assertThisInitialized(_this3), CsvError);\n    }\n\n    _this3.code = code;\n\n    for (var _len = arguments.length, contexts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      contexts[_key - 2] = arguments[_key];\n    }\n\n    for (var _i5 = 0, _contexts = contexts; _i5 < _contexts.length; _i5++) {\n      var context = _contexts[_i5];\n\n      for (var key in context) {\n        var value = context[key];\n        _this3[key] = Buffer.isBuffer(value) ? value.toString() : value == null ? value : JSON.parse(JSON.stringify(value));\n      }\n    }\n\n    return _this3;\n  }\n\n  return CsvError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nstringify.Stringifier = Stringifier;\nstringify.CsvError = CsvError;\nmodule.exports = stringify;\n\nvar isObject = function isObject(obj) {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj);\n};\n\nvar underscore = function underscore(str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return '_' + match.toLowerCase();\n  });\n}; // Lodash implementation of `get`\n\n\nvar charCodeOfDot = '.'.charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp( // Match anything that isn't a dot or bracket.\n'[^.[\\\\]]+' + '|' + // Or match property names within brackets.\n'\\\\[(?:' + // Match a non-string expression.\n'([^\"\\'][^[]*)' + '|' + // Or match strings (supports escaping characters).\n'([\"\\'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2' + ')\\\\]' + '|' + // Or match \"\" as the space between consecutive dots or empty brackets.\n'(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))', 'g');\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar reIsPlainProp = /^\\w*$/;\n\nvar getTag = function getTag(value) {\n  if (!value) value === undefined ? '[object Undefined]' : '[object Null]';\n  return Object.prototype.toString.call(value);\n};\n\nvar isKey = function isKey(value, object) {\n  if (Array.isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type === 'number' || type === 'symbol' || type === 'boolean' || !value || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n};\n\nvar isSymbol = function isSymbol(value) {\n  var type = typeof value;\n  return type === 'symbol' || type === 'object' && value && getTag(value) === '[object Symbol]';\n};\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push('');\n  }\n\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n\n    if (quote) {\n      key = subString.replace(reEscapeChar, '$1');\n    } else if (expression) {\n      key = expression.trim();\n    }\n\n    result.push(key);\n  });\n  return result;\n};\n\nvar castPath = function castPath(value, object) {\n  if (Array.isArray(value)) {\n    return value;\n  } else {\n    return isKey(value, object) ? [value] : stringToPath(value);\n  }\n};\n\nvar toKey = function toKey(value) {\n  if (typeof value === 'string' || isSymbol(value)) return value;\n  var result = \"\".concat(value);\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n};\n\nvar get = function get(object, path) {\n  path = castPath(path, object);\n  var index = 0;\n  var length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index === length ? object : undefined;\n};"],"sourceRoot":""}