{"version":3,"sources":["../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/@isle-project/utils/mmult/index.js","../node_modules/@isle-project/utils/transpose/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/xlogy/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/xlogy/lib/xlogy.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/pmf.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/factory.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/@isle-project/components/models/logistic-regression/multiply_matrices.js","../node_modules/@isle-project/components/models/logistic-regression/col_mult.js","../node_modules/@isle-project/components/models/logistic-regression/multiply.js","../node_modules/@isle-project/components/models/logistic-regression/logistic_regression.js","../node_modules/@isle-project/components/models/logistic-regression/main.js","../node_modules/@isle-project/utils/subtract/index.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js"],"names":["hypotenuse","a","b","r","Math","abs","sqrt","SingularValueDecomposition","value","options","arguments","length","undefined","this","checkMatrix","isEmpty","Error","m","rows","n","columns","_options$computeLeftS","computeLeftSingularVectors","_options$computeRight","computeRightSingularVectors","_options$autoTranspos","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","clone","console","warn","nu","min","ni","s","Float64Array","U","V","e","work","si","i","nct","nrt","max","mrc","k","_i","get","_i2","set","j","t","_i3","_i4","_i5","_i6","_i7","_i8","_i9","_j","_j2","_t","_i10","_i11","p","_j3","_i12","_k","_j4","_t2","_i13","_i14","_i15","_i16","_i17","_k2","_j5","_t3","_i18","_i19","_i20","pp","eps","Number","EPSILON","_k3","kase","alpha","MIN_VALUE","isNaN","ks","_t4","f","_j6","_t5","cs","sn","_i21","_f","_j7","_t6","_cs","_sn","_i22","scale","sp","spm1","epm1","sk","ek","c","shift","_f2","g","_j8","_t7","_cs2","_sn2","_i23","_i24","_i25","_t8","_i26","_i27","tmp","key","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","_i28","sum","solve","diag","vcols","X","ucols","_i29","_j9","tol","ii","Array","from","mmult","A","shape","ret","matrix","ctor","strides","offset","order","_buffer","xlogy","module","exports","isnan","ln","x","y","setReadOnly","pmf","NaN","constantFunction","LuDecomposition","v","LUcolj","kmax","lu","WrapperMatrix2D","pivotVector","pivotSign","LU","data","col","isSingular","count","subMatrixRow","isSquare","determinant","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","subMatrix","leftHandSide","rightHandSide","useSVD","multiplyMatrices","B","result","Matrix","Bcolj","colMult","ndarray","multiply","len","out","arr","res","variance","mu","logitLinkInv","eta","etai","EPS","exp","logitMuEta","val","pow","aic","numParameters","logLik","dbern","devResids","wt","mui","yi","calcW","weights","gprime","varg","calcZ","stdErrors","yhat","w","nrow","ncol","errs","irls","nObs","Xt","fill","mustart","beta","logitLink","devOld","converged","z","wz","Xw","columnVector","to1DArray","dev","coefficients","predict","sigmoid","fitted","iterations","addResources","COUNTER","isMissing","isUndefinedOrNull","isNonMissingNumber","isNumber","designMatrix","quantitative","intercept","success","predictors","hash","nobs","values","contains","push","categories","extractCategoriesFromValues","buffer","colIndex","yvalues","map","designMatrixMissing","missing","row","concat","fitModel","omitMissing","isArray","_","LogisticRegression","props","probs","state","resid","subtract","probabilityThreshold","onPredict","style","overflowX","width","className","counter","bordered","size","placement","tooltip","displayMode","raw","toFixed","pnorm","name","idx","tStat","pVal","summaryTable","roundn","ButtonGroup","Button","variant","onClick","handlePredict","InputGroup","Prepend","Text","FormControl","type","defaultValue","step","onChange","event","setState","target","Alert","nextProps","prevState","Component","defaultProps","withTranslation","isArr","isArrayLike","TypeError","_AbstractMatrix","_super","_this","call","rowIndex","columnIndex"],"mappings":"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","file":"static/js/102.f67951c3.chunk.js","sourcesContent":["export function hypotenuse(a, b) {\n  var r = 0;\n\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n\n  return 0;\n}","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar SingularValueDecomposition = /*#__PURE__*/function () {\n  function SingularValueDecomposition(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SingularValueDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    var m = value.rows;\n    var n = value.columns;\n    var _options$computeLeftS = options.computeLeftSingularVectors,\n        computeLeftSingularVectors = _options$computeLeftS === void 0 ? true : _options$computeLeftS,\n        _options$computeRight = options.computeRightSingularVectors,\n        computeRightSingularVectors = _options$computeRight === void 0 ? true : _options$computeRight,\n        _options$autoTranspos = options.autoTranspose,\n        autoTranspose = _options$autoTranspos === void 0 ? false : _options$autoTranspos;\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n    var swapped = false;\n    var a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Float64Array(ni);\n    var U = new Matrix(m, nu);\n    var V = new Matrix(n, n);\n    var e = new Float64Array(n);\n    var work = new Float64Array(m);\n    var si = new Float64Array(ni);\n\n    for (var i = 0; i < ni; i++) {\n      si[i] = i;\n    }\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (var k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (var _i = k; _i < m; _i++) {\n          s[k] = hypotenuse(s[k], a.get(_i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (var _i2 = k; _i2 < m; _i2++) {\n            a.set(_i2, k, a.get(_i2, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (var j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          var t = 0;\n\n          for (var _i3 = k; _i3 < m; _i3++) {\n            t += a.get(_i3, k) * a.get(_i3, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (var _i4 = k; _i4 < m; _i4++) {\n            a.set(_i4, j, a.get(_i4, j) + t * a.get(_i4, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (var _i5 = k; _i5 < m; _i5++) {\n          U.set(_i5, k, a.get(_i5, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (var _i6 = k + 1; _i6 < n; _i6++) {\n          e[k] = hypotenuse(e[k], e[_i6]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (var _i7 = k + 1; _i7 < n; _i7++) {\n            e[_i7] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (var _i8 = k + 1; _i8 < m; _i8++) {\n            work[_i8] = 0;\n          }\n\n          for (var _i9 = k + 1; _i9 < m; _i9++) {\n            for (var _j = k + 1; _j < n; _j++) {\n              work[_i9] += e[_j] * a.get(_i9, _j);\n            }\n          }\n\n          for (var _j2 = k + 1; _j2 < n; _j2++) {\n            var _t = -e[_j2] / e[k + 1];\n\n            for (var _i10 = k + 1; _i10 < m; _i10++) {\n              a.set(_i10, _j2, a.get(_i10, _j2) + _t * work[_i10]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (var _i11 = k + 1; _i11 < n; _i11++) {\n            V.set(_i11, k, e[_i11]);\n          }\n        }\n      }\n    }\n\n    var p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (var _j3 = nct; _j3 < nu; _j3++) {\n        for (var _i12 = 0; _i12 < m; _i12++) {\n          U.set(_i12, _j3, 0);\n        }\n\n        U.set(_j3, _j3, 1);\n      }\n\n      for (var _k = nct - 1; _k >= 0; _k--) {\n        if (s[_k] !== 0) {\n          for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n            var _t2 = 0;\n\n            for (var _i13 = _k; _i13 < m; _i13++) {\n              _t2 += U.get(_i13, _k) * U.get(_i13, _j4);\n            }\n\n            _t2 = -_t2 / U.get(_k, _k);\n\n            for (var _i14 = _k; _i14 < m; _i14++) {\n              U.set(_i14, _j4, U.get(_i14, _j4) + _t2 * U.get(_i14, _k));\n            }\n          }\n\n          for (var _i15 = _k; _i15 < m; _i15++) {\n            U.set(_i15, _k, -U.get(_i15, _k));\n          }\n\n          U.set(_k, _k, 1 + U.get(_k, _k));\n\n          for (var _i16 = 0; _i16 < _k - 1; _i16++) {\n            U.set(_i16, _k, 0);\n          }\n        } else {\n          for (var _i17 = 0; _i17 < m; _i17++) {\n            U.set(_i17, _k, 0);\n          }\n\n          U.set(_k, _k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (var _k2 = n - 1; _k2 >= 0; _k2--) {\n        if (_k2 < nrt && e[_k2] !== 0) {\n          for (var _j5 = _k2 + 1; _j5 < n; _j5++) {\n            var _t3 = 0;\n\n            for (var _i18 = _k2 + 1; _i18 < n; _i18++) {\n              _t3 += V.get(_i18, _k2) * V.get(_i18, _j5);\n            }\n\n            _t3 = -_t3 / V.get(_k2 + 1, _k2);\n\n            for (var _i19 = _k2 + 1; _i19 < n; _i19++) {\n              V.set(_i19, _j5, V.get(_i19, _j5) + _t3 * V.get(_i19, _k2));\n            }\n          }\n        }\n\n        for (var _i20 = 0; _i20 < n; _i20++) {\n          V.set(_i20, _k2, 0);\n        }\n\n        V.set(_k2, _k2, 1);\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n\n    while (p > 0) {\n      var _k3 = void 0,\n          kase = void 0;\n\n      for (_k3 = p - 2; _k3 >= -1; _k3--) {\n        if (_k3 === -1) {\n          break;\n        }\n\n        var alpha = Number.MIN_VALUE + eps * Math.abs(s[_k3] + Math.abs(s[_k3 + 1]));\n\n        if (Math.abs(e[_k3]) <= alpha || Number.isNaN(e[_k3])) {\n          e[_k3] = 0;\n          break;\n        }\n      }\n\n      if (_k3 === p - 2) {\n        kase = 4;\n      } else {\n        var ks = void 0;\n\n        for (ks = p - 1; ks >= _k3; ks--) {\n          if (ks === _k3) {\n            break;\n          }\n\n          var _t4 = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * _t4) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === _k3) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          _k3 = ks;\n        }\n      }\n\n      _k3++;\n\n      switch (kase) {\n        case 1:\n          {\n            var f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n              var _t5 = hypotenuse(s[_j6], f);\n\n              var cs = s[_j6] / _t5;\n              var sn = f / _t5;\n              s[_j6] = _t5;\n\n              if (_j6 !== _k3) {\n                f = -sn * e[_j6 - 1];\n                e[_j6 - 1] = cs * e[_j6 - 1];\n              }\n\n              if (wantv) {\n                for (var _i21 = 0; _i21 < n; _i21++) {\n                  _t5 = cs * V.get(_i21, _j6) + sn * V.get(_i21, p - 1);\n                  V.set(_i21, p - 1, -sn * V.get(_i21, _j6) + cs * V.get(_i21, p - 1));\n                  V.set(_i21, _j6, _t5);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            var _f = e[_k3 - 1];\n            e[_k3 - 1] = 0;\n\n            for (var _j7 = _k3; _j7 < p; _j7++) {\n              var _t6 = hypotenuse(s[_j7], _f);\n\n              var _cs = s[_j7] / _t6;\n\n              var _sn = _f / _t6;\n\n              s[_j7] = _t6;\n              _f = -_sn * e[_j7];\n              e[_j7] = _cs * e[_j7];\n\n              if (wantu) {\n                for (var _i22 = 0; _i22 < m; _i22++) {\n                  _t6 = _cs * U.get(_i22, _j7) + _sn * U.get(_i22, _k3 - 1);\n                  U.set(_i22, _k3 - 1, -_sn * U.get(_i22, _j7) + _cs * U.get(_i22, _k3 - 1));\n                  U.set(_i22, _j7, _t6);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            var scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[_k3]), Math.abs(e[_k3]));\n            var sp = s[p - 1] / scale;\n            var spm1 = s[p - 2] / scale;\n            var epm1 = e[p - 2] / scale;\n            var sk = s[_k3] / scale;\n            var ek = e[_k3] / scale;\n            var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            var c = sp * epm1 * (sp * epm1);\n            var shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            var _f2 = (sk + sp) * (sk - sp) + shift;\n\n            var g = sk * ek;\n\n            for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n              var _t7 = hypotenuse(_f2, g);\n\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n\n              var _cs2 = _f2 / _t7;\n\n              var _sn2 = g / _t7;\n\n              if (_j8 !== _k3) {\n                e[_j8 - 1] = _t7;\n              }\n\n              _f2 = _cs2 * s[_j8] + _sn2 * e[_j8];\n              e[_j8] = _cs2 * e[_j8] - _sn2 * s[_j8];\n              g = _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = _cs2 * s[_j8 + 1];\n\n              if (wantv) {\n                for (var _i23 = 0; _i23 < n; _i23++) {\n                  _t7 = _cs2 * V.get(_i23, _j8) + _sn2 * V.get(_i23, _j8 + 1);\n                  V.set(_i23, _j8 + 1, -_sn2 * V.get(_i23, _j8) + _cs2 * V.get(_i23, _j8 + 1));\n                  V.set(_i23, _j8, _t7);\n                }\n              }\n\n              _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              _cs2 = _f2 / _t7;\n              _sn2 = g / _t7;\n              s[_j8] = _t7;\n              _f2 = _cs2 * e[_j8] + _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * s[_j8 + 1];\n              g = _sn2 * e[_j8 + 1];\n              e[_j8 + 1] = _cs2 * e[_j8 + 1];\n\n              if (wantu && _j8 < m - 1) {\n                for (var _i24 = 0; _i24 < m; _i24++) {\n                  _t7 = _cs2 * U.get(_i24, _j8) + _sn2 * U.get(_i24, _j8 + 1);\n                  U.set(_i24, _j8 + 1, -_sn2 * U.get(_i24, _j8) + _cs2 * U.get(_i24, _j8 + 1));\n                  U.set(_i24, _j8, _t7);\n                }\n              }\n            }\n\n            e[p - 2] = _f2;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[_k3] <= 0) {\n              s[_k3] = s[_k3] < 0 ? -s[_k3] : 0;\n\n              if (wantv) {\n                for (var _i25 = 0; _i25 <= pp; _i25++) {\n                  V.set(_i25, _k3, -V.get(_i25, _k3));\n                }\n              }\n            }\n\n            while (_k3 < pp) {\n              if (s[_k3] >= s[_k3 + 1]) {\n                break;\n              }\n\n              var _t8 = s[_k3];\n              s[_k3] = s[_k3 + 1];\n              s[_k3 + 1] = _t8;\n\n              if (wantv && _k3 < n - 1) {\n                for (var _i26 = 0; _i26 < n; _i26++) {\n                  _t8 = V.get(_i26, _k3 + 1);\n                  V.set(_i26, _k3 + 1, V.get(_i26, _k3));\n                  V.set(_i26, _k3, _t8);\n                }\n              }\n\n              if (wantu && _k3 < m - 1) {\n                for (var _i27 = 0; _i27 < m; _i27++) {\n                  _t8 = U.get(_i27, _k3 + 1);\n                  U.set(_i27, _k3 + 1, U.get(_i27, _k3));\n                  U.set(_i27, _k3, _t8);\n                }\n              }\n\n              _k3++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  _createClass(SingularValueDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      var Y = value;\n      var e = this.threshold;\n      var scols = this.s.length;\n      var Ls = Matrix.zeros(scols, scols);\n\n      for (var i = 0; i < scols; i++) {\n        if (Math.abs(this.s[i]) <= e) {\n          Ls.set(i, i, 0);\n        } else {\n          Ls.set(i, i, 1 / this.s[i]);\n        }\n      }\n\n      var U = this.U;\n      var V = this.rightSingularVectors;\n      var VL = V.mmul(Ls);\n      var vrows = V.rows;\n      var urows = U.rows;\n      var VLU = Matrix.zeros(vrows, urows);\n\n      for (var _i28 = 0; _i28 < vrows; _i28++) {\n        for (var j = 0; j < urows; j++) {\n          var sum = 0;\n\n          for (var k = 0; k < scols; k++) {\n            sum += VL.get(_i28, k) * U.get(j, k);\n          }\n\n          VLU.set(_i28, j, sum);\n        }\n      }\n\n      return VLU.mmul(Y);\n    }\n  }, {\n    key: \"solveForDiagonal\",\n    value: function solveForDiagonal(value) {\n      return this.solve(Matrix.diag(value));\n    }\n  }, {\n    key: \"inverse\",\n    value: function inverse() {\n      var V = this.V;\n      var e = this.threshold;\n      var vrows = V.rows;\n      var vcols = V.columns;\n      var X = new Matrix(vrows, this.s.length);\n\n      for (var i = 0; i < vrows; i++) {\n        for (var j = 0; j < vcols; j++) {\n          if (Math.abs(this.s[j]) > e) {\n            X.set(i, j, V.get(i, j) / this.s[j]);\n          }\n        }\n      }\n\n      var U = this.U;\n      var urows = U.rows;\n      var ucols = U.columns;\n      var Y = new Matrix(vrows, urows);\n\n      for (var _i29 = 0; _i29 < vrows; _i29++) {\n        for (var _j9 = 0; _j9 < urows; _j9++) {\n          var sum = 0;\n\n          for (var k = 0; k < ucols; k++) {\n            sum += X.get(_i29, k) * U.get(_j9, k);\n          }\n\n          Y.set(_i29, _j9, sum);\n        }\n      }\n\n      return Y;\n    }\n  }, {\n    key: \"condition\",\n    get: function get() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n  }, {\n    key: \"norm2\",\n    get: function get() {\n      return this.s[0];\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n      var r = 0;\n      var s = this.s;\n\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (s[i] > tol) {\n          r++;\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"diagonal\",\n    get: function get() {\n      return Array.from(this.s);\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n  }, {\n    key: \"leftSingularVectors\",\n    get: function get() {\n      return this.U;\n    }\n  }, {\n    key: \"rightSingularVectors\",\n    get: function get() {\n      return this.V;\n    }\n  }, {\n    key: \"diagonalMatrix\",\n    get: function get() {\n      return Matrix.diag(this.s);\n    }\n  }]);\n\n  return SingularValueDecomposition;\n}();\n\nexport { SingularValueDecomposition as default };","/**\n* Computes a matrix product of a n x p matrix and a column vector of length p.\n*\n* @param {Matrix} A - n x p matrix\n* @param {Array} b - p x 1 column vector\n* @returns {Array} result of matrix multiplication\n*/\nfunction mmult( A, b ) {\n\tconst n = A.shape[ 0 ];\n\tconst p = A.shape[ 1 ];\n\n\tlet ret = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\t\tlet sum = 0;\n\t\t\tfor ( let j = 0; j < p; j++ ) {\n\t\t\t\tsum += A.get( i, j ) * b[ j ];\n\t\t\t}\n\t\t\tret[ i ] = sum;\n\t}\n\treturn ret;\n}\n\n\n// EXPORTS //\n\nexport default mmult;\n","/**\n* Copyright (C) 2020-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport ctor from '@stdlib/ndarray/ctor';\n\n\n// VARIABLES //\n\nconst matrix = ctor( 'float64', 2 );\n\n\n// MAIN //\n\n/**\n* Transposes a matrix.\n*\n* @param {Matrix} X - input matrix (2d `ndarray`)\n* @returns matrix transpose\n*/\nconst transpose = ( X ) => {\n\tconst shape = [ X.shape[ 1 ], X.shape[ 0 ] ];\n\tconst strides = [ X.strides[ 1 ], X.strides[ 0 ] ];\n\tconst offset = X.offset;\n\tconst order = X.order;\n\treturn matrix( X._buffer, shape, strides, offset, order );\n};\n\n\n// EXPORTS //\n\nexport default transpose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Compute `x * ln(y)` so that the result is `0` if `x = 0`.\n*\n* @module @stdlib/math/base/special/xlogy\n*\n* @example\n* var xlogy = require( '@stdlib/math/base/special/xlogy' );\n*\n* var out = xlogy( 3.0, 2.0 );\n* // returns ~2.079\n*\n* out = xlogy( 1.5, 5.9 );\n* // returns ~2.662\n*\n* out = xlogy( 0.9, 1.0 );\n* // returns 0.0\n*\n* out = xlogy( 0.0, -2.0 );\n* // returns 0.0\n*\n* out = xlogy( 1.5, NaN );\n* // returns NaN\n*\n* out = xlogy( 0.0, NaN );\n* // returns NaN\n*\n* out = xlogy( NaN, 2.3 );\n* // returns NaN\n*/\n// MODULES //\n\nvar xlogy = require('./xlogy.js'); // EXPORTS //\n\n\nmodule.exports = xlogy;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isnan = require('@stdlib/math/base/assert/is-nan');\n\nvar ln = require('@stdlib/math/base/special/ln'); // MAIN //\n\n/**\n* Computes `x * ln(y)` so that the result is `0` if `x = 0`.\n*\n* @param {number} x - input value\n* @param {number} y - input value\n* @returns {number} function value\n*\n* @example\n* var out = xlogy( 3.0, 2.0 );\n* // returns ~2.079\n*\n* @example\n* var out = xlogy( 1.5, 5.9 );\n* // returns ~2.662\n*\n* @example\n* var out = xlogy( 0.9, 1.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogy( 0.0, -2.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogy( 1.5, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogy( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogy( NaN, 2.3 );\n* // returns NaN\n*/\n\n\nfunction xlogy(x, y) {\n  if (x === 0.0 && !isnan(y)) {\n    return 0.0;\n  }\n\n  return x * ln(y);\n} // EXPORTS //\n\n\nmodule.exports = xlogy;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Bernoulli distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/bernoulli/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/bernoulli/pmf' );\n*\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* y = pmf( 1.0, 0.7 );\n* // returns 0.7\n*\n* y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 0.5 );\n* y = mypmf( 2.0 );\n* // returns 0.0\n*\n* y = mypmf( 1.0 );\n* // returns 0.5\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils/define-nonenumerable-read-only-property');\n\nvar pmf = require('./pmf.js');\n\nvar factory = require('./factory.js'); // MAIN //\n\n\nsetReadOnly(pmf, 'factory', factory); // EXPORTS //\n\nmodule.exports = pmf;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isnan = require('@stdlib/math/base/assert/is-nan'); // MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a Bernoulli distribution with success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 1.0, 0.3 );\n* // returns 0.3\n*\n* @example\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* @example\n* var y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.8, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* // Invalid success probability:\n* var y = pmf( 1.0, 1.5 );\n* // returns NaN\n*/\n\n\nfunction pmf(x, p) {\n  if (isnan(x) || isnan(p) || p < 0.0 || p > 1.0) {\n    return NaN;\n  }\n\n  if (x === 0.0) {\n    return 1.0 - p;\n  }\n\n  if (x === 1.0) {\n    return p;\n  }\n\n  return 0.0;\n} // EXPORTS //\n\n\nmodule.exports = pmf;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar constantFunction = require('@stdlib/utils/constant-function');\n\nvar isnan = require('@stdlib/math/base/assert/is-nan'); // MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a Bernoulli distribution with success probability `p`.\n*\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 0.8 );\n* var y = pmf( 0.0 );\n* // returns 0.2\n*\n* y = pmf( 1.0 );\n* // returns 0.8\n*/\n\n\nfunction factory(p) {\n  if (isnan(p) || p < 0.0 || p > 1.0) {\n    return constantFunction(NaN);\n  }\n\n  return pmf;\n  /**\n  * Evaluates the probability mass function (PMF) for a Bernoulli distribution.\n  *\n  * @private\n  * @param {number} x - input value\n  * @returns {Probability} evaluated PMF\n  *\n  * @example\n  * var y = pmf( 2.0 );\n  * // returns <number>\n  */\n\n  function pmf(x) {\n    if (isnan(x)) {\n      return NaN;\n    }\n\n    if (x === 0.0) {\n      return 1.0 - p;\n    }\n\n    if (x === 1.0) {\n      return p;\n    }\n\n    return 0.0;\n  }\n} // EXPORTS //\n\n\nmodule.exports = factory;","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nvar LuDecomposition = /*#__PURE__*/function () {\n  function LuDecomposition(matrix) {\n    _classCallCheck(this, LuDecomposition);\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Float64Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  _createClass(LuDecomposition, [{\n    key: \"isSingular\",\n    value: function isSingular() {\n      var data = this.LU;\n      var col = data.columns;\n\n      for (var j = 0; j < col; j++) {\n        if (data.get(j, j) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(value) {\n      value = Matrix.checkMatrix(value);\n      var lu = this.LU;\n      var rows = lu.rows;\n\n      if (rows !== value.rows) {\n        throw new Error('Invalid matrix dimensions');\n      }\n\n      if (this.isSingular()) {\n        throw new Error('LU matrix is singular');\n      }\n\n      var count = value.columns;\n      var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n      var columns = lu.columns;\n      var i, j, k;\n\n      for (k = 0; k < columns; k++) {\n        for (i = k + 1; i < columns; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n          }\n        }\n      }\n\n      for (k = columns - 1; k >= 0; k--) {\n        for (j = 0; j < count; j++) {\n          X.set(k, j, X.get(k, j) / lu.get(k, k));\n        }\n\n        for (i = 0; i < k; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"determinant\",\n    get: function get() {\n      var data = this.LU;\n\n      if (!data.isSquare()) {\n        throw new Error('Matrix must be square');\n      }\n\n      var determinant = this.pivotSign;\n      var col = data.columns;\n\n      for (var j = 0; j < col; j++) {\n        determinant *= data.get(j, j);\n      }\n\n      return determinant;\n    }\n  }, {\n    key: \"lowerTriangularMatrix\",\n    get: function get() {\n      var data = this.LU;\n      var rows = data.rows;\n      var columns = data.columns;\n      var X = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          if (i > j) {\n            X.set(i, j, data.get(i, j));\n          } else if (i === j) {\n            X.set(i, j, 1);\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"upperTriangularMatrix\",\n    get: function get() {\n      var data = this.LU;\n      var rows = data.rows;\n      var columns = data.columns;\n      var X = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          if (i <= j) {\n            X.set(i, j, data.get(i, j));\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"pivotPermutationVector\",\n    get: function get() {\n      return Array.from(this.pivotVector);\n    }\n  }]);\n\n  return LuDecomposition;\n}();\n\nexport { LuDecomposition as default };","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar QrDecomposition = /*#__PURE__*/function () {\n  function QrDecomposition(value) {\n    _classCallCheck(this, QrDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Float64Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n\n        qr.set(k, k, qr.get(k, k) + 1);\n\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  _createClass(QrDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      value = Matrix.checkMatrix(value);\n      var qr = this.QR;\n      var m = qr.rows;\n\n      if (value.rows !== m) {\n        throw new Error('Matrix row dimensions must agree');\n      }\n\n      if (!this.isFullRank()) {\n        throw new Error('Matrix is rank deficient');\n      }\n\n      var count = value.columns;\n      var X = value.clone();\n      var n = qr.columns;\n      var i, j, k, s;\n\n      for (k = 0; k < n; k++) {\n        for (j = 0; j < count; j++) {\n          s = 0;\n\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < m; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n\n      for (k = n - 1; k >= 0; k--) {\n        for (j = 0; j < count; j++) {\n          X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n        }\n\n        for (i = 0; i < k; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n          }\n        }\n      }\n\n      return X.subMatrix(0, n - 1, 0, count - 1);\n    }\n  }, {\n    key: \"isFullRank\",\n    value: function isFullRank() {\n      var columns = this.QR.columns;\n\n      for (var i = 0; i < columns; i++) {\n        if (this.Rdiag[i] === 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"upperTriangularMatrix\",\n    get: function get() {\n      var qr = this.QR;\n      var n = qr.columns;\n      var X = new Matrix(n, n);\n      var i, j;\n\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i < j) {\n            X.set(i, j, qr.get(i, j));\n          } else if (i === j) {\n            X.set(i, j, this.Rdiag[i]);\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"orthogonalMatrix\",\n    get: function get() {\n      var qr = this.QR;\n      var rows = qr.rows;\n      var columns = qr.columns;\n      var X = new Matrix(rows, columns);\n      var i, j, k, s;\n\n      for (k = columns - 1; k >= 0; k--) {\n        for (i = 0; i < rows; i++) {\n          X.set(i, k, 0);\n        }\n\n        X.set(k, k, 1);\n\n        for (j = k; j < columns; j++) {\n          if (qr.get(k, k) !== 0) {\n            s = 0;\n\n            for (i = k; i < rows; i++) {\n              s += qr.get(i, k) * X.get(i, j);\n            }\n\n            s = -s / qr.get(k, k);\n\n            for (i = k; i < rows; i++) {\n              X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n            }\n          }\n        }\n      }\n\n      return X;\n    }\n  }]);\n\n  return QrDecomposition;\n}();\n\nexport { QrDecomposition as default };","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\nexport function inverse(matrix) {\n  var useSVD = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\nexport function solve(leftHandSide, rightHandSide) {\n  var useSVD = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}","// MODULES //\n\nimport { Matrix } from 'ml-matrix';\n\n\n// MAIN //\n\n/**\n* Matrix product of `A` and `B`.\n*\n* @param {Matrix} A - first input matrix\n* @param {Matrix} B - second input matrix\n* @returns {Matrix} A * B\n*/\nfunction multiplyMatrices( A, B ) {\n\tconst [ m, n ] = A.shape;\n\tconst p = B.shape[ 1 ];\n\tconst result = Matrix.zeros( m, p );\n\tconst Bcolj = new Float64Array( n );\n\tfor ( let j = 0; j < p; j++ ) {\n\t\tfor ( let k = 0; k < n; k++ ) {\n\t\t\tBcolj[ k ] = B.get(k, j);\n\t\t}\n\t\tfor ( let i = 0; i < m; i++ ) {\n\t\t\tlet s = 0;\n\t\t\tfor ( let k = 0; k < n; k++ ) {\n\t\t\t\ts += A.get( i, k ) * Bcolj[ k ];\n\t\t\t}\n\t\t\tresult.set( i, j, s );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nexport default multiplyMatrices;\n","// MODULES //\n\nimport ndarray from '@stdlib/ndarray/array';\n\n\n// MAIN //\n\n/**\n* Multiplies each column of matrix `A` with the elements of vector `b`.\n*\n* @param {Matrix} A - input matrix\n* @param {NumberArray} b - input vector\n* @returns {Matrix} `A` with columns multiplied by elements of `b`\n*/\nfunction colMult( A, b ) {\n\tconst [ m, n ] = A.shape;\n\tconst result = ndarray( new Float64Array( m*n ), { 'shape': [ m, n ]} );\n\tfor ( let i = 0; i < m; i++ ) {\n\t\tfor ( let j = 0; j < n; j++ ) {\n\t\t\tresult.set( i, j, A.get( i, j ) * b[ i ] );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nexport default colMult;\n","// MAIN //\n\n/**\n* Computes an element-wise multiplication of two arrays.\n*\n* @param {Array} x - numeric array\n* @param {Array} y - numeric array\n*/\nfunction multiply( x, y ) {\n\tconst len = x.length;\n\tconst out = new Array( len );\n\tfor ( let i = 0; i < len; i++ ) {\n\t\tout[ i ] = x[ i ] * y[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default multiply;\n","// MODULES //\n\nimport { Matrix, solve } from 'ml-matrix';\nimport abs from '@stdlib/math/base/special/abs';\nimport ln from '@stdlib/math/base/special/ln';\nimport pow from '@stdlib/math/base/special/pow';\nimport exp from '@stdlib/math/base/special/exp';\nimport xlogy from '@stdlib/math/base/special/xlogy';\nimport EPS from '@stdlib/constants/math/float64-eps';\nimport dbern from '@stdlib/stats/base/dists/bernoulli/pmf';\nimport sqrt from '@stdlib/math/base/special/sqrt';\nimport mmult from '@isle-project/utils/mmult';\nimport transpose from '@isle-project/utils/transpose';\nimport multiplyMatrices from './multiply_matrices.js';\nimport colMult from './col_mult.js';\nimport multiply from './multiply.js';\n\n\n// VARIABLES //\n\nconst MAX_IT = 25;\nconst EPSILON = 1e-8;\n\n\n// FUNCTIONS //\n\nconst sum = ( arr ) => {\n\tlet res = 0;\n\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\tres += arr[ i ];\n\t}\n\treturn res;\n};\n\nconst variance = ( mu ) => {\n\tconst out = new Float64Array( mu.length );\n\tfor ( let i = 0; i < mu.length; i++ ) {\n\t\tout[ i ] = mu[ i ] * ( 1.0 - mu[ i ] );\n\t}\n\treturn out;\n};\n\nconst logitLink = ( mu ) => {\n\tconst n = mu.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tout[ i ] = ln( mu[ i ] / ( 1 - mu[ i ] ) );\n\t}\n\treturn out;\n};\n\nconst logitLinkInv = ( eta ) => {\n\tconst n = eta.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tconst etai = eta[i];\n\t\tif ( abs( etai ) > 30 ) {\n\t\t\tout[ i ] = EPS;\n\t\t} else {\n\t\t\tconst x = exp( etai );\n\t\t\tout[ i ] = x / ( 1 + x );\n\t\t}\n\t}\n\treturn out;\n};\n\nconst logitMuEta = ( eta ) => {\n\tconst n = eta.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++) {\n\t\tconst val = eta[i];\n\t\tif ( abs( val ) > 30 ) {\n\t\t\tout[ i ] = EPS;\n\t\t} else {\n\t\t\tout[ i ] = exp( val ) / pow( 1 + exp( val ), 2 );\n\t\t}\n\t}\n\treturn out;\n};\n\nconst aic = ( y, mu, numParameters ) => {\n\tlet logLik = 0;\n\tfor ( let i = 0; i < y.length; i++ ) {\n\t\tlogLik += ln( dbern( y[ i ], mu[ i ] ) );\n\t}\n\treturn -2 * logLik + 2*numParameters;\n};\n\nconst devResids = ( y, mu, wt ) => {\n\tconst n = y.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tconst mui = mu[ i ];\n\t\tconst yi = y[ i ];\n\t\tout[ i ] = 2.0 * wt[ i ] *\n\t\t( xlogy( yi, yi / mui ) + xlogy( 1 - yi, ( 1 - yi ) / ( 1 - mui ) ) );\n\t}\n\treturn out;\n};\n\nconst calcW = ( weights, gprime, varg ) => {\n\tconst out = new Float64Array( weights.length );\n\tfor ( let i = 0; i < weights.length; i++ ) {\n\t\tout[ i ] = weights[ i ] * ( gprime[i]*gprime[i] / varg[ i ] );\n\t}\n\treturn out;\n};\n\nconst calcZ = ( eta, y, mu, gprime ) => {\n\tconst out = new Float64Array( y.length );\n\tfor ( let i = 0; i < y.length; i++ ) {\n\t\tout[ i ] = eta[ i ] + ( y[ i ] - mu[ i ] ) / gprime[ i ];\n\t}\n\treturn out;\n};\n\nfunction sigmoid( x ) {\n\tconst result = new Float64Array( x.length );\n\tfor ( let i = 0; i < x.length; i++) {\n\t\tresult[ i ]= 1 / (1 + exp(-x[i]) );\n\t}\n\treturn result;\n}\n\nfunction stdErrors( matrix, yhat ) {\n\tconst w = new Float64Array( yhat.length );\n\tfor ( let i = 0; i < w.length; i++ ) {\n\t\tw[ i ] = yhat[ i ] * ( 1 - yhat[ i ] );\n\t}\n\tconst [ nrow, ncol ] = matrix.shape;\n\tconst errs = new Float64Array( ncol );\n\tfor ( let j = 0; j < errs.length; j++ ) {\n\t\tlet sum = 0;\n\t\tfor ( let i = 0; i < nrow; i++ ) {\n\t\t\tsum += pow( matrix.get( i, j ), 2 ) * w[ i ];\n\t\t}\n\t\terrs[ j ] = sqrt( 1.0 / sum );\n\t}\n\treturn errs;\n}\n\n\n// MAIN //\n\n/**\n* Iteratively re-weighted least squares algorithm.\n*/\nfunction irls( X, y, nObs ) {\n\tconst Xt = transpose( X );\n\tconst weights = new Array( nObs ).fill( 1 );\n\n\tconst mustart = new Float64Array( weights.length );\n\tfor ( let i = 0; i < nObs; i++ ) {\n\t\tmustart[ i ] = ( weights[ i ] * y[ i ] + 0.5 ) / ( weights[ i ] + 1 );\n\t}\n\tlet eta = logitLink( mustart );\n\tlet mu = logitLinkInv( eta );\n\tlet devOld = sum( devResids( y, mu, weights ) );\n\n\tlet beta;\n\tlet j;\n\tlet converged = false;\n\tfor ( j = 0; j < MAX_IT; j++ ) {\n\t\tconst varg = variance( mu );\n\t\tconst gprime = logitMuEta( eta );\n\t\tconst z = calcZ( eta, y, mu, gprime );\n\t\tconst w = calcW( weights, gprime, varg );\n\t\tconst wz = multiply( w, z );\n\t\tconst Xw = colMult( X, w );\n\t\tconst A = multiplyMatrices( Xt, Xw );\n\t\tconst b = mmult( Xt, wz );\n\t\tbeta = solve( A, Matrix.columnVector( b ) );\n\t\teta = mmult( X, beta.to1DArray() );\n\t\tmu = logitLinkInv( eta );\n\t\tconst dev = sum( devResids( y, mu, weights ) );\n\t\tif ( abs( dev - devOld ) / ( 0.1 + abs( dev ) ) < EPSILON ) {\n\t\t\tconverged = true;\n\t\t\tbreak;\n\t\t}\n\t\tdevOld = dev;\n\t}\n\tconst coefficients = beta.to1DArray();\n\tconst predict = ( X ) => {\n\t\tconst finalData = mmult( X, coefficients );\n\t\tconst predictions = sigmoid( finalData );\n\t\treturn predictions;\n\t};\n\tconst fitted = predict( X, coefficients );\n\treturn {\n\t\taic: aic( y, logitLinkInv( eta ), coefficients.length ),\n\t\tstdErrors: stdErrors( X, fitted ),\n\t\tfitted,\n\t\tcoefficients,\n\t\titerations: j,\n\t\tconverged,\n\t\tpredict\n\t};\n}\n\n\n// EXPORTS //\n\nexport default irls;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport contains from '@stdlib/assert/contains';\nimport ndarray from '@stdlib/ndarray/array';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isUndefinedOrNull from '@stdlib/assert/is-undefined-or-null';\nimport isArray from '@stdlib/assert/is-array';\nimport isnan from '@stdlib/assert/is-nan';\nimport abs from '@stdlib/math/base/special/abs';\nimport pnorm from '@stdlib/stats/base/dists/normal/cdf';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport Tooltip from '@isle-project/components/tooltip';\nimport Table from '@isle-project/components/table';\nimport TeX from '@isle-project/components/tex';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport subtract from '@isle-project/utils/subtract';\nimport { addResources } from '@isle-project/locales';\nimport irls from './logistic_regression.js';\n\n\n// VARIABLES //\n\naddResources( 'StatisticalModels' );\nlet COUNTER = 0;\nconst T = 't';\n\n\n// FUNCTIONS //\n\nfunction isMissing( x ) {\n\treturn isnan( x ) || isUndefinedOrNull( x );\n}\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\nfunction designMatrix( x, y, data, quantitative, intercept, success ) {\n\tconst predictors = [];\n\tconst hash = {};\n\tconst nobs = data[ x[ 0 ] ].length;\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst buffer = new Float64Array( nobs * (predictors.length+1) );\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tif ( intercept ) {\n\t\t\tbuffer[ (predictors.length+1)*i ] = 1;\n\t\t}\n\t\tlet colIndex = 0;\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tcolIndex += 1;\n\t\t\t\tbuffer[ (predictors.length+1)*i + colIndex ] = values[ i ];\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\tcolIndex += 1;\n\t\t\t\t\tbuffer[ (predictors.length+1)*i + colIndex ] = ( val === categories[ k ] ) ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst matrix = ndarray( buffer, {\n\t\tshape: [ nobs, predictors.length+1 ]\n\t});\n\tconst yvalues = data[ y ].map( v => {\n\t\treturn v === success ? 1 : 0;\n\t});\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nfunction designMatrixMissing( x, y, data, quantitative, intercept, success ) {\n\tconst predictors = [];\n\tconst hash = {};\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tlet buffer = [];\n\tconst yvalues = [];\n\tfor ( let i = 0; i < data[ x[ 0 ] ].length; i++ ) {\n\t\tlet missing = false;\n\t\tconst row = [];\n\t\tif ( intercept ) {\n\t\t\trow.push( 1 );\n\t\t}\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tif ( isNonMissingNumber( values[ i ] ) ) {\n\t\t\t\t\trow.push( values[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tif ( isMissing( val ) ) {\n\t\t\t\t\tmissing = true;\n\t\t\t\t} else {\n\t\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !missing ) {\n\t\t\tbuffer = buffer.concat( row );\n\t\t\tyvalues.push( data[ y ][ i ] === success ? 1 : 0 );\n\t\t}\n\t}\n\tconst nobs = yvalues.length;\n\tconst matrix = ndarray( buffer, {\n\t\tshape: [ nobs, predictors.length+1 ]\n\t});\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nconst summaryTable = ( x, intercept, result, t ) => {\n\treturn (\n\t\t<Table bordered size=\"sm\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<Tooltip placement=\"right\" tooltip={t('name-of-predictor')} ><th>{t('predictor')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"right\" tooltip={t('change-in-log')}><th>{t('coefficient')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={t('standard-deviation-coefficient')} ><th>{t('std-error')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={<span>{t('Test statistic for hypothesis that coefficient is zero')}<TeX displayMode raw=\"t = \\tfrac{\\text{Coefficient}}{\\text{Std. Error}}\" /></span>} ><th>{T}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={<span>{t('p-value-coefficient-zero')}<TeX displayMode raw=\"2 \\Phi( |t| )\" /></span>} ><th>{t('p-value')}</th></Tooltip>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{ intercept ? <tr>\n\t\t\t\t\t<th>{t('intercept')}</th>\n\t\t\t\t\t<td>{result.coefficients[ 0 ].toFixed( 6 )}</td>\n\t\t\t\t\t<td>{result.stdErrors[ 0 ].toFixed( 4 )}</td>\n\t\t\t\t\t<td>{( result.coefficients[ 0 ] / result.stdErrors[ 0 ] ).toFixed( 4 )}</td>\n\t\t\t\t\t<td>{( 2.0 * pnorm( -abs( result.coefficients[ 0 ] / result.stdErrors[ 0 ] ), 0.0, 1.0 ) ).toFixed( 4 )}</td>\n\t\t\t\t</tr> : null }\n\t\t\t\t{x.map( ( name, idx ) => {\n\t\t\t\t\tidx = idx + Number( intercept );\n\t\t\t\t\tconst tStat = result.coefficients[ idx ]/ result.stdErrors[ idx ];\n\t\t\t\t\tconst pVal = 2.0 * pnorm( -abs( tStat ), 0.0, 1.0 );\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={idx} >\n\t\t\t\t\t\t\t<th>{name}</th>\n\t\t\t\t\t\t\t<td>{result.coefficients[ idx ].toFixed( 6 )}</td>\n\t\t\t\t\t\t\t<td>{result.stdErrors[ idx ].toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{tStat.toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{pVal.toFixed( 4 )}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\nconst fitModel = ({ y, success, x, intercept, omitMissing, data, quantitative }) => {\n\ttry {\n\t\tif ( !isArray( x ) ) {\n\t\t\tx = [ x ];\n\t\t}\n\t\tconst dMatrix = omitMissing ? designMatrixMissing : designMatrix;\n\t\tconst { matrix, predictors, yvalues, nobs } = dMatrix( x, y, data, quantitative, intercept, success );\n\t\treturn {\n\t\t\tresult: irls( matrix, yvalues, nobs ),\n\t\t\tpredictors: predictors\n\t\t};\n\t} catch ( _ ) {\n\t\treturn {};\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Multiple linear regression.\n*\n* @property {Object} data - object of value arrays\n* @property {string} y - outcome variable\n* @property {*} success - success category of `y`\n* @property {Array<string>} x - one or more predictor variables\n* @property {Array<string>} quantitative - array of variables in `data` that are `quantitative`\n* @property {boolean} omitMissing - controls whether to omit missing values\n* @property {boolean} intercept - controls whether to fit a model with an intercept term\n* @property {Function} onPredict - callback invoked with predictions and residuals after model fitting\n*/\nclass LogisticRegression extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tCOUNTER += 1;\n\t\tlet { y, success, x, intercept, omitMissing, data, quantitative } = props;\n\t\tconst { result, predictors } = fitModel({ y, success, x, intercept, omitMissing, data, quantitative });\n\t\tthis.state = {\n\t\t\tprobabilityThreshold: 0.5,\n\t\t\tresult,\n\t\t\tpredictors,\n\t\t\t...props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.quantitative !== prevState.quantitative ||\n\t\t\tnextProps.x !== prevState.x ||\n\t\t\tnextProps.y !== prevState.y ||\n\t\t\tnextProps.success !== prevState.success ||\n\t\t\tnextProps.omitMissing !== prevState.omitMissing\n\t\t) {\n\t\t\tconst { y, success, x, intercept, omitMissing, data, quantitative } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel({ y, success, x, intercept, omitMissing, data, quantitative }),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\thandlePredict = () => {\n\t\tlet { x, y, data, quantitative, intercept, success } = this.props;\n\t\tif ( !isArray( x ) ) {\n\t\t\tx = [ x ];\n\t\t}\n\t\tconst { matrix, yvalues } = designMatrix( x, y, data, quantitative, intercept, success );\n\t\tconst probs = this.state.result.predict( matrix );\n\t\tconst resid = subtract( probs, yvalues );\n\t\tconst yhat = probs.map( x => x > this.state.probabilityThreshold );\n\t\tthis.props.onPredict( yhat, probs, resid, COUNTER );\n\t}\n\n\trender() {\n\t\tconst { result } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !result ) {\n\t\t\treturn <Alert variant=\"danger\">{t('missing-attributes')}</Alert>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ overflowX: 'auto', width: '100%' }}>\n\t\t\t\t<span className=\"title\" >{t('logistic-title', { y: this.props.y, counter: COUNTER })}</span>\n\t\t\t\t{summaryTable( this.state.predictors, this.props.intercept, result, this.props.t )}\n\t\t\t\t<i>{result.converged ? t('fisher-scoring-converged', { n: result.iterations }) : t('fisher-scoring-not-converged', { n: result.iterations })}</i>\n\t\t\t\t<p>{t('aic')}: {roundn( result.aic, -3 )}</p>\n\t\t\t\t{this.props.onPredict ? <ButtonGroup>\n\t\t\t\t\t<Tooltip tooltip={t('use-model-to-predict-tooltip-logistic')} >\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\" onClick={this.handlePredict} >\n\t\t\t\t\t\t\t{this.props.t('use-model-to-predict')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<InputGroup size=\"sm\" >\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<InputGroup.Text>{t('threshold')}:</InputGroup.Text>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tdefaultValue={0.5}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tonChange={( event ) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tprobabilityThreshold: event.target.value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</ButtonGroup> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nLogisticRegression.defaultProps = {\n\tomitMissing: false,\n\tintercept: true,\n\tonPredict: null\n};\n\nLogisticRegression.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\ty: PropTypes.string.isRequired,\n\tsuccess: PropTypes.any.isRequired,\n\tx: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf( PropTypes.string ),\n\t\tPropTypes.string\n\t]).isRequired,\n\tquantitative: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tomitMissing: PropTypes.bool,\n\tintercept: PropTypes.bool,\n\tonPredict: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'StatisticalModels' )( LogisticRegression );\n","// MODULES //\n\nimport isArrayLike from '@stdlib/assert/is-array-like';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n\n\n// MAIN //\n\n/**\n* Computes an element-wise subtraction.\n*\n* @param {NumberArray} arr - input array\n* @param {(NumberArray|number)} x - either an array of equal length or a scalar\n* @returns {NumberArray} output array\n*/\nfunction subtract( arr, x ) {\n\tconst isArr = isArrayLike( x );\n\tif ( !isArrayLike( arr ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must either be an array or number primitive. Value: `' + x + '`.' );\n\t}\n\tconst len = arr.length;\n\tconst out = new Array( len );\n\n\t// Case 1: x is an array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'invalid input argument. Array to be added must have a length equal to that of the input array.' );\n\t\t}\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x[ i ];\n\t\t}\n\t}\n\t// Case 2: scalar\n\telse {\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default subtract;\n","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AbstractMatrix } from '../matrix';\n\nvar WrapperMatrix2D = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(WrapperMatrix2D, _AbstractMatrix);\n\n  var _super = _createSuper(WrapperMatrix2D);\n\n  function WrapperMatrix2D(data) {\n    var _this;\n\n    _classCallCheck(this, WrapperMatrix2D);\n\n    _this = _super.call(this);\n    _this.data = data;\n    _this.rows = data.length;\n    _this.columns = data[0].length;\n    return _this;\n  }\n\n  _createClass(WrapperMatrix2D, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.data[rowIndex][columnIndex] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.data[rowIndex][columnIndex];\n    }\n  }]);\n\n  return WrapperMatrix2D;\n}(AbstractMatrix);\n\nexport { WrapperMatrix2D as default };"],"sourceRoot":""}