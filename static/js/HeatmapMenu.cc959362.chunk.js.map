{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/heatmap.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/slider/main.js","../node_modules/@isle-project/components/input/slider/index.js"],"names":["HeatMapMenu","props","variables","groupingVariables","defaultX","defaultY","t","useState","x","setX","y","setY","group","setGroup","overlayPoints","setOverlayPoints","commonXAxis","setCommonXAxis","commonYAxis","setCommonYAxis","alternateColor","setAlternateColor","regressionMethod","setRegressionMethod","smoothSpan","setSmoothSpan","as","title","content","legend","defaultValue","options","onChange","clearable","menuPlacement","disabled","style","opacity","float","multi","value","isArray","contains","min","max","step","variant","block","onClick","plotId","randomstring","action","output","id","data","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_HEATMAP","onSelected","DATA_EXPLORER_HEATMAP","onCreated","defaultProps","popover","trigger","placement","rootClose","overlay","size","className","uid","generateUID","CheckboxInput","bind","useRef","useContext","SessionContext","state","setValue","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","aria-label","tooltip","inline","tooltipPlacement","current","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop","debug","logger","SliderInput","hideTooltip","precision","minLabel","maxLabel","numberInputStyle","rangeInputStyle","useTranslation","roundedValue","finishChange","parseFloat","handleInputChange","valid","validity","PINF","NINF","roundn","rangeInput","display","numberInput","name","onBlur","marginTop","autoComplete","padding","Badge","show"],"mappings":"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","file":"static/js/HeatmapMenu.cc959362.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport HeatMap from '@isle-project/components/plots/heatmap';\nimport { DATA_EXPLORER_SHARE_HEATMAP, DATA_EXPLORER_HEATMAP } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst HeatMapMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ x, setX ] = useState( defaultX || variables[ 0 ] );\n\tconst [ y, setY ] = useState( defaultY || variables[ 1 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ overlayPoints, setOverlayPoints ] = useState( false );\n\tconst [ commonXAxis, setCommonXAxis ] = useState( false );\n\tconst [ commonYAxis, setCommonYAxis ] = useState( false );\n\tconst [ alternateColor, setAlternateColor ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState( [] );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\n\tconst generateHeatmap = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tx, y, overlayPoints, regressionMethod, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HEATMAP, action );\n\t\t};\n\t\tconst output = <HeatMap id={plotId} data={props.data} x={x} y={y} group={group}\n\t\t\toverlayPoints={overlayPoints} commonXAxis={commonXAxis} commonYAxis={commonYAxis}\n\t\t\talternateColor={alternateColor} regressionMethod={regressionMethod}\n\t\t\tsmoothSpan={smoothSpan} action={action} onShare={onShare} onSelected={props.onSelected} />;\n\t\tprops.logAction( DATA_EXPLORER_HEATMAP, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Heat Map')}\n\t\t\t\t<QuestionButton title={t('Heat Map')} content={t('Heat Map-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><SelectInput\n\t\t\t\t\t\tlegend={t('x-axis-variable')}\n\t\t\t\t\t\tdefaultValue={x}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setX}\n\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col><SelectInput\n\t\t\t\t\t\tlegend={t('y-axis-variable')}\n\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setY}\n\t\t\t\t\t/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-x-axis')}\n\t\t\t\t\t\t\tdefaultValue={commonXAxis}\n\t\t\t\t\t\t\tonChange={setCommonXAxis}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.0,\n\t\t\t\t\t\t\t\tfloat: 'left'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-y-axis')}\n\t\t\t\t\t\t\tdefaultValue={commonYAxis}\n\t\t\t\t\t\t\tonChange={setCommonYAxis}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.0,\n\t\t\t\t\t\t\t\tfloat: 'left'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('overlay-observations')}\n\t\t\t\t\t\t\tdefaultValue={overlayPoints}\n\t\t\t\t\t\t\tonChange={setOverlayPoints}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('alternate-color-scheme')}\n\t\t\t\t\t\t\tdefaultValue={alternateColor}\n\t\t\t\t\t\t\tonChange={setAlternateColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-regression-line')}\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains(regressionMethod, 'smooth')}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={smoothSpan}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Button variant=\"primary\" block onClick={generateHeatmap}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHeatMapMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {}\n};\n\nHeatMapMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tonSelected: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HeatMapMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport Badge from 'react-bootstrap/Badge';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nconst SliderInput = ( props ) => {\n\tconst { bind, defaultValue, legend, disabled, hideTooltip, inline, min, max, onChange, precision, step,\n\t\tminLabel, maxLabel, numberInputStyle, rangeInputStyle, style } = props;\n\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ] : defaultValue\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ]);\n\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if ( step === 1.0 && newValue !== '' ) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, max, min, step, value, onChange ] );\n\n\tconst handleInputChange = useCallback( ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tsetValue( newValue );\n\n\t\tif ( valid && newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, value, onChange ] );\n\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}:`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}:`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\tlet roundedValue;\n\tif ( value !== '' ) {\n\t\troundedValue = roundn( value, ( -1.0 )*precision );\n\t} else {\n\t\troundedValue = value;\n\t}\n\tconst rangeInput = <input\n\t\ttype=\"range\"\n\t\tclassName=\"slider-range-input\"\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tdisabled={disabled}\n\t\tonChange={handleInputChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t...rangeInputStyle\n\t\t}}\n\t/>;\n\tconst numberInput = <input\n\t\ttype=\"number\"\n\t\tname=\"input\"\n\t\tclassName=\"slider-number-input\"\n\t\tdisabled={disabled}\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tonChange={handleInputChange}\n\t\tonBlur={finishChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t...numberInputStyle\n\t\t}}\n\t\tautoComplete=\"off\"\n\t/>;\n\tif ( inline ) {\n\t\treturn (\n\t\t\t<span className=\"input\" style={{\n\t\t\t\tpadding: '5px',\n\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t...style\n\t\t\t}}>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t</span>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip\n\t\t\tid=\"sliderTooltip\"\n\t\t\tplacement=\"top\"\n\t\t\tshow={!hideTooltip}\n\t\t\ttooltip={disabled ? t('slider-disabled') : tooltip}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\tstyle={{\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...style\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<br />\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}