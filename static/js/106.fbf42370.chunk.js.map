{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/histogram.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["debug","logger","HistogramMenu","props","useState","displayDensity","setDisplayDensity","densityType","setDensityType","bandwidthAdjust","setBandwidthAdjust","defaultValue","variables","variable","setVariable","group","setGroup","groupMode","setGroupMode","nCols","setNCols","nBins","setNBins","start","size","end","xBins","setXBins","binStrategy","setBinStrategy","groupingVariables","t","Header","as","title","content","Body","legend","options","onChange","md","clearable","min","style","marginTop","inputStyle","width","marginLeft","inline","val","newXBins","step","showDensityOption","disabled","menuPlacement","variant","block","onClick","plotId","randomstring","state","action","output","data","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_HISTOGRAM","DATA_EXPLORER_HISTOGRAM","onCreated","defaultProps","onSelected","QuestionButton","popover","trigger","placement","rootClose","overlay","className","createTooltip","tooltip","max","PINF","NINF","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","updateValue","this","globalVal","input","type","handleChange","aria-label","tooltipPlacement","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","CreateTooltip","NumberInput","uid","generateUID","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","isString","number"],"mappings":"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","file":"static/js/106.fbf42370.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Histogram from '@isle-project/components/plots/histogram';\nimport { DATA_EXPLORER_SHARE_HISTOGRAM, DATA_EXPLORER_HISTOGRAM } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:histogram' );\n\n\n// MAIN //\n\nconst HistogramMenu = ( props ) => {\n\tconst [ displayDensity, setDisplayDensity ] = useState( false );\n\tconst [ densityType, setDensityType ] = useState( null );\n\tconst [ bandwidthAdjust, setBandwidthAdjust ] = useState( 1 );\n\tconst [ variable, setVariable ] = useState( props.defaultValue || props.variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ groupMode, setGroupMode ] = useState( 'Overlay' );\n\tconst [ nCols, setNCols ] = useState( 2 );\n\tconst [ nBins, setNBins ] = useState( 10 );\n\tconst [ xBins, setXBins ] = useState({\n\t\tstart: null,\n\t\tsize: 100,\n\t\tend: null\n\t});\n\tconst [ binStrategy, setBinStrategy ] = useState( 'Automatic' );\n\tconst { variables, groupingVariables, t } = props;\n\n\tconst generateHistogram = () => {\n\t\tdebug( `Generate a histogram with ${nBins} bins` );\n\t\tconst plotId = randomstring( 6 );\n\t\tconst state = {\n\t\t\tvariable,\n\t\t\tgroup,\n\t\t\tgroupMode,\n\t\t\tdisplayDensity,\n\t\t\tdensityType,\n\t\t\tbinStrategy\n\t\t};\n\t\tif ( binStrategy === 'Select # of bins' ) {\n\t\t\tstate.nBins = nBins;\n\t\t} else if ( binStrategy === 'Set bin width' ) {\n\t\t\tstate.xBins = xBins;\n\t\t}\n\t\tif ( groupMode === 'Facets' ) {\n\t\t\tstate.nCols = nCols;\n\t\t}\n\t\tif ( densityType === 'Data-driven' ) {\n\t\t\tstate.bandwidthAdjust = bandwidthAdjust;\n\t\t}\n\t\tconst action = { ...state, plotId };\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: props.t('plot-shared'),\n\t\t\t\tmessage: props.t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HISTOGRAM, action );\n\t\t};\n\t\tconst output = <Histogram data={props.data} {...state} id={plotId} action={action} onShare={onShare} />;\n\t\tprops.logAction( DATA_EXPLORER_HISTOGRAM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Histogram')}\n\t\t\t\t<QuestionButton title={t('Histogram')} content={t('Histogram-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5} >\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={4} >\n\t\t\t\t\t\t{ group ? <SelectInput\n\t\t\t\t\t\t\tlegend=\"Mode:\"\n\t\t\t\t\t\t\tdefaultValue={groupMode}\n\t\t\t\t\t\t\toptions={[ 'Overlay', 'Facets' ]}\n\t\t\t\t\t\t\tonChange={setGroupMode}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={3} >\n\t\t\t\t\t\t{ group && groupMode === 'Facets' ? <NumberInput\n\t\t\t\t\t\t\tlegend=\"Columns\"\n\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tonChange={setNCols}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 0\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\twidth: 70,\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tmarginTop: 2\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<div>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('binning-strategy')}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t'Automatic',\n\t\t\t\t\t\t\t'Select # of bins',\n\t\t\t\t\t\t\t'Set bin width'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdefaultValue={binStrategy}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tonChange={setBinStrategy}\n\t\t\t\t\t/>\n\t\t\t\t\t{ binStrategy !== 'Automatic' ?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"Start\"\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.start}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.start = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ binStrategy === 'Select # of bins' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend=\"Bins\"\n\t\t\t\t\t\t\t\t\tdefaultValue={nBins}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tonChange={setNBins}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ binStrategy === 'Set bin width' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend=\"Size\"\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tdefaultValue={xBins.size}\n\t\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\t\tnewXBins.size = val;\n\t\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"End\"\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.end}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.end = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div> : null }\n\t\t\t\t</div>\n\t\t\t\t{ props.showDensityOption ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('display-density')}\n\t\t\t\t\t\t\tdefaultValue={displayDensity}\n\t\t\t\t\t\t\tonChange={setDisplayDensity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-density-line')}\n\t\t\t\t\t\t\toptions={[ 'Data-driven', 'Normal', 'Uniform', 'Exponential' ]}\n\t\t\t\t\t\t\tdisabled={!displayDensity}\n\t\t\t\t\t\t\tdefaultValue={densityType}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDensityType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{densityType === 'Data-driven' ?\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"Bandwidth adjustment\"\n\t\t\t\t\t\t\t\tdefaultValue={bandwidthAdjust}\n\t\t\t\t\t\t\t\tmin={0} step={0.1}\n\t\t\t\t\t\t\t\tonChange={setBandwidthAdjust}\n\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div> : null }\n\t\t\t\t<Button variant=\"primary\" block onClick={generateHistogram}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHistogramMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tshowDensityOption: true,\n\tonSelected() {}\n};\n\nHistogramMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDensityOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HistogramMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}