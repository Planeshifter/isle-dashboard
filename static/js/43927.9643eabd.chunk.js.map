{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/histogram.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["debug","logger","HistogramMenu","props","useState","displayDensity","setDisplayDensity","densityType","setDensityType","bandwidthAdjust","setBandwidthAdjust","defaultValue","variables","variable","setVariable","group","setGroup","groupMode","setGroupMode","nCols","setNCols","nBins","setNBins","start","size","end","xBins","setXBins","binStrategy","setBinStrategy","groupingVariables","t","as","title","content","legend","options","onChange","md","clearable","min","style","marginTop","inputStyle","width","marginLeft","inline","val","newXBins","step","showDensityOption","disabled","menuPlacement","variant","block","onClick","plotId","randomstring","state","action","output","data","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_HISTOGRAM","DATA_EXPLORER_HISTOGRAM","onCreated","defaultProps","onSelected","popover","trigger","placement","rootClose","overlay","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","updateValue","this","globalVal","input","type","handleChange","aria-label","tooltip","tooltipPlacement","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","max","PINF","NINF","uid","generateUID","NumberInput","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","createTooltip","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","isString"],"mappings":"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","file":"static/js/43927.9643eabd.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Histogram from '@isle-project/components/plots/histogram';\nimport { DATA_EXPLORER_SHARE_HISTOGRAM, DATA_EXPLORER_HISTOGRAM } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:histogram' );\n\n\n// MAIN //\n\nconst HistogramMenu = ( props ) => {\n\tconst [ displayDensity, setDisplayDensity ] = useState( false );\n\tconst [ densityType, setDensityType ] = useState( null );\n\tconst [ bandwidthAdjust, setBandwidthAdjust ] = useState( 1 );\n\tconst [ variable, setVariable ] = useState( props.defaultValue || props.variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ groupMode, setGroupMode ] = useState( 'Overlay' );\n\tconst [ nCols, setNCols ] = useState( 2 );\n\tconst [ nBins, setNBins ] = useState( 10 );\n\tconst [ xBins, setXBins ] = useState({\n\t\tstart: null,\n\t\tsize: 100,\n\t\tend: null\n\t});\n\tconst [ binStrategy, setBinStrategy ] = useState( 'Automatic' );\n\tconst { variables, groupingVariables, t } = props;\n\n\tconst generateHistogram = () => {\n\t\tdebug( `Generate a histogram with ${nBins} bins` );\n\t\tconst plotId = randomstring( 6 );\n\t\tconst state = {\n\t\t\tvariable,\n\t\t\tgroup,\n\t\t\tgroupMode,\n\t\t\tdisplayDensity,\n\t\t\tdensityType,\n\t\t\tbinStrategy\n\t\t};\n\t\tif ( binStrategy === 'Select # of bins' ) {\n\t\t\tstate.nBins = nBins;\n\t\t} else if ( binStrategy === 'Set bin width' ) {\n\t\t\tstate.xBins = xBins;\n\t\t}\n\t\tif ( groupMode === 'Facets' ) {\n\t\t\tstate.nCols = nCols;\n\t\t}\n\t\tif ( densityType === 'Data-driven' ) {\n\t\t\tstate.bandwidthAdjust = bandwidthAdjust;\n\t\t}\n\t\tconst action = { ...state, plotId };\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: props.t('plot-shared'),\n\t\t\t\tmessage: props.t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HISTOGRAM, action );\n\t\t};\n\t\tconst output = <Histogram data={props.data} {...state} id={plotId} action={action} onShare={onShare} />;\n\t\tprops.logAction( DATA_EXPLORER_HISTOGRAM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Histogram')}\n\t\t\t\t<QuestionButton title={t('Histogram')} content={t('Histogram-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5} >\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={4} >\n\t\t\t\t\t\t{ group ? <SelectInput\n\t\t\t\t\t\t\tlegend=\"Mode:\"\n\t\t\t\t\t\t\tdefaultValue={groupMode}\n\t\t\t\t\t\t\toptions={[ 'Overlay', 'Facets' ]}\n\t\t\t\t\t\t\tonChange={setGroupMode}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={3} >\n\t\t\t\t\t\t{ group && groupMode === 'Facets' ? <NumberInput\n\t\t\t\t\t\t\tlegend=\"Columns\"\n\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tonChange={setNCols}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 0\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\twidth: 70,\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tmarginTop: 2\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<div>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('binning-strategy')}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t'Automatic',\n\t\t\t\t\t\t\t'Select # of bins',\n\t\t\t\t\t\t\t'Set bin width'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdefaultValue={binStrategy}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tonChange={setBinStrategy}\n\t\t\t\t\t/>\n\t\t\t\t\t{ binStrategy !== 'Automatic' ?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"Start\"\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.start}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.start = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ binStrategy === 'Select # of bins' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend=\"Bins\"\n\t\t\t\t\t\t\t\t\tdefaultValue={nBins}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tonChange={setNBins}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ binStrategy === 'Set bin width' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend=\"Size\"\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tdefaultValue={xBins.size}\n\t\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\t\tnewXBins.size = val;\n\t\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"End\"\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.end}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.end = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div> : null }\n\t\t\t\t</div>\n\t\t\t\t{ props.showDensityOption ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('display-density')}\n\t\t\t\t\t\t\tdefaultValue={displayDensity}\n\t\t\t\t\t\t\tonChange={setDisplayDensity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-density-line')}\n\t\t\t\t\t\t\toptions={[ 'Data-driven', 'Normal', 'Uniform', 'Exponential' ]}\n\t\t\t\t\t\t\tdisabled={!displayDensity}\n\t\t\t\t\t\t\tdefaultValue={densityType}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDensityType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{densityType === 'Data-driven' ?\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend=\"Bandwidth adjustment\"\n\t\t\t\t\t\t\t\tdefaultValue={bandwidthAdjust}\n\t\t\t\t\t\t\t\tmin={0} step={0.1}\n\t\t\t\t\t\t\t\tonChange={setBandwidthAdjust}\n\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div> : null }\n\t\t\t\t<Button variant=\"primary\" block onClick={generateHistogram}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHistogramMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tshowDensityOption: true,\n\tonSelected() {}\n};\n\nHistogramMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDensityOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HistogramMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}