{"version":3,"sources":["../node_modules/@isle-project/components/text-editor/pdf_modal.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js"],"names":["DEFAULT_STATE","openPDF","pageSize","customSize","showPageOptions","pageOptionConfig","customWidth","customHeight","useString","pageOrientation","visibleWidth","visibleHeight","SaveModal","props","state","setState","config","pageDims","width","pageSizes","height","pageOptionOrientation","exportPDF","onHide","Modal","this","clickHide","show","id","Header","closeButton","Title","t","Body","Card","border","Row","className","legend","defaultValue","options","onChange","value","min","max","step","Col","xs","md","oldWidth","oldHeight","Button","onClick","savePDF","block","Component","defaultProps","createTooltip","tooltip","PINF","NINF","CreateTooltip","NumberInput","debug","logger","uid","generateUID","context","event","valid","target","validity","parseFloat","isnan","bind","global","lesson","contains","vals","split","onBlur","session","prevProps","globalVal","isNumber","inline","input","style","padding","htmlFor","type","numbersOnly","name","disabled","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","placement","marginBottom","marginTop","isString","tooltipPlacement","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","number","bool","oneOfType","node","func","object","oneOf","contextType","SessionContext"],"mappings":"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","file":"static/js/114.975a53e4.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport pageSizes from './page_sizes.json';\nimport './pdf_modal.css';\n\n\n// VARIABLES //\n\nconst DEFAULT_STATE = {\n\topenPDF: false,\n\tpageSize: 'LETTER',\n\tcustomSize: true,\n\tshowPageOptions: false,\n\tpageOptionConfig: 'Predefined',\n\tcustomWidth: 8.5 * 72,\n\tcustomHeight: 11 * 72,\n\tuseString: true,\n\tpageOrientation: 'portrait',\n\tvisibleWidth: 8.5,\n\tvisibleHeight: 11\n};\n\n\n// MAIN //\n\nclass SaveModal extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\ttogglePDFMenu = () => {\n\t\tif ( this.state.openPDF && this.state.showPageOptions ) {\n\t\t\tthis.setState({\n\t\t\t\topenPDF: !this.state.openPDF,\n\t\t\t\tshowPageOptions: !this.state.showPageOptions\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\topenPDF: !this.state.openPDF\n\t\t\t});\n\t\t}\n\t}\n\n\tsavePDF = () => {\n\t\tconst config = {};\n\t\tconst pageDims = {};\n\t\tif ( this.state.useString ) {\n\t\t\t// If we use the string make page dimension the string:\n\t\t\tpageDims.width = 72 * pageSizes[this.state.pageSize].width;\n\t\t\tpageDims.height = 72 * pageSizes[this.state.pageSize].height;\n\t\t}\n\t\tif ( !this.state.useString || this.state.pageSize === 'POSTER' ) {\n\t\t\tif ( this.state.pageOptionOrientation === 'landscape' ) {\n\t\t\t\tpageDims.height = this.state.customWidth;\n\t\t\t\tpageDims.width = this.state.customHeight;\n\t\t\t} else {\n\t\t\t\tpageDims.height = this.state.customHeight;\n\t\t\t\tpageDims.width = this.state.customWidth;\n\t\t\t}\n\t\t}\n\t\tconfig.pageSize = pageDims;\n\t\tconfig.pageOrientation = this.state.pageOrientation;\n\t\tthis.props.exportPDF( config );\n\t}\n\n\tclickHide = () => {\n\t\tthis.setState( DEFAULT_STATE );\n\t\tthis.props.onHide();\n\t}\n\n\trender() {\n\t\treturn ( <Modal\n\t\t\tonHide={this.clickHide}\n\t\t\tshow={this.props.show}\n\t\t\tid=\"save-modal\"\n\t\t>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>{this.props.t('pdf-modal-title')}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Card border=\"primary\" id=\"export-pdf-panel\" >\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Row className=\"predefined-letter-button\">\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-predefined-value')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.pageSize}\n\t\t\t\t\t\t\t\toptions={['LETTER', 'LEGAL', 'A4', 'B5', 'TABLOID', 'EXECUTIVE', 'POSTER', 'CUSTOM']}\n\t\t\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\t\t\tif ( value !== 'CUSTOM' ) {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tpageSize: value,\n\t\t\t\t\t\t\t\t\t\t\tuseString: true,\n\t\t\t\t\t\t\t\t\t\t\tvisibleHeight: pageSizes[value].height,\n\t\t\t\t\t\t\t\t\t\t\tvisibleWidth: pageSizes[value].width,\n\t\t\t\t\t\t\t\t\t\t\tcustomHeight: pageSizes[value].height * 72,\n\t\t\t\t\t\t\t\t\t\t\tcustomWidth: pageSizes[value].width * 72,\n\t\t\t\t\t\t\t\t\t\t\tpageOrientation: 'portrait'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tpageSize: value,\n\t\t\t\t\t\t\t\t\t\t\tuseString: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"dimension-select\">\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-width')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.visibleWidth}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\tonChange={( value ) =>{\n\t\t\t\t\t\t\t\t\t// Make it custom if changed\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tpageSize: 'CUSTOM',\n\t\t\t\t\t\t\t\t\t\tcustomWidth: 72 * value,\n\t\t\t\t\t\t\t\t\t\tuseString: false,\n\t\t\t\t\t\t\t\t\t\tvisibleWidth: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-height')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.visibleHeight}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\tonChange={( value ) =>{\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tpageSize: 'CUSTOM',\n\t\t\t\t\t\t\t\t\t\tcustomHeight: 72 * value,\n\t\t\t\t\t\t\t\t\t\tuseString: false,\n\t\t\t\t\t\t\t\t\t\tvisibleHeight: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"showDimensions\">\n\t\t\t\t\t\t\t<Col xs={6} md={6}>\n\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\tlegend={this.props.t('orientation')}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.pageOrientation}\n\t\t\t\t\t\t\t\t\toptions={['portrait', 'landscape']}\n\t\t\t\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\t\t\t\tif ( value !== this.state.pageOrientation ) {\n\t\t\t\t\t\t\t\t\t\t\tconst oldWidth = this.state.visibleWidth;\n\t\t\t\t\t\t\t\t\t\t\tconst oldHeight = this.state.visibleHeight;\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tpageOrientation: value,\n\t\t\t\t\t\t\t\t\t\t\t\tvisibleWidth: oldHeight,\n\t\t\t\t\t\t\t\t\t\t\t\tvisibleHeight: oldWidth,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomWidth: 72 * oldHeight,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomHeight: 72 * oldWidth\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Button onClick={this.savePDF} block>{this.props.t('save')}</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</Modal.Body>\n\t\t</Modal> );\n\t}\n}\n\n\n// PROPERTIES //\n\nSaveModal.propTypes = {\n\texportPDF: PropTypes.func,\n\tonHide: PropTypes.func,\n\tshow: PropTypes.bool.isRequired\n};\n\nSaveModal.defaultProps = {\n\texportPDF() {},\n\tonHide() {}\n};\n\n\n// EXPORTS //\n\nexport default SaveModal;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n"],"sourceRoot":""}