{"version":3,"sources":["../node_modules/@isle-project/components/node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/@isle-project/components/text-editor/guides/index.js"],"names":["ButtonToolbar","React","_ref","ref","bsPrefix","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","role","debug","logger","Guides","onHide","state","running","setState","event","selected","target","value","for","createSteps","this","editorNode","document","getElementById","prevProps","saving","x","idx","out","content","t","overview","poster","Card","body","Button","variant","onClick","handleStartClick","Form","FormGroup","type","label","name","onChange","handleOptionChange","checked","guidePanel","renderCancelPanel","renderSelectionPanel","leftColumn","Col","sm","style","marginBottom","rightColumn","Modal","clickHide","show","dialogClassName","closeButton","as","Container","Row","modal","renderModal","Fragment","steps","showProgress","disableScrolling","run","parentNode","callback","tour","EVENTS","continuous","Component"],"mappings":"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","file":"static/js/61776.cdd2b112.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Joyride, { EVENTS } from '@isle-project/components/joyride';\nimport overview from './overview.json';\nimport poster from './poster.json';\nimport saving from './saving.json';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:text-editor:guides' );\n\n\n// MAIN //\n\nclass Guides extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tselected: 'overview',\n\t\t\trunning: false\n\t\t};\n\t\tdebug( `Creating guides modal for \"${this.props.for}\" text editor` );\n\t\tthis.createSteps( props );\n\t}\n\n\tcomponentDidMount() {\n\t\tdebug( `Rendering guides modal for \"${this.props.for}\" text editor` );\n\t\tthis.editorNode = document.getElementById( this.props.for );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.for !== prevProps.for ) {\n\t\t\tthis.createSteps( this.props );\n\t\t\tthis.editorNode = document.getElementById( this.props.for );\n\t\t}\n\t}\n\n\tcreateSteps( props ) {\n\t\tthis.saving = saving.map( ( x, idx ) => {\n\t\t\tconst out = { ...x };\n\t\t\tout.content = props.t( `saving-${idx}` );\n\t\t\tout.target = `#${props.for} ` + out.target;\n\t\t\treturn out;\n\t\t});\n\t\tthis.overview = overview.map( ( x, idx ) => {\n\t\t\tconst out = { ...x };\n\t\t\tout.content = props.t( `overview-${idx}` );\n\t\t\tout.target = `#${props.for} ` + out.target;\n\t\t\treturn out;\n\t\t});\n\t\tthis.poster = poster.map( ( x, idx ) => {\n\t\t\tconst out = { ...x };\n\t\t\tout.content = props.t( `poster-${idx}` );\n\t\t\tout.target = `#${props.for} ` + out.target;\n\t\t\treturn out;\n\t\t});\n\t}\n\n\tclickHide = () => {\n\t\tthis.props.onHide();\n\t}\n\n\thandleStartClick = () => {\n\t\tdebug( `${this.state.running ? 'Stopping' : 'Starting'} the selected tour...` );\n\t\tthis.props.onHide();\n\t\tthis.setState({\n\t\t\trunning: !this.state.running\n\t\t});\n\t}\n\n\thandleOptionChange = ( event ) => {\n\t\tthis.setState({\n\t\t\tselected: event.target.value\n\t\t});\n\t}\n\n\trenderCancelPanel() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Card body>\n\t\t\t\t<span className=\"title\">{t('cancel-tour')}</span>\n\t\t\t\t<p>\n\t\t\t\t\t{t('cancel-tour-msg')}\n\t\t\t\t</p>\n\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t<Button variant=\"warning\" onClick={this.handleStartClick} >{t('cancel')}</Button>\n\t\t\t\t</ButtonToolbar>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\trenderSelectionPanel() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Card body>\n\t\t\t\t<span className=\"title\">{t('select-tour')}</span>\n\t\t\t\t<Form>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tlabel={t('editor-overview')}\n\t\t\t\t\t\t\tname=\"overview\"\n\t\t\t\t\t\t\tvalue=\"overview\"\n\t\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\t\tchecked={this.state.selected === 'overview'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tlabel={t('saving-progress')}\n\t\t\t\t\t\t\tname=\"saving\"\n\t\t\t\t\t\t\tvalue=\"saving\"\n\t\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\t\tchecked={this.state.selected === 'saving'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tlabel={t('creating-poster')}\n\t\t\t\t\t\t\tname=\"poster\"\n\t\t\t\t\t\t\tvalue=\"poster\"\n\t\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\t\tchecked={this.state.selected === 'poster'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t<Button variant=\"success\" onClick={this.handleStartClick} >\n\t\t\t\t\t\t{t('start-tour')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonToolbar>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\trenderModal() {\n\t\t/* eslint-disable i18next/no-literal-string */\n\t\tlet guidePanel;\n\t\tif ( this.state.running ) {\n\t\t\tguidePanel = this.renderCancelPanel();\n\t\t} else {\n\t\t\tguidePanel = this.renderSelectionPanel();\n\t\t}\n\t\tconst { t } = this.props;\n\t\tconst leftColumn = <Col sm={5}>\n\t\t\t<h5>{t('headers')}</h5>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t\t# {t('large-header')}<br />\n\t\t\t\t\t## {t('medium-header')}<br />\n\t\t\t\t\t### {t('small-header')}\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h5>{t('emphasis')}</h5>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t\t<i>*{t('markup-italic')}*</i><br />\n\t\t\t\t\t<b>**{t('markup-bold')}**</b><br />\n\t\t\t\t\t<i>*We <b>**can**</b> combine them*</i><br />\n\t\t\t\t\t<u>++{t('markup-underlined')}++</u><br />\n\t\t\t\t\t<s>~~{t('markup-strikethrough')}~~</s><br />\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h5>{t('quotes')}</h5>\n\t\t\t<Card body >\n\t\t\t\t<pre>\n\t\t\t\t\t{t('george-box')}<br />\n\t\t\t\t\t&gt; {t('models-wrong')}<br />\n\t\t\t\t\t&gt; {t('models-useful')}\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t</Col>;\n\n\t\tconst rightColumn = <Col sm={7}>\n\t\t\t<h5>{t('lists')}</h5>\n\t\t\t<h6>{t('unordered')}</h6>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t* {t('item')} 1<br />\n\t\t\t\t* {t('item')} 2<br />\n\t\t\t\t&nbsp; &nbsp; * {t('item')} 2a<br />\n\t\t\t\t&nbsp; &nbsp; * {t('item')} 2b\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h6>{t('ordered')}</h6>\n\t\t\t<Card body>\n\t\t\t\t<pre>\n\t\t\t\t1. {t('item')} 1<br />\n\t\t\t\t2. {t('item')} 2<br />\n\t\t\t\t3. {t('item')} 3<br />\n\t\t\t\t&nbsp; &nbsp;3a. {t('item')} 3a<br />\n\t\t\t\t&nbsp; &nbsp;3b. {t('item')} 3b\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t</Col>;\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tonHide={this.clickHide}\n\t\t\t\tshow={this.props.show}\n\t\t\t\tdialogClassName=\"modal-90w\"\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title as=\"h4\">\n\t\t\t\t\t\t{t('editor-guide')}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<span className=\"title\">{t('markdown-cheatsheet')}</span>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t{leftColumn}\n\t\t\t\t\t\t\t\t\t{rightColumn}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t{guidePanel}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={this.clickHide} >{t('close')}</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t);\n\t\t/* eslint-enable i18next/no-literal-string */\n\t}\n\n\trender() {\n\t\tconst modal = this.renderModal();\n\t\tdebug( `Selected tutorial ${this.state.selected} is${this.state.running ? ' ' : ' not ' }running` );\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{modal}\n\t\t\t\t{ this.state.selected === 'saving' ?\n\t\t\t\t\t<Joyride\n\t\t\t\t\t\tsteps={this.saving}\n\t\t\t\t\t\tshowProgress\n\t\t\t\t\t\tdisableScrolling\n\t\t\t\t\t\trun={this.state.running}\n\t\t\t\t\t\tparentNode={this.editorNode}\n\t\t\t\t\t\tcallback={( tour ) => {\n\t\t\t\t\t\t\tconst type = tour.type;\n\t\t\t\t\t\t\tif ( type === EVENTS.TOUR_END ) {\n\t\t\t\t\t\t\t\tthis.setState({ running: false });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t\t{ this.state.selected === 'overview' ?\n\t\t\t\t\t<Joyride\n\t\t\t\t\t\tsteps={this.overview}\n\t\t\t\t\t\tshowProgress\n\t\t\t\t\t\tdisableScrolling\n\t\t\t\t\t\tcontinuous\n\t\t\t\t\t\trun={this.state.running}\n\t\t\t\t\t\tparentNode={this.editorNode}\n\t\t\t\t\t\tcallback={( tour ) => {\n\t\t\t\t\t\t\tconst type = tour.type;\n\t\t\t\t\t\t\tif ( type === EVENTS.TOUR_END ) {\n\t\t\t\t\t\t\t\tthis.setState({ running: false });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t\t{ this.state.selected === 'poster' ?\n\t\t\t\t\t<Joyride\n\t\t\t\t\t\tsteps={this.poster}\n\t\t\t\t\t\tshowProgress\n\t\t\t\t\t\tdisableScrolling\n\t\t\t\t\t\trun={this.state.running}\n\t\t\t\t\t\tparentNode={this.editorNode}\n\t\t\t\t\t\tcallback={( tour ) => {\n\t\t\t\t\t\t\tconst type = tour.type;\n\t\t\t\t\t\t\tif ( type === EVENTS.TOUR_END ) {\n\t\t\t\t\t\t\t\tthis.setState({ running: false });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nGuides.propTypes = {\n\tonHide: PropTypes.func,\n\tshow: PropTypes.bool.isRequired\n};\n\nGuides.defaultProps = {\n\tonHide() {}\n};\n\n\n// EXPORTS //\n\nexport default Guides;\n"],"sourceRoot":""}