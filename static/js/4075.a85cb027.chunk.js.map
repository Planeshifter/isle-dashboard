{"version":3,"sources":["../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/TabContext.js","../node_modules/react-bootstrap/esm/AbstractNav.js","../node_modules/react-bootstrap/esm/AbstractNavItem.js","../node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js"],"names":["useForceUpdate","useReducer","state","matchesImpl","matches","node","selector","body","document","nativeMatch","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","toArray","Function","prototype","bind","slice","qsa","element","querySelectorAll","_excluded","noop","_ref","ref","getControlledId","getControllerId","_ref$as","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","useRef","parentOnSelect","useContext","SelectableContext","tabContext","listNode","getNextActiveChild","offset","currentListNode","current","items","activeChild","querySelector","index","indexOf","nextIndex","length","handleSelect","key","event","useEffect","focus","mergedRef","useMergedRefs","value","NavContext","nextActiveChild","preventDefault","dataset","rbEventKey","AbstractNavItem","active","className","eventKey","onClick","navKey","href","navContext","isActive","contextControllerId","contextControlledId","id","disabled","tabIndex","handleOnclick","e","defaultProps","useGlobalListener","handler","capture","eventTarget","listener","useEventCallback","target","addEventListener","removeEventListener","useEventListener","useCallback","propTypes","children","drop","focusFirstItemOnShow","itemSelector","alignEnd","show","defaultShow","onToggle","useRefWithUpdate","attachRef","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","_useRefWithUpdate","menuRef","setMenu","menuElement","_useRefWithUpdate2","toggleRef","setToggle","toggleElement","lastShow","usePrevious","lastSourceEvent","focusInDropdown","toggle","nextShow","context","useMemo","contains","activeElement","focusToggle","maybeFocusFirst","type","focusType","test","first","getNextFocusedChild","Math","max","min","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","_next","once","stopPropagation","DropdownContext","displayName","Menu","DropdownMenu","Toggle","DropdownToggle","SafeAnchor","DropdownItem","bsPrefix","propActive","prefix","onSelectCtx","handleClick","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","alignRight","_useUncontrolled$as","navbar","handleToggle","source","currentTarget","Divider","Header","Item","ItemText","title","menuAlign","menuRole","renderMenuOnMount","rootCloseEvent","variant","size","DropdownButton","childBsPrefix","align","renderOnMount","alignDirection","alignPropType","sm","md","lg","xl","flip","showProps","popperConfig","isNavbar","_usePopperMarginModif","popperRef","marginModifiers","alignClasses","keys","Object","brkPoint","direction","push","_useDropdownMenu","usePopper","modifiers","concat","menuProps","_useDropdownMenu$","hasShown","popper","close","style","placement","split","undefined","toggleProps","makeEventKey","String","useWrappedRefWithWarning","componentName","useDropdownMenu","options","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","_options$fixed","fixed","_options$popperConfig","_options$usePopper","shouldUsePopper","enabled","enableEvents","attributes","styles","metadata","arrowProps","arrow","clickTrigger","_ref2","meta","useDropdownToggle","_ref$show","_ref$toggle","_useDropdownToggle"],"mappings":"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","file":"static/js/4075.a85cb027.chunk.js","sourcesContent":["import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import React from 'react';\nvar TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext'; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nvar noop = function noop() {};\n\nvar AbstractNav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'ul' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded); // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n\n\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveChild = function getNextActiveChild(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    if (onSelect) onSelect(key, event);\n    if (parentOnSelect) parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) onKeyDown(event);\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      if (activeChild) activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(NavContext.Provider, {\n    value: {\n      role: role,\n      // used by NavLink to determine it's role\n      activeKey: makeEventKey(activeKey),\n      getControlledId: getControlledId || noop,\n      getControllerId: getControllerId || noop\n    }\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    onKeyDown: handleKeyDown,\n    ref: mergedRef,\n    role: role\n  }))));\n});\nexport default AbstractNav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"className\", \"eventKey\", \"onSelect\", \"onClick\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\nvar AbstractNavItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      className = _ref.className,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      onClick = _ref.onClick,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var navKey = makeEventKey(eventKey, props.href);\n  var parentOnSelect = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n  var isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    var contextControllerId = navContext.getControllerId(navKey);\n    var contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, \"[react-bootstrap] The provided id '\" + props.id + \"' was overwritten by the current navContext with '\" + contextControllerId + \"'.\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], \"[react-bootstrap] The provided aria-controls value '\" + props['aria-controls'] + \"' was overwritten by the current navContext with '\" + contextControlledId + \"'.\") : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  var handleOnclick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (navKey == null) return;\n    if (onSelect) onSelect(navKey, e);\n    if (parentOnSelect) parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  }));\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\n\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\n\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          if (e.key === 'Tab' && !e.target || !menuRef.current.contains(e.target)) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\n\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\n\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;"],"sourceRoot":""}