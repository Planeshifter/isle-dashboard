{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/get_binary_vars.js","../node_modules/@isle-project/components/data-explorer/menu/proptest2.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["vars","data","out","i","length","vals","encountered","Set","j","v","isNull","isnan","add","size","push","PropTest2Menu","props","defaultCategories","categorical","showDecision","t","defaultVar1","isArray","values","extractCategoriesFromValues","useState","categories","setCategories","var1","setVar1","success","setSuccess","group","setGroup","var2","setVar2","diff","setDiff","direction","setDirection","alpha","setAlpha","binary","getBinaryVars","style","fontSize","as","title","content","md","legend","defaultValue","options","onChange","variable","newCategories","unique","clearable","value","filter","elem","contains","min","max","step","raw","variant","block","onClick","session","addNotification","message","level","position","var","output","logAction","DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST","onCreated","disabled","defaultProps","popover","id","trigger","placement","rootClose","overlay","className","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","context","event","valid","target","validity","setState","parseFloat","bind","global","lesson","split","onBlur","state","createTooltip","prevProps","this","globalVal","isNumber","inline","input","padding","htmlFor","type","numbersOnly","name","width","paddingLeft","marginLeft","inputStyle","handleChange","finishChange","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","tooltipPlacement","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext"],"mappings":"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","file":"static/js/35222.c66b84e5.chunk.js","sourcesContent":["// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isNull from '@stdlib/assert/is-null';\n\n\n// MAIN //\n\nfunction getBinaryVars( vars, data ) {\n\tconst out = [];\n\tfor ( let i = 0; i < vars.length; i++ ) {\n\t\tlet vals = data[ vars[ i ] ];\n\t\tif ( vals ) {\n\t\t\tconst encountered = new Set();\n\t\t\tfor ( let j = 0; j < vals.length; j++ ) {\n\t\t\t\tlet v = vals[ j ];\n\t\t\t\tif ( !isNull( v ) && !isnan( v ) && v !== '' ) {\n\t\t\t\t\tencountered.add( v );\n\t\t\t\t}\n\t\t\t\tif ( encountered.size > 2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( j === vals.length - 1 ) {\n\t\t\t\t\tout.push( vars[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getBinaryVars;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport unique from 'uniq';\nimport PropTest2 from '@isle-project/components/tests/proptest2';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport { DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\nimport getBinaryVars from './../get_binary_vars.js';\n\n\n// MAIN //\n\nconst PropTest2Menu = ( props ) => {\n\tconst { categorical, data, showDecision, t } = props;\n\n\tconst defaultVar1 = categorical[ 0 ];\n\tlet defaultCategories;\n\tif ( isArray( categorical ) && categorical.length > 0 ) {\n\t\tconst values = data[ defaultVar1 ];\n\t\tif ( values ) {\n\t\t\tdefaultCategories = extractCategoriesFromValues( values, defaultVar1 );\n\t\t} else {\n\t\t\tdefaultCategories = [];\n\t\t}\n\t} else {\n\t\tdefaultCategories = [];\n\t}\n\tconst [ categories, setCategories ] = useState( defaultCategories );\n\tconst [ var1, setVar1 ] = useState( defaultVar1 );\n\tconst [ success, setSuccess ] = useState( categories[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ var2, setVar2 ] = useState( null );\n\tconst [ diff, setDiff ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\n\tconst calculateTwoSamplePropTest = () => {\n\t\tif ( var1 === group || var1 === var2 ) {\n\t\t\treturn props.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('group-variable-must-be-different'),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tif ( !group && !var2 ) {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('select-grouping-or-second-variable', { var: var1 }),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <PropTest2\n\t\t\tdata={data} showDecision={showDecision}\n\t\t\tvar1={var1} var2={var2} group={group}\n\t\t\tdiff={diff} direction={direction} alpha={alpha} success={success}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST, {\n\t\t\tvar1, group, var2, success, diff, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst binary = getBinaryVars( categorical, data );\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Two-Sample Proportion Test')}\n\t\t\t\t<QuestionButton title={t('Two-Sample Proportion Test')} content={t('Two-Sample Proportion Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\t\t\tdefaultValue={categorical[ 0 ]}\n\t\t\t\t\t\t\toptions={categorical}\n\t\t\t\t\t\t\tonChange={( variable ) => {\n\t\t\t\t\t\t\t\tconst values = data[ variable ];\n\t\t\t\t\t\t\t\tconst newCategories = extractCategoriesFromValues( values, variable );\n\t\t\t\t\t\t\t\tunique( newCategories );\n\t\t\t\t\t\t\t\tsetVar1( variable );\n\t\t\t\t\t\t\t\tsetCategories( newCategories );\n\t\t\t\t\t\t\t\tsetSuccess( newCategories[ 0 ] );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('success')}\n\t\t\t\t\t\t\tdefaultValue={categories[ 0 ]}\n\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\tonChange={setSuccess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('groups')}\n\t\t\t\t\t\t\toptions={binary}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( value );\n\t\t\t\t\t\t\t\tsetVar2( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={2}><p>{t('or')}</p></Col>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('second-variable')}\n\t\t\t\t\t\t\toptions={categorical.filter( elem =>\n\t\t\t\t\t\t\t\tcontains( categories, elem )\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( null );\n\t\t\t\t\t\t\t\tsetVar2( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={t('difference-h0')}\n\t\t\t\t\tdefaultValue={diff}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={1}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setDiff}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t/>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\tmin={0.0}\n\t\t\t\t\tmax={1.0}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={calculateTwoSamplePropTest}\n\t\t\t\t\tdisabled={!var2 && !group}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nPropTest2Menu.defaultProps = {\n\tcategorical: null,\n\tlogAction() {},\n\tshowDecision: true\n};\n\nPropTest2Menu.propTypes = {\n\tcategorical: PropTypes.array,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default PropTest2Menu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}