{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/slider/index.js","../node_modules/@isle-project/components/input/slider/main.js"],"names":["ScatterplotMenu","props","variables","groupingVariables","defaultX","defaultY","t","useState","xval","setXval","yval","setYval","color","setColor","type","setType","size","setSize","text","setText","regressionLine","setRegressionLine","regressionMethod","setRegressionMethod","lineBy","setLineBy","smoothSpan","setSmoothSpan","style","minWidth","Header","as","title","content","Body","width","legend","defaultValue","options","float","paddingRight","onChange","paddingLeft","clearable","clear","opacity","showRegressionOption","inline","multi","disabled","value","isArray","contains","min","max","step","variant","block","onClick","plotId","randomstring","action","output","data","id","onSelected","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_SCATTERPLOT","DATA_EXPLORER_SCATTERPLOT","onCreated","defaultProps","QuestionButton","popover","trigger","placement","rootClose","overlay","className","CheckboxInput","context","newValue","setState","bind","global","lesson","event","target","checked","updateValue","state","this","globalVal","input","handleChange","aria-label","tooltip","tooltipPlacement","marginLeft","role","tabIndex","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","SliderInput","debug","logger","createTooltip","PINF","NINF","parseFloat","valid","validity","prevProps","precision","minLabel","maxLabel","roundn","rangeInput","handleInputChange","display","rangeInputStyle","numberInput","name","onBlur","finishChange","marginTop","numberInputStyle","autoComplete","padding","show","hideTooltip","number"],"mappings":"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","file":"static/js/109.307901c9.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport ScatterPlot from '@isle-project/components/plots/scatterplot';\nimport { DATA_EXPLORER_SHARE_SCATTERPLOT, DATA_EXPLORER_SCATTERPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ xval, setXval ] = useState( defaultX || variables[ 0 ] );\n\tconst [ yval, setYval ] = useState( defaultY || variables[ 1 ] );\n\tconst [ color, setColor ] = useState( null );\n\tconst [ type, setType ] = useState( null );\n\tconst [ size, setSize ] = useState( null );\n\tconst [ text, setText ] = useState( null );\n\tconst [ regressionLine, setRegressionLine ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState([ 'linear' ]);\n\tconst [ lineBy, setLineBy ] = useState( null );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\n\tconst generateScatterplot = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = { xval, yval, plotId };\n\t\tif ( color ) {\n\t\t\taction.color = color;\n\t\t}\n\t\tif ( type ) {\n\t\t\taction.type = type;\n\t\t}\n\t\tif ( size ) {\n\t\t\taction.size = size;\n\t\t}\n\t\tif ( text ) {\n\t\t\taction.text = text;\n\t\t}\n\t\tif ( regressionLine ) {\n\t\t\taction.regressionLine = regressionLine;\n\t\t\taction.regressionMethod = regressionMethod;\n\t\t}\n\t\tif ( contains( regressionMethod, 'smooth' ) ) {\n\t\t\taction.smoothSpan = smoothSpan;\n\t\t}\n\t\tif ( lineBy ) {\n\t\t\taction.lineBy = lineBy;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SCATTERPLOT, action );\n\t\t};\n\t\tconst output = <ScatterPlot\n\t\t\tdata={props.data}\n\t\t\txval={xval} yval={yval} color={color} type={type} size={size} text={text}\n\t\t\tregressionLine={regressionLine} regressionMethod={regressionMethod}\n\t\t\tlineBy={lineBy} smoothSpan={smoothSpan}\n\t\t\tid={plotId}\n\t\t\taction={action}\n\t\t\tonSelected={props.onSelected}\n\t\t\tonShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SCATTERPLOT, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card style={{ minWidth: 650 }} >\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot')}\n\t\t\t\t<QuestionButton title={t('Scatterplot')} content={t('Scatterplot-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('x-axis')}\n\t\t\t\t\t\tdefaultValue={xval}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setXval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\tdefaultValue={yval}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setYval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Labels:\"\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tonChange={setText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Color:\"\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setColor}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Type:\"\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setType}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Size:\"\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setSize}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<div style={{\n\t\t\t\t\topacity: props.showRegressionOption ? 1.0 : 0.0\n\t\t\t\t}}>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend=\"Show Regression Model\"\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetRegressionLine( !regressionLine );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend=\"Method:\"\n\t\t\t\t\t\t\tdefaultValue=\"linear\"\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend=\"Split By:\"\n\t\t\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={setLineBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains( regressionMethod, 'smooth' )}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={0.66}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<Button variant=\"primary\" block onClick={generateScatterplot}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {},\n\tshowRegressionOption: true\n};\n\nScatterplotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowRegressionOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Badge from 'react-bootstrap/Badge';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// FUNCTIONS //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}:`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}:`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\treturn tooltip;\n}\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nclass SliderInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\ttooltip: createTooltip( props ),\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t} else if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = createTooltip( nextProps );\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tconst { max, min, step } = this.props;\n\t\tlet value = event.target.value;\n\t\tif ( value !== '' ) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if ( step === 1.0 && value !== '' ) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( valid && value !== '' ) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tconst { legend, disabled, inline, min, max, precision, step, minLabel, maxLabel } = this.props;\n\t\tif ( value !== '' ) {\n\t\t\troundn( value, ( -1.0 )*precision );\n\t\t}\n\t\tconst rangeInput = <input\n\t\t\ttype=\"range\"\n\t\t\tclassName=\"slider-range-input\"\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tstyle={{\n\t\t\t\twidth: '160px',\n\t\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t\t...this.props.rangeInputStyle\n\t\t\t}}\n\t\t/>;\n\t\tconst numberInput = <input\n\t\t\ttype=\"number\"\n\t\t\tname=\"input\"\n\t\t\tclassName=\"slider-number-input\"\n\t\t\tdisabled={disabled}\n\t\t\tmin={min}\n\t\t\tmax={max}\n\t\t\tstep={step}\n\t\t\tvalue={value}\n\t\t\tonChange={this.handleInputChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tstyle={{\n\t\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t\t...this.props.numberInputStyle\n\t\t\t}}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\n\t\tif ( inline ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"input\" style={{\n\t\t\t\t\tpadding: '5px',\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Tooltip\n\t\t\t\tid=\"sliderTooltip\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tshow={!this.props.hideTooltip}\n\t\t\t\ttooltip={disabled ? 'The slider input is disabled right now.' : this.state.tooltip}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ legend ?\n\t\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t\t{rangeInput}\n\t\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t\t</span>\n\t\t\t\t\t{numberInput}\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\nSliderInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}