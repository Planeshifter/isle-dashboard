{"version":3,"sources":["components/complete-registration/index.js"],"names":["createTooltip","str","id","MsgModal","props","show","onHide","close","Header","Title","Body","message","Footer","onClick","t","CompleteRegistration","event","a","preventDefault","getPasswordValidationState","getNameValidationState","hash","window","location","substring","qs","queryString","parse","token","axios","post","server","newName","state","name","newPassword","password","res","setState","data","showModal","response","msg","status","showSubmitOverlay","overlayTarget","target","setTimeout","value","passwordRepeat","length","history","replace","this","placement","overlay","controlId","sm","type","placeholder","onChange","handleInputChange","isInvalid","Control","Feedback","enteredPasswords","validPasswords","maxLength","minLength","autoComplete","span","offset","className","style","opacity","as","renderName","renderPassword","variant","handleSubmit","disabled","containerPadding","title","Component","withRouter","withTranslation"],"mappings":"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","file":"static/js/153.77f7d530.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport server from 'constants/server.js';\nimport 'css/login.css';\n\n\n// FUNCTIONS //\n\nconst createTooltip = ( str ) => {\n\treturn <Tooltip id=\"tooltip\">{str}</Tooltip>;\n};\n\n\n// VARIABLES //\n\nconst MsgModal = ( props ) => (\n\t<Modal show={props.show} onHide={props.close} >\n\t\t<Modal.Header>\n\t\t\t<Modal.Title>Registration Completion</Modal.Title>\n\t\t</Modal.Header>\n\t\t<Modal.Body>\n\t\t\t{props.message}\n\t\t</Modal.Body>\n\t\t<Modal.Footer>\n\t\t\t<Button onClick={props.close}>\n\t\t\t\t{props.t('common:close')}\n\t\t\t</Button>\n\t\t</Modal.Footer>\n\t</Modal>\n);\n\nMsgModal.propTypes = {\n\tclose: PropTypes.func.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tshow: PropTypes.bool.isRequired\n};\n\n\n// MAIN //\n\nclass CompleteRegistration extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tpassword: '',\n\t\t\tpasswordRepeat: '',\n\t\t\tshowModal: false\n\t\t};\n\t}\n\n\thandleSubmit = async ( event ) => {\n\t\tevent.preventDefault();\n\t\tif ( this.getPasswordValidationState() && this.getNameValidationState() ) {\n\t\t\ttry {\n\t\t\t\tconst hash = window.location.hash.substring( 24 );\n\t\t\t\tconst qs = queryString.parse( hash );\n\t\t\t\tconst token = qs[ 'token' ];\n\t\t\t\tconst res = await axios.post( server+'/complete_registration', {\n\t\t\t\t\tid: token,\n\t\t\t\t\tnewName: this.state.name,\n\t\t\t\t\tnewPassword: this.state.password\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: res.data.message,\n\t\t\t\t\tshowModal: true\n\t\t\t\t});\n\t\t\t} catch ( err ) {\n\t\t\t\tlet msg;\n\t\t\t\tif ( err.response ) {\n\t\t\t\t\tmsg = 'Server response: ' + err.response.status + '.\\n';\n\t\t\t\t\tmsg += err.response.data;\n\t\t\t\t} else {\n\t\t\t\t\tmsg = err.message;\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: msg,\n\t\t\t\t\tshowModal: true\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tshowSubmitOverlay: true,\n\t\t\t\toverlayTarget: event.target\n\t\t\t}, () => {\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tshowSubmitOverlay: false\n\t\t\t\t\t});\n\t\t\t\t}, 4000 );\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\thandleInputChange = ( event ) => {\n\t\tconst target = event.target;\n\t\tconst value = target.value;\n\t\tconst name = target.name;\n\t\tthis.setState({\n\t\t\t[ name ]: value\n\t\t});\n\t}\n\n\tgetPasswordValidationState = () => {\n\t\tconst { password, passwordRepeat } = this.state;\n\t\tif ( password.length < 6 || passwordRepeat.length === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( password !== passwordRepeat ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclose = () => {\n\t\tthis.props.history.replace( '/' );\n\t}\n\n\tgetNameValidationState = () => {\n\t\treturn this.state.name.length > 3;\n\t}\n\n\trenderName() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<OverlayTrigger placement=\"right\" overlay={createTooltip( t('signup:name-tooltip') )}>\n\t\t\t\t<FormGroup\n\t\t\t\t\tcontrolId=\"form-name\"\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t<FormLabel>{t('common:name')}</FormLabel>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('signup:enter-name')}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tisInvalid={this.state.name && !this.getNameValidationState()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{t('signup:invalid-name')}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</FormGroup>\n\t\t\t</OverlayTrigger>\n\t\t);\n\t}\n\n\trenderPassword() {\n\t\tconst enteredPasswords = this.state.password || this.state.passwordRepeat;\n\t\tconst validPasswords = this.getPasswordValidationState();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<OverlayTrigger placement=\"right\" overlay={createTooltip( 'Please enter a new password with at least six characters' )}>\n\t\t\t\t\t<FormGroup\n\t\t\t\t\t\tcontrolId=\"form-password\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t<FormLabel>{this.props.t('common:password')}</FormLabel>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder={this.props.t('common:choose-new-password')}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\tmaxLength={30}\n\t\t\t\t\t\t\t\t\tminLength={6}\n\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\t\tisInvalid={enteredPasswords && !validPasswords}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\tPlease enter a new password with at least six characters.\n\t\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</OverlayTrigger>\n\t\t\t\t<FormGroup\n\t\t\t\t\tcontrolId=\"form-password-confirmation\"\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm={{ span: 9, offset: 3 }} >\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"passwordRepeat\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder={this.props.t('signup:confirm-password')}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tmaxLength={30}\n\t\t\t\t\t\t\t\tminLength={6}\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\tisInvalid={enteredPasswords && !validPasswords}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{this.props.t('signup:invalid-password')}\n\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</FormGroup>\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"login\">\n\t\t\t\t\t<Card style={{ opacity: 0.9 }}>\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<Card.Title as=\"h1\">\n\t\t\t\t\t\t\t\t<small>Complete Registration</small>\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t{this.renderName()}\n\t\t\t\t\t\t\t\t{this.renderPassword()}\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\tclassName=\"centered\"\n\t\t\t\t\t\t\t\t\t\tdisabled={!this.getNameValidationState() || !this.getPasswordValidationState()}\n\t\t\t\t\t\t\t\t\t>Confirm</Button>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t{ this.state.showModal ? <MsgModal\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\tclose={this.close}\n\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t\tt={this.props.t}\n\t\t\t\t/> : null }\n\t\t\t\t<Overlay\n\t\t\t\t\tshow={this.state.showSubmitOverlay}\n\t\t\t\t\ttarget={this.state.overlayTarget}\n\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\tcontainerPadding={20}\n\t\t\t\t>\n\t\t\t\t\t<Popover id=\"popover-contained\" title=\"Input fields are not valid\">\n\t\t\t\t\t\tPlease make sure that the passwords are valid and match each other before submitting.\n\t\t\t\t\t</Popover>\n\t\t\t\t</Overlay>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCompleteRegistration.propTypes = {\n\thistory: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default withRouter( withTranslation( [ 'common', 'signup' ] )( CompleteRegistration ) );\n"],"sourceRoot":""}