{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/logistic_regression.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js"],"names":["LogisticRegressionMenu","props","categories","y","success","state","x","intercept","omitMissing","output","data","quantitative","onPredict","yhat","probs","resid","counter","newData","copy","newQuantitative","slice","newCategorical","categorical","name","contains","push","onGenerate","logAction","DATA_EXPLORER_LOGISTIC_REGRESSION","onCreated","isArray","length","extractCategoriesFromValues","this","t","style","fontSize","maxWidth","Header","as","title","content","Body","md","legend","options","defaultValue","onChange","setState","value","multi","uniq","concat","closeMenuOnSelect","selectAllOption","disabled","variant","block","onClick","compute","Component","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","CheckboxInput","context","newValue","bind","global","lesson","event","target","checked","updateValue","session","globalVal","input","type","handleChange","aria-label","tooltip","inline","tooltipPlacement","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext"],"mappings":"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","file":"static/js/134.15645768.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniq from 'uniq';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport { DATA_EXPLORER_LOGISTIC_REGRESSION } from '@isle-project/constants/actions.js';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport LogisticRegression from '@isle-project/components/models/logistic-regression';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DESCRIPTION = 'Predict a categorical response variable using one or more explanatory variables.';\n\n\n// MAIN //\n\nclass LogisticRegressionMenu extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tlet categories;\n\t\tlet y;\n\t\tlet success;\n\t\tif ( isArray( props.categorical ) && props.categorical.length > 0 ) {\n\t\t\ty = props.categorical[ 0 ];\n\t\t\tcategories = extractCategoriesFromValues( props.data[ y ], y );\n\t\t\tsuccess = categories[ categories.length-1 ];\n\t\t} else {\n\t\t\tcategories = [];\n\t\t\tsuccess = null;\n\t\t}\n\t\tthis.state = {\n\t\t\tcategories,\n\t\t\ty,\n\t\t\tsuccess,\n\t\t\tx: props.quantitative[ 0 ],\n\t\t\tintercept: true,\n\t\t\tomitMissing: false\n\t\t};\n\t}\n\n\tcompute = () => {\n\t\tconst { y, success, x, intercept, omitMissing } = this.state;\n\t\tconst output = <LogisticRegression\n\t\t\tdata={this.props.data}\n\t\t\tx={x} y={y}\n\t\t\tsuccess={success}\n\t\t\tintercept={intercept}\n\t\t\tomitMissing={omitMissing}\n\t\t\tquantitative={this.props.quantitative}\n\t\t\tonPredict={( yhat, probs, resid, counter ) => {\n\t\t\t\tconst newData = copy( this.props.data, 1 );\n\t\t\t\tconst newQuantitative = this.props.quantitative.slice();\n\t\t\t\tconst newCategorical = this.props.categorical.slice();\n\t\t\t\tlet name = 'probs_logis' + counter;\n\t\t\t\tnewData[ name ] = probs;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'pred_logis' + counter;\n\t\t\t\tnewData[ name ] = yhat;\n\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'resid_logis' + counter;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tnewData[ name ] = resid;\n\t\t\t\tthis.props.onGenerate( newQuantitative, newCategorical, newData );\n\t\t\t}}\n\t\t/>;\n\t\tthis.props.logAction( DATA_EXPLORER_LOGISTIC_REGRESSION, {\n\t\t\ty, x, intercept\n\t\t});\n\t\tthis.props.onCreated( output );\n\t}\n\n\trender() {\n\t\tconst { categorical, quantitative, data, t } = this.props;\n\t\tconst { x, y, categories, success, intercept } = this.state;\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tstyle={{ fontSize: '14px', maxWidth: 500 }}\n\t\t\t>\n\t\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t\t{t('Logistic Regression')}\n\t\t\t\t\t<QuestionButton title={t('Logistic Regression')} content={DESCRIPTION} />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\t\t\t\t\toptions={categorical}\n\t\t\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\t\t\tonChange={( y ) => {\n\t\t\t\t\t\t\t\t\tconst categories = extractCategoriesFromValues( data[ y ], y );\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tcategories,\n\t\t\t\t\t\t\t\t\t\tsuccess: categories[ categories.length-1 ],\n\t\t\t\t\t\t\t\t\t\ty\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={`${t('success')} (Y = 1):`}\n\t\t\t\t\t\t\t\tdefaultValue={success}\n\t\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tsuccess: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('predictors-x')} multi\n\t\t\t\t\t\toptions={uniq( quantitative.concat( categorical ) )}\n\t\t\t\t\t\tdefaultValue={x || ''}\n\t\t\t\t\t\tonChange={( x ) => this.setState({ x })}\n\t\t\t\t\t\tcloseMenuOnSelect={false}\n\t\t\t\t\t\tselectAllOption\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('include-intercept')}\n\t\t\t\t\t\tdefaultValue={intercept}\n\t\t\t\t\t\tonChange={( intercept ) => this.setState({ intercept })}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={( omitMissing ) => this.setState({ omitMissing })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button disabled={!x || x.length === 0} variant=\"primary\" block onClick={this.compute}>\n\t\t\t\t\t\t{t('calculate')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nLogisticRegressionMenu.defaultProps = {\n\tlogAction() {}\n};\n\nLogisticRegressionMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default LogisticRegressionMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"sourceRoot":""}