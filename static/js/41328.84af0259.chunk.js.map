{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/hierarchical_clustering.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/utils/factor-variable/index.js"],"names":["Dashboard","Loadable","DISTANCES","LINKAGE","HierarchicalClusteringMenu","props","quantitative","originalQuantitative","t","title","content","autoStart","onGenerate","variables","attach","K","linkage","distance","output","data","onResult","result","newData","copy","newCategorical","categorical","slice","suffix","map","x","join","assignments","getClusterAssignments","name","factor","incrspace","contains","push","logAction","DATA_EXPLORER_HIERARCHICAL_CLUSTERING","onCreated","legend","multi","defaultValue","options","min","inline","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","variant","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","onChange","updateValue","state","session","this","globalVal","input","type","handleChange","disabled","aria-label","tooltip","tooltipPlacement","style","marginLeft","role","tabIndex","color","onClick","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","step","max","PINF","NINF","debug","logger","uid","generateUID","NumberInput","valid","validity","parseFloat","isnan","vals","split","onBlur","createTooltip","prevProps","isNumber","padding","htmlFor","numbersOnly","width","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","categories","out","String"],"mappings":"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","file":"static/js/41328.84af0259.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport incrspace from '@stdlib/math/utils/incrspace';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport NumberInput from '@isle-project/components/input/number';\nimport Dashboard from '@isle-project/components/dashboard';\nimport factor from '@isle-project/utils/factor-variable';\nimport HierarchicalClustering from '@isle-project/components/models/hierarchical-clustering';\nimport { DATA_EXPLORER_HIERARCHICAL_CLUSTERING } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DISTANCES = [ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ];\nconst LINKAGE = [ 'complete', 'single' ];\n\n\n// MAIN //\n\nconst HierarchicalClusteringMenu = ( props ) => {\n\tconst { quantitative, originalQuantitative, t } = props;\n\tconst compute = ( variables, attach, K, linkage, distance ) => {\n\t\tconst output = <HierarchicalClustering\n\t\t\tvariables={variables} K={K} linkage={linkage} distance={distance}\n\t\t\tdata={props.data}\n\t\t\tonResult={( result ) => {\n\t\t\t\tif ( attach ) {\n\t\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\t\tconst suffix = variables.map( x => x[ 0 ] ).join( '' );\n\t\t\t\t\tconst assignments = result.getClusterAssignments( K );\n\t\t\t\t\tconst name = factor( 'hclust_cluster_' + suffix, incrspace( 0, K, 1 ).map( x => `Cluster ${x+1}` ) );\n\t\t\t\t\tnewData[ name ] = assignments;\n\t\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t\t}\n\t\t\t\t\tprops.onGenerate( newCategorical, newData );\n\t\t\t\t}\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_HIERARCHICAL_CLUSTERING, {\n\t\t\tvariables, attach, K, linkage, distance\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('Hierarchical Clustering')}\n\t\t\t\t<QuestionButton title={t('Hierarchical Clustering')} content={t('Hierarchical Clustering-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={compute}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variables')} multi\n\t\t\t\tdefaultValue={originalQuantitative}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('attach-clusters-table')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={t('number-of-clusters')}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tdefaultValue={3}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Linkage\"\n\t\t\t\t\t\tdefaultValue={LINKAGE[ 0 ]}\n\t\t\t\t\t\toptions={LINKAGE}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Distance\"\n\t\t\t\t\t\tdefaultValue={DISTANCES[ 0 ]}\n\t\t\t\t\t\toptions={DISTANCES}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nHierarchicalClusteringMenu.defaultProps = {\n\tlogAction() {}\n};\n\nHierarchicalClusteringMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\toriginalQuantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HierarchicalClusteringMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MAIN //\n\n/**\n* A wrapper around String objects for specifying ordered categories.\n*\n* @param {string} name - variable name\n* @param {Array} categories - ordered categories\n* @returns {String} factor variable string object\n*/\nfunction factorVariable( name, categories ) {\n\tconst out = new String( name ); // eslint-disable-line no-new-wrappers\n\tout.categories = categories;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default factorVariable;\n"],"sourceRoot":""}