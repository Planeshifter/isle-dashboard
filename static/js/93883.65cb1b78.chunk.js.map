{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/frequency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["FrequencyTableMenu","props","defaultValue","variables","groupingVariables","t","useState","calculateRelative","setCalculateRelative","calculateCounts","setCalculateCounts","variable","setVariable","group","setGroup","nDecimalPlaces","setNDecimalPlaces","as","title","content","legend","options","onChange","clearable","menuPlacement","tooltip","inline","width","max","min","variant","block","onClick","output","data","logAction","DATA_EXPLORER_FREQUENCY_TABLE","onCreated","disabled","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","className","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","updateValue","state","session","this","globalVal","input","type","handleChange","aria-label","tooltipPlacement","style","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","step","PINF","NINF","debug","logger","uid","generateUID","NumberInput","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","createTooltip","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString"],"mappings":"qQAkBMA,EAAqB,SAAEC,GAC5B,IAAQC,EAAkDD,EAAlDC,aAAcC,EAAoCF,EAApCE,UAAWC,EAAyBH,EAAzBG,kBAAmBC,EAAMJ,EAANI,EAEpD,GAAoDC,eAAU,GAA9D,eAAQC,EAAR,KAA2BC,EAA3B,KACA,GAAgDF,eAAU,GAA1D,eAAQG,EAAR,KAAyBC,EAAzB,KACA,GAAkCJ,cAAUJ,GAAgBC,EAAW,IAAvE,eAAQQ,EAAR,KAAkBC,EAAlB,KACA,GAA4BN,cAAU,MAAtC,eAAQO,EAAR,KAAeC,EAAf,KACA,GAA8CR,cAAU,GAAxD,eAAQS,EAAR,KAAwBC,EAAxB,KAgBA,OACC,gBAAC,IAAD,KACC,gBAAC,WAAD,CAAaC,GAAG,MACdZ,EAAE,mBACH,gBAAC,IAAD,CAAgBa,MAAOb,EAAE,mBAAoBc,QAASd,EAAE,kCAEzD,gBAAC,SAAD,KACC,gBAAC,IAAD,CACCe,OAAQf,EAAE,YACVH,aAAcS,EACdU,QAASlB,EACTmB,SAAUV,IAEX,gBAAC,IAAD,CACCQ,OAAQf,EAAE,YACVgB,QAASjB,EACTmB,WAAW,EACXC,cAAc,MACdF,SAAUR,EACVW,QAASpB,EAAE,iCAEZ,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCe,OAAQf,EAAE,UACVH,aAAcO,EACda,SAAU,WACTZ,GAAqBD,OAIxB,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCW,OAAQf,EAAE,sBACVH,aAAcK,EACde,SAAU,WACTd,GAAuBD,QAKzBA,EAAoB,yBAAIF,EAAE,+BAC3B,gBAAC,IAAD,CACCqB,QAAM,EACNC,MAAO,GACPC,IAAK,GACLC,IAAK,EACL3B,aAAca,EACdO,SAAUN,IAEVX,EAAE,mBACG,KACP,gBAAC,IAAD,CACCyB,QAAQ,UACRC,OAAK,EACLC,QArE2B,WAC9B,IAAMC,EAAS,gBAAC,IAAD,CACdtB,SAAUA,EACVE,MAAOA,EACPJ,gBAAiBA,EACjBF,kBAAmBA,EACnBQ,eAAgBA,EAChBmB,KAAMjC,EAAMiC,OAEbjC,EAAMkC,UAAWC,KAA+B,CAC/CzB,WAAUE,QAAON,oBAAmBE,kBAAiBM,mBAEtDd,EAAMoC,UAAWJ,IA0DdK,UAAW7B,IAAoBF,GAE9BF,EAAE,gBAURL,EAAmBuC,aAAe,CACjCrC,aAAc,KACdE,kBAAmB,KACnB+B,UAHiC,cAkBlC,a,uGCxFA,IA1BuB,SAAElC,GACxB,IAAMuC,EAAU,gBAAC,IAAD,CAASC,GAAG,4BAC3B,gBAAC,IAAD,KAAexC,EAAMiB,OACrB,gBAAC,IAAD,KAAiBjB,EAAMkB,UAExB,OACC,gBAAC,IAAD,CAAgBuB,QAAS,CAAC,QAAS,SAAUC,UAAU,OAAOC,WAAS,EAACC,QAASL,GAChF,gBAAC,IAAD,CACCM,KAAK,KACLhB,QAAQ,oBACRiB,UAAU,mBAEV,uBAAKA,UAAU,uB,0PCGbC,E,0CACL,WAAa/C,EAAOgD,GAAW,IAAD,kBAC7B,cAAOhD,IADsB,iCAwChB,SAAEiD,GACf,EAAKC,SAAS,CACbC,MAAOF,IACL,WACG,EAAKjD,MAAMoD,MACfC,IAAOC,OAAOJ,UAAd,UACG,EAAKlD,MAAMoD,KAAQH,WA9CK,kCAoDf,SAAEM,GAChB,IAAMN,EAAWM,EAAMC,OAAOC,QAC9B,EAAKzD,MAAMqB,SAAU4B,GACrB,EAAKS,YAAaT,OAvDW,sCA0DX,SAAEM,GACpB,IAAMN,EAAgC,OAArB,EAAKjD,MAAMmD,OAAkB,EAAKnD,MAAMmD,OAAS,EAAKQ,MAAMR,MAC7E,EAAKnD,MAAMqB,SAAU4B,GACrB,EAAKS,YAAaT,MA1DlB,IAAMW,EAAUZ,EAHa,OAI7B,EAAKW,MAAQ,CACZR,MAAOnD,EAAMoD,MAAQQ,EAAQD,MAC5BC,EAAQD,MAAO3D,EAAMoD,MACrBpD,EAAMC,aACPmD,KAAMpD,EAAMoD,KACZnD,aAAcD,EAAMC,cATQ,E,iDA6B9B,WACC,GAAK4D,KAAK7D,MAAMoD,KAAO,CACtB,IAAIU,EAAYT,IAAOC,OAAOK,MAAOE,KAAK7D,MAAMoD,MAC3CU,IAAcD,KAAKF,MAAMR,OAC7BU,KAAKX,SAAS,CACbC,MAAOW,O,oBA8BX,WACC,IAAMX,EAAUU,KAAKF,MAAfR,MACoB,OAArBU,KAAK7D,MAAMmD,QACfA,EAAQU,KAAK7D,MAAMmD,OAEpB,IAAMY,EAAQ,yBACbjB,UAAU,iBACVkB,KAAK,WACLP,QAASN,EACTA,MAAM,WACN9B,SAAUwC,KAAKI,aACf5B,SAAUwB,KAAK7D,MAAMqC,SACrB6B,aAAYL,KAAK7D,MAAMwB,UAExB,IAA2B,IAAtBqC,KAAK7D,MAAMyB,OACf,OACC,gBAAC,IAAD,CAASD,QAASqC,KAAK7D,MAAMwB,QAASkB,UAAWmB,KAAK7D,MAAMmE,kBAC3D,wBAAMC,OAAK,QAAIC,WAAY,OAAUR,KAAK7D,MAAMoE,QAC9CL,EACD,wBACCO,KAAK,SAASC,SAAU,EACxBzB,UAAU,kBACVsB,MAAO,CACNI,MAAOX,KAAK7D,MAAMqC,SAAW,WAAa,MAE3CN,QAAS8B,KAAKY,iBAAkBC,WAAYb,KAAKY,kBAChDZ,KAAK7D,MAAMmB,UAKjB,IAAMwD,EAAed,KAAK7D,MAAMqC,SAAWuC,IAAOf,KAAKY,iBACvD,OACC,gBAAC,IAAD,CAASjD,QAASqC,KAAK7D,MAAMwB,QAASkB,UAAWmB,KAAK7D,MAAMmE,kBAC3D,uBAAKrB,UAAU,2BAA2BsB,MAAOP,KAAK7D,MAAMoE,OAC1DL,EACD,wBACCO,KAAK,SAASC,SAAU,EACxBzB,UAAU,kBACVsB,MAAO,CACNI,MAAOX,KAAK7D,MAAMqC,SAAW,WAAa,MAE3CN,QAAS4C,EAAcD,WAAYC,GAClCd,KAAK7D,MAAMmB,a,uCA9FjB,SAAiC0D,EAAWC,GAC3C,IAAIC,EAAW,GASf,OARKF,EAAU5E,eAAiB6E,EAAU7E,cACzC8E,EAAS5B,MAAQ0B,EAAU5E,aAC3B8E,EAAS9E,aAAe4E,EAAU5E,cAEzB4E,EAAUzB,OAAS0B,EAAU1B,OACtC2B,EAAS5B,MAAQE,IAAOC,OAAOK,MAAOkB,EAAUzB,MAChD2B,EAAS3B,KAAOyB,EAAUzB,MAErB4B,IAAeD,GAGd,KAFCA,M,GAzBkBE,KAsH5BlC,EAAcT,aAAe,CAC5Bc,KAAM,GACN/B,SAF4B,aAG5BpB,cAAc,EACdkD,MAAO,KACPd,UAAU,EACVZ,QAAQ,EACRN,OAAQ,GACRK,QAAS,GACT2C,iBAAkB,QAClBC,MAAO,IAGRrB,EAAcmC,UAAY,CACzB9B,KAAM+B,WACNlF,aAAckF,SACdhC,MAAOgC,SACP9C,SAAU8C,SACV1D,OAAQ0D,SACR9D,SAAU8D,SACVhE,OAAQgE,cAAoB,CAC3BA,WACAA,WAED3D,QAAS2D,WACThB,iBAAkBgB,UAAgB,CAAE,OAAQ,MAAO,QAAS,WAC5Df,MAAOe,YAGRpC,EAAcqC,YAAcC,IAK5B,IC7KA,ED6KA,G,2WE7JA,MAfA,SAAwBrF,GACvB,IAAIwB,EAAO,iBAA6B,IAAfxB,EAAMsF,KAAa,YAAc,UAA/C,KAQX,OAPKtF,EAAM2B,MAAQ4D,KAAQvF,EAAM4B,MAAQ4D,IACxChE,GAAO,kBAAexB,EAAM4B,IAArB,gBAAgC5B,EAAM2B,KAClC3B,EAAM4B,MAAQ4D,IACzBhE,GAAO,6BAA0BxB,EAAM4B,KAC5B5B,EAAM2B,MAAQ4D,MACzB/D,GAAO,8BAA2BxB,EAAM2B,MAElCH,GCKFiE,EAAQC,IAAQ,qBAChBC,GAAMC,OAAa,gBA4BnBC,E,0CACL,WAAa7F,EAAOgD,GAAW,IAAD,kBAC7B,cAAOhD,IADsB,kCAiDf,SAAEuD,GAChBkC,EAAO,mCACP,IAAIK,EAAQvC,EAAMC,OAAOuC,SAASD,MAC9B3C,EAAQI,EAAMC,OAAOL,MACzB,EAAKD,SAAS,CACbC,UACE,WACG,EAAKnD,MAAMmD,OACd2C,GAAmB,KAAV3C,GACA,MAAVA,GAA2B,MAAVA,GAA2B,OAAVA,GAElCA,EAAQ6C,WAAY7C,GACf8C,IAAO9C,KACXA,EAAQ,IAET,EAAKnD,MAAMqB,SAAU8B,GAChB,EAAKnD,MAAMoD,MACfC,IAAOC,OAAOJ,UAAd,UACG,EAAKlD,MAAMoD,KAAQD,KAGZ,EAAKnD,MAAMoD,MACtBC,IAAOC,OAAOJ,UAAd,UACG,EAAKlD,MAAMoD,KAAQD,WAxEK,kCA8Ef,SAAEI,GAChB,MAA2B,EAAKvD,MAAxB2B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAK0D,EAAlB,EAAkBA,KAClBG,EAAO,sBACP,IAAItC,EAAQI,EAAMC,OAAOL,MACzB,GAAK+C,IAAU/C,EAAO,KAAQ,CAC7BsC,EAAO,6BACP,IAAIU,EAAOhD,EAAMiD,MAAO,KACL,KAAdD,EAAM,IAA4B,KAAdA,EAAM,KAC9BhD,EAAQ6C,WAAYG,EAAM,IAAOH,WAAYG,EAAM,KAGhDF,IAAO9C,GACXA,EAAQ,GAGE,KAAVA,GAA0B,MAAVA,GACN,MAAVA,GAA2B,OAAVA,IAEjBA,EAAQ6C,WAAY7C,IAEhBA,EAAQxB,EACZwB,EAAQxB,EAECwB,EAAQvB,EACjBuB,EAAQvB,EAGC,IAAT0D,GAA0B,KAAVnC,GACN,MAAVA,GAA2B,MAAVA,GAA2B,OAAVA,IAElCA,GAAgBA,EAAQ,EAAKnD,MAAMsF,MAEpC,EAAKtF,MAAMqB,SAAU8B,GACrB,EAAKnD,MAAMqG,OAAQlD,GACdA,IAAU,EAAKQ,MAAMR,OACzB,EAAKD,SAAS,CACbC,UACE,WACG,EAAKnD,MAAMoD,MACfC,IAAOC,OAAOJ,UAAd,UACG,EAAKlD,MAAMoD,KAAQD,UAnHzB,IAAMS,EAAUZ,EAHa,OAI7B,EAAKR,GAAKxC,EAAMwC,IAAMmD,EAAK3F,GAC3B,EAAK2D,MAAQ,CACZR,MAAOnD,EAAMmD,QAAUnD,EAAMoD,MAAQQ,EAAQD,MAC5CC,EAAQD,MAAO3D,EAAMoD,MACrBpD,EAAMC,cACPuB,QAASxB,EAAMwB,SAAW8E,EAAetG,GACzCuG,UAAWvG,GAViB,E,iDAqC9B,WAEC,GADAyF,EAAO,2BACF5B,KAAK7D,MAAMoD,KAAO,CACtB,IAAMU,EAAYT,IAAOC,OAAOK,MAAOE,KAAK7D,MAAMoD,MAC7CU,IAAcD,KAAKF,MAAMR,QAASqD,iBAAU3C,KAAKF,MAAMR,QAC3DU,KAAKX,SAAS,CACbC,MAAOW,O,oBAkFX,WACC,IAAMX,EAAUU,KAAKF,MAAfR,MAIN,GAH0B,OAArBU,KAAK7D,MAAMmD,QACfA,EAAQU,KAAK7D,MAAMmD,QAEO,IAAtBU,KAAK7D,MAAMyB,OAAkB,CACjC,IAAMsC,EACL,wBAAMjB,UAAU,QAAQsB,OAAK,QAAIqC,QAAS,OAAU5C,KAAK7D,MAAMoE,QAC5DP,KAAK7D,MAAMmB,OAAS,yBAAOuF,QAAS7C,KAAKrB,IAArB,IAA4BqB,KAAK7D,MAAMmB,OAAvC,QAA6D,KACnF,yBACCqB,GAAIqB,KAAKrB,GACTwB,KAAMH,KAAK7D,MAAM2G,YAAc,SAAW,OAC1CC,KAAK,QACL9D,UAAU,sBACVT,SAAUwB,KAAK7D,MAAMqC,SACrBc,MAAOA,EACPmC,KAAMzB,KAAK7D,MAAMsF,KACjB1D,IAAKiC,KAAK7D,MAAM4B,IAChBD,IAAKkC,KAAK7D,MAAM2B,IAChByC,OAAK,QACJ1C,MAAO,OACPmF,YAAa,MACbxC,WAAY,OACTR,KAAK7D,MAAM8G,YAEfzF,SAAUwC,KAAKI,aACfoC,OAAQxC,KAAKkD,aACbrC,WAAYb,KAAK7D,MAAM0E,WACvBsC,UAAWnD,KAAK7D,MAAMgH,UACtBC,QAASpD,KAAK7D,MAAMiH,QACpBC,aAAa,QAEZrD,KAAK7D,MAAMmH,YACZ,gCAAQtD,KAAK7D,MAAMmH,YAAnB,KACA,8BAGH,OAAOtD,KAAK7D,MAAMqC,SACjB0B,EACA,gBAAC,IAAD,CAASvB,GAAG,8BAA8BE,UAAU,MAAMlB,QAASqC,KAAKF,MAAMnC,SAC5EuC,GAGJ,IAAIA,EAAQ,yBACXvB,GAAIqB,KAAKrB,GACTwB,KAAMH,KAAK7D,MAAM2G,YAAc,SAAW,OAC1CC,KAAK,QACL9D,UAAU,sBACVT,SAAUwB,KAAK7D,MAAMqC,SACrBc,MAAOA,EACPmC,KAAMzB,KAAK7D,MAAMsF,KACjB1D,IAAKiC,KAAK7D,MAAM4B,IAChBD,IAAKkC,KAAK7D,MAAM2B,IAChByC,OAAK,QACJ1C,MAAO,OACP2C,WAAY,QACTR,KAAK7D,MAAM8G,YAEfzF,SAAUwC,KAAKI,aACfoC,OAAQxC,KAAKkD,aACbrC,WAAYb,KAAK7D,MAAM0E,WACvBsC,UAAWnD,KAAK7D,MAAMgH,UACtBC,QAASpD,KAAK7D,MAAMiH,QACpBC,aAAa,QAEd,OAAS,uBAAKpE,UAAU,QAAQsB,OAAK,QACpCgD,aAAc,MACdC,UAAW,OACRxD,KAAK7D,MAAMoE,QAEZP,KAAK7D,MAAMmB,OACZ,4BACC,yBAAOuF,QAAS7C,KAAKrB,KACnB8E,iBAAUzD,KAAK7D,MAAMmB,QACrB0C,KAAK7D,MAAMmB,OAAO,IAClB0C,KAAK7D,MAAMmB,QAGX0C,KAAK7D,MAAMmH,YACZ,gCAAQtD,KAAK7D,MAAMmH,aACnB,MAEQ,KAEX,gBAAC,IAAD,CACC3E,GAAG,uBAAuBE,UAAWmB,KAAK7D,MAAMmE,iBAChD3C,QAASqC,KAAKF,MAAMnC,SACpB,wBAAMsB,UAAU,qBAAsBiB,Q,uCAtMzC,SAAiCc,EAAWC,GAC3C,IAAIC,EAAW,GACPwB,EAAczB,EAAdyB,UAaR,OAZK1B,EAAU5E,eAAiBsG,EAAUtG,aACzC8E,EAAS5B,MAAQ0B,EAAU5E,aAElB4E,EAAUzB,OAASmD,EAAUnD,OACtC2B,EAAS5B,MAAQE,IAAOC,OAAOK,MAAOkB,EAAUzB,OAE5CyB,EAAUjD,MAAQ2E,EAAU3E,KAAOiD,EAAUlD,MAAQ4E,EAAU5E,IACnEoD,EAASvD,QAAUqD,EAAUrD,SAAW8E,EAAezB,GAE9CA,EAAUrD,SAAWqD,EAAUrD,UAAYsD,EAAUtD,UAC9DuD,EAASvD,QAAUqD,EAAUrD,SAExBwD,IAAeD,GAKd,MAJNU,EAAO,mCACPV,EAASwB,UAAY1B,EACdE,O,GAjCgBE,KA6N1BY,EAAYvD,aAAe,CAC1Bc,KAAM,GACNf,UAAU,EACVlB,OAAQ,KACRS,IAAK4D,IACL7D,IAAK4D,IACLD,KAAM,EACNrF,aAAc,EACdoG,OAR0B,aAS1BhF,SAT0B,aAU1B2F,UAV0B,aAW1BtC,WAX0B,aAY1BuC,QAZ0B,aAa1BxF,QAAQ,EACRkF,aAAa,EACbvC,MAAO,GACP0C,WAAY,GACZ3D,MAAO,KACP3B,QAAS,KACT2C,iBAAkB,QAGnB0B,EAAYX,UAAY,CACvB9B,KAAM+B,WACNlF,aAAckF,WACd9C,SAAU8C,SACV1D,OAAQ0D,SACRhE,OAAQgE,cAAoB,CAC3BA,WACAA,WAEDxD,IAAKwD,WACLvD,IAAKuD,WACLwB,YAAaxB,SACbkB,OAAQlB,SACR9D,SAAU8D,SACV6B,UAAW7B,SACXT,WAAYS,SACZ8B,QAAS9B,SACTG,KAAMH,cAAoB,CACzBA,WACAA,aAEDf,MAAOe,WACP2B,WAAY3B,WACZhC,MAAOgC,WACP3D,QAAS2D,WACThB,iBAAkBgB,UAAgB,CAAE,MAAO,QAAS,SAAU,UAG/DU,EAAYT,YAAcC,IAK1B,IC9TA,ED8TA","file":"static/js/93883.65cb1b78.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport FrequencyTable from '@isle-project/components/tables/frequency-table';\nimport { DATA_EXPLORER_FREQUENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst FrequencyTableMenu = ( props ) => {\n\tconst { defaultValue, variables, groupingVariables, t } = props;\n\n\tconst [ calculateRelative, setCalculateRelative ] = useState( false );\n\tconst [ calculateCounts, setCalculateCounts ] = useState( true );\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ nDecimalPlaces, setNDecimalPlaces ] = useState( 3 );\n\n\tconst generateFrequencyTable = () => {\n\t\tconst output = <FrequencyTable\n\t\t\tvariable={variable}\n\t\t\tgroup={group}\n\t\t\tcalculateCounts={calculateCounts}\n\t\t\tcalculateRelative={calculateRelative}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdata={props.data}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_FREQUENCY_TABLE, {\n\t\t\tvariable, group, calculateRelative, calculateCounts, nDecimalPlaces\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Frequency Table')}\n\t\t\t\t<QuestionButton title={t('Frequency Table')} content={t('Frequency Table-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\ttooltip={t('freq-table-group-by-tooltip')}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('counts')}\n\t\t\t\t\t\t\tdefaultValue={calculateCounts}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateCounts( !calculateCounts );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\t\tdefaultValue={calculateRelative}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateRelative( !calculateRelative );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ calculateRelative ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tdefaultValue={nDecimalPlaces}\n\t\t\t\t\t\tonChange={setNDecimalPlaces}\n\t\t\t\t\t/>\n\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t</p> : null }\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tblock\n\t\t\t\t\tonClick={generateFrequencyTable}\n\t\t\t\t\tdisabled={!calculateCounts && !calculateRelative}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nFrequencyTableMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nFrequencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FrequencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}