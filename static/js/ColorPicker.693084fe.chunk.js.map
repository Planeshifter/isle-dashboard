{"version":3,"sources":["../node_modules/@isle-project/components/color-picker/main.js"],"names":["SketchPicker","Loadable","CompactPicker","MaterialPicker","BlockPicker","ColorPicker","props","colorPicker","variant","popover","id","overlay","placement","trigger","size","style","backgroundColor","color","width","height","className","margin","defaultProps","disableAlpha","presetColors","onChange","onChangeComplete"],"mappings":"8MASMA,GAAeC,QAAU,kBAAM,sEAC/BC,GAAgBD,QAAU,kBAAM,wEAChCE,GAAiBF,QAAU,kBAAM,wEACjCG,GAAcH,QAAU,kBAAM,wEAkB9BI,EAAc,SAAEC,GACrB,IAAIC,EACJ,OAASD,EAAME,SACd,IAAK,QACJD,EAAc,gBAACH,EAAgBE,GAC/B,MACD,IAAK,UACJC,EAAc,gBAACL,EAAkBI,GACjC,MACD,IAAK,WACJC,EAAc,gBAACJ,EAAmBG,GAClC,MACD,IAAK,SACJ,IAAMG,EAAU,gBAAC,IAAD,CAASC,GAAE,UAAKJ,EAAME,QAAX,aAC1B,gBAAC,IAAD,KACA,gBAACR,EAAiBM,KAGnBC,EAAc,gBAAC,IAAD,CACbI,QAASF,EACTG,UAAU,aACVC,QAAS,CAAE,UAEX,gBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAO,CAAEC,gBAAiBV,EAAMW,MAAOC,MAAO,GAAIC,OAAQ,OAG7E,MAED,IAAK,SACL,QACCZ,EAAc,gBAACP,EAAiBM,GAGlC,OACC,uBAAKc,UAAWd,EAAMc,UAAWL,OAAK,QAAIG,MAAO,cAAeG,OAAQ,UAAaf,EAAMS,QACzFR,IAyBJF,EAAYiB,aAAe,CAC1Bd,QAAS,SACTS,MAAO,OACPM,cAAc,EACdC,aAAc,CAAE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC1KN,MAAO,IACPE,UAAW,GACXL,MAAO,GACPU,SAR0B,aAS1BC,iBAT0B,cAe3B","file":"static/js/ColorPicker.693084fe.chunk.js","sourcesContent":["// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport Loadable from '@isle-project/components/internal/loadable';\nimport OverlayTrigger from '@isle-project/components/overlay-trigger';\nconst SketchPicker = Loadable( () => import( 'react-color/lib/Sketch.js' ) );\nconst CompactPicker = Loadable( () => import( 'react-color/lib/Compact.js' ) );\nconst MaterialPicker = Loadable( () => import( 'react-color/lib/Material.js' ) );\nconst BlockPicker = Loadable( () => import( 'react-color/lib/Block.js' ) );\n\n\n// MAIN //\n\n/**\n* A wrapper for the [react-color](https://casesandberg.github.io/react-color/) color picker.\n*\n* @property {string} variant - color picker variant (either `Compact`, `Sketch`, `Material`, or `Block`)\n* @property {(string|Object)} color - `string` holding an HeX code or an `object` holding RGB or HSL values such as `{ r: 255, g: 255, b: 255 }` or `{ h: 0, s: 0, l: .10 }`, which determines the active color. Both accept an `a` property for alpha values other than one\n* @property {boolean} disableAlpha - controls whether to remove alpha slider and options\n* @property {Array<string>} presetColors - HeX `strings` specifying the default colors at the bottom of the colorpicker\n* @property {number} width - width of the color picker (in px)\n* @property {string} className - class name\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback invoked every time color is changed\n* @property {Function} onChangeComplete - callback invoked once a color change is complete\n*/\nconst ColorPicker = ( props ) => {\n\tlet colorPicker;\n\tswitch ( props.variant ) {\n\t\tcase 'Block':\n\t\t\tcolorPicker = <BlockPicker {...props} />;\n\t\t\tbreak;\n\t\tcase 'Compact':\n\t\t\tcolorPicker = <CompactPicker {...props} />;\n\t\t\tbreak;\n\t\tcase 'Material':\n\t\t\tcolorPicker = <MaterialPicker {...props} />;\n\t\t\tbreak;\n\t\tcase 'Button': {\n\t\t\tconst popover = <Popover id={`${props.variant}-popover`}>\n\t\t\t\t<PopoverContent>\n\t\t\t\t<SketchPicker {...props} />\n\t\t\t\t</PopoverContent>\n\t\t\t</Popover>;\n\t\t\tcolorPicker = <OverlayTrigger\n\t\t\t\toverlay={popover}\n\t\t\t\tplacement=\"bottom-end\"\n\t\t\t\ttrigger={[ 'click' ]}\n\t\t\t>\n\t\t\t\t<Button size=\"sm\" style={{ backgroundColor: props.color, width: 38, height: 38 }} >\n\t\t\t\t</Button>\n\t\t\t</OverlayTrigger>;\n\t\t\tbreak;\n\t\t}\n\t\tcase 'Sketch':\n\t\tdefault:\n\t\t\tcolorPicker = <SketchPicker {...props} />;\n\t\t\tbreak;\n\t}\n\treturn (\n\t\t<div className={props.className} style={{ width: 'fit-content', margin: '0 auto', ...props.style }}>\n\t\t\t{colorPicker}\n\t\t</div>\n\t);\n};\n\n\n// PROPERTIES //\n\nColorPicker.propTypes = {\n\tvariant: PropTypes.oneOf([\n\t\t'Sketch', 'Material', 'Block', 'Compact', 'Button'\n\t]),\n\tcolor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.object\n\t]),\n\tdisableAlpha: PropTypes.bool,\n\tpresetColors: PropTypes.arrayOf( PropTypes.string ),\n\twidth: PropTypes.number,\n\tclassName: PropTypes.string,\n\tstyle: PropTypes.object,\n\tonChange: PropTypes.func,\n\tonChangeComplete: PropTypes.func\n};\n\nColorPicker.defaultProps = {\n\tvariant: 'Sketch',\n\tcolor: '#fff',\n\tdisableAlpha: false,\n\tpresetColors: [ '#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF' ],\n\twidth: 200,\n\tclassName: '',\n\tstyle: {},\n\tonChange() {},\n\tonChangeComplete() {}\n};\n\n\n// EXPORTS //\n\nexport default ColorPicker;\n"],"sourceRoot":""}