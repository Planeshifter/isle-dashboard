{"version":3,"sources":["../node_modules/@isle-project/utils/factor-variable/index.js","../node_modules/@isle-project/components/data-explorer/menu/hierarchical_clustering.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/dashboard/index.js"],"names":["factorVariable","name","categories","out","String","DISTANCES","LINKAGE","HierarchicalClusteringMenu","props","quantitative","originalQuantitative","t","title","content","autoStart","onGenerate","variables","attach","K","linkage","distance","output","data","onResult","result","newData","copy","newCategorical","categorical","slice","suffix","map","x","join","assignments","getClusterAssignments","factor","incrspace","contains","push","logAction","DATA_EXPLORER_HIERARCHICAL_CLUSTERING","onCreated","legend","multi","defaultValue","options","min","inline","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","variant","className","createTooltip","tooltip","step","max","PINF","NINF","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","onChange","updateValue","state","session","this","globalVal","input","type","handleChange","disabled","aria-label","tooltipPlacement","style","marginLeft","role","tabIndex","color","onClick","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","CreateTooltip","NumberInput","debug","logger","uid","generateUID","valid","validity","parseFloat","isnan","vals","split","onBlur","prevProps","isNumber","padding","htmlFor","numbersOnly","width","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString","number","Dashboard","Loadable"],"mappings":"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","file":"static/js/98.2ea3dfd2.chunk.js","sourcesContent":["// MAIN //\n\n/**\n* A wrapper around String objects for specifying ordered categories.\n*\n* @param {string} name - variable name\n* @param {Array} categories - ordered categories\n* @returns {String} factor variable string object\n*/\nfunction factorVariable( name, categories ) {\n\tconst out = new String( name ); // eslint-disable-line no-new-wrappers\n\tout.categories = categories;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default factorVariable;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport incrspace from '@stdlib/math/utils/incrspace';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport NumberInput from '@isle-project/components/input/number';\nimport Dashboard from '@isle-project/components/dashboard';\nimport factor from '@isle-project/utils/factor-variable';\nimport HierarchicalClustering from '@isle-project/components/models/hierarchical-clustering';\nimport { DATA_EXPLORER_HIERARCHICAL_CLUSTERING } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DISTANCES = [ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ];\nconst LINKAGE = [ 'complete', 'single' ];\n\n\n// MAIN //\n\nconst HierarchicalClusteringMenu = ( props ) => {\n\tconst { quantitative, originalQuantitative, t } = props;\n\tconst compute = ( variables, attach, K, linkage, distance ) => {\n\t\tconst output = <HierarchicalClustering\n\t\t\tvariables={variables} K={K} linkage={linkage} distance={distance}\n\t\t\tdata={props.data}\n\t\t\tonResult={( result ) => {\n\t\t\t\tif ( attach ) {\n\t\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\t\tconst suffix = variables.map( x => x[ 0 ] ).join( '' );\n\t\t\t\t\tconst assignments = result.getClusterAssignments( K );\n\t\t\t\t\tconst name = factor( 'hclust_cluster_' + suffix, incrspace( 0, K, 1 ).map( x => `Cluster ${x+1}` ) );\n\t\t\t\t\tnewData[ name ] = assignments;\n\t\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t\t}\n\t\t\t\t\tprops.onGenerate( newCategorical, newData );\n\t\t\t\t}\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_HIERARCHICAL_CLUSTERING, {\n\t\t\tvariables, attach, K, linkage, distance\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('Hierarchical Clustering')}\n\t\t\t\t<QuestionButton title={t('Hierarchical Clustering')} content={t('Hierarchical Clustering-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={compute}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variables')} multi\n\t\t\t\tdefaultValue={originalQuantitative}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('attach-clusters-table')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={t('number-of-clusters')}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tdefaultValue={3}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Linkage\"\n\t\t\t\t\t\tdefaultValue={LINKAGE[ 0 ]}\n\t\t\t\t\t\toptions={LINKAGE}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend=\"Distance\"\n\t\t\t\t\t\tdefaultValue={DISTANCES[ 0 ]}\n\t\t\t\t\t\toptions={DISTANCES}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nHierarchicalClusteringMenu.defaultProps = {\n\tlogAction() {}\n};\n\nHierarchicalClusteringMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\toriginalQuantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HierarchicalClusteringMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n"],"sourceRoot":""}