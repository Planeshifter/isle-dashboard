{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/contingency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["debug","logger","ContingencyTableMenu","props","state","relativeFreqs","rowVar","defaultRowVar","variables","colVar","defaultColVar","group","nDecimalPlaces","display","this","session","addNotification","title","message","level","position","output","data","logAction","DATA_EXPLORER_CONTINGENCY_TABLE","onCreated","groupingVariables","t","as","content","legend","defaultValue","options","onChange","value","setState","clearable","menuPlacement","tooltip","multi","length","inline","width","max","min","variant","block","onClick","generateContingencyTable","bind","Component","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","className","CheckboxInput","context","newValue","global","lesson","event","target","checked","updateValue","globalVal","input","type","handleChange","disabled","aria-label","tooltipPlacement","style","marginLeft","role","tabIndex","color","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","contextType","SessionContext","step","PINF","NINF","uid","generateUID","NumberInput","valid","validity","parseFloat","isnan","contains","vals","split","onBlur","createTooltip","prevProps","isNumber","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","finishChange","onKeyDown","onKeyUp","autoComplete","description","marginBottom","marginTop","isString"],"mappings":"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","file":"static/js/39963.e18b5336.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport ContingencyTable from '@isle-project/components/tables/contingency-table';\nimport { DATA_EXPLORER_CONTINGENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:contingency-table' );\n\n\n// MAIN //\n\nclass ContingencyTableMenu extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\trelativeFreqs: false,\n\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\tgroup: null, // eslint-disable-line react/no-unused-state\n\t\t\tnDecimalPlaces: 3,\n\t\t\tvariables: props.variables,\n\t\t\tdisplay: []\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( props.variables.length !== state.variables.length ) {\n\t\t\tdebug( 'Available variables have changed...' );\n\t\t\treturn {\n\t\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\t\tvariables: props.variables\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tgenerateContingencyTable() {\n\t\tconst { rowVar, colVar, group, relativeFreqs, nDecimalPlaces, display } = this.state;\n\t\tif ( !rowVar || !colVar ) {\n\t\t\treturn this.props.session.addNotification({\n\t\t\t\ttitle: 'Select Variables',\n\t\t\t\tmessage: 'You need to select a row and column variable for the contingency table',\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <ContingencyTable\n\t\t\trowVar={rowVar}\n\t\t\tcolVar={colVar}\n\t\t\tgroup={group}\n\t\t\trelativeFreqs={relativeFreqs}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdisplay={display}\n\t\t\tdata={this.props.data}\n\t\t/>;\n\t\tthis.props.logAction( DATA_EXPLORER_CONTINGENCY_TABLE, {\n\t\t\trowVar, colVar, group, relativeFreqs, display\n\t\t});\n\t\tthis.props.onCreated( output );\n\t}\n\n\trender() {\n\t\tconst { variables, groupingVariables, t } = this.props;\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t\t{t('Contingency Table')}\n\t\t\t\t\t<QuestionButton title={t('Contingency Table')} content={t('Contingency Table-description')} />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('row-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.rowVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trowVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('column-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.colVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcolVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tgroup: value // eslint-disable-line react/no-unused-state\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttooltip={t('contingency-table-group-tooltip')}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trelativeFreqs: !this.state.relativeFreqs\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('display')}\n\t\t\t\t\t\toptions={['Row Percent', 'Column Percent']}\n\t\t\t\t\t\tmulti\n\t\t\t\t\t\tonChange={( display ) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdisplay: display ? display : []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.state.relativeFreqs || this.state.display.length > 0 ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tdefaultValue={this.state.nDecimalPlaces}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tnDecimalPlaces: value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t\t</p> : null }\n\t\t\t\t\t<Button variant=\"primary\" block onClick={this.generateContingencyTable.bind( this )}>\n\t\t\t\t\t\t{t('generate')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nContingencyTableMenu.defaultProps = {\n\tdefaultRowVar: null,\n\tdefaultColVar: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nContingencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultColVar: PropTypes.string,\n\tdefaultRowVar: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ContingencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\n\n\n// MAIN //\n\nfunction createTooltip( props ) {\n\tlet tooltip = `Enter a${ props.step === 1 ? 'n integer' : ' number'} `;\n\tif ( props.max !== PINF && props.min !== NINF ) {\n\t\ttooltip += `between ${props.min} and ${props.max}`;\n\t} else if ( props.min !== NINF ) {\n\t\ttooltip += `larger or equal to ${props.min}`;\n\t} else if ( props.max !== PINF ) {\n\t\ttooltip += `smaller or equal to ${props.max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Input from '@isle-project/components/input/base';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport PINF from '@stdlib/constants/math/float64-pinf';\nimport NINF from '@stdlib/constants/math/float64-ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nclass NumberInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.id = props.id || uid( props );\n\t\tthis.state = {\n\t\t\tvalue: props.value || (props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue),\n\t\t\ttooltip: props.tooltip || createTooltip( props ),\n\t\t\tprevProps: props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tconst { prevProps } = prevState;\n\t\tif ( nextProps.defaultValue !== prevProps.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevProps.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t}\n\t\tif ( nextProps.min !== prevProps.min || nextProps.max !== prevProps.max ) {\n\t\t\tnewState.tooltip = nextProps.tooltip || createTooltip( nextProps );\n\t\t}\n\t\telse if ( nextProps.tooltip && nextProps.tooltip !== prevState.tooltip ) {\n\t\t\tnewState.tooltip = nextProps.tooltip;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\tdebug( 'Created new state from props...' );\n\t\t\tnewState.prevProps = nextProps;\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdebug( 'Component did update...' );\n\t\tif ( this.props.bind ) {\n\t\t\tconst globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value && isNumber( this.state.value ) ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleChange = ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet value = event.target.value;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t}, () => {\n\t\t\tif ( this.props.value ||\n\t\t\t\t(valid && value !== '' &&\n\t\t\t\tvalue !== '-' && value !== '.' && value !== '-.' )\n\t\t\t) {\n\t\t\t\tvalue = parseFloat( value );\n\t\t\t\tif ( isnan( value ) ) {\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tthis.props.onChange( value );\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfinishChange = ( event ) => {\n\t\tconst { max, min, step } = this.props;\n\t\tdebug( 'Finished change...' );\n\t\tlet value = event.target.value;\n\t\tif ( contains( value, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tlet vals = value.split( '/' );\n\t\t\tif ( vals[ 0 ] !== '' && vals[ 1 ] !== '' ) {\n\t\t\t\tvalue = parseFloat( vals[ 0 ]) / parseFloat( vals[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( value ) ) {\n\t\t\tvalue = '';\n\t\t}\n\t\telse if (\n\t\t\tvalue !== '' && value !== '-' &&\n\t\t\tvalue !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value > max ) {\n\t\t\tvalue = max;\n\t\t}\n\t\telse if ( value < min ) {\n\t\t\tvalue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && value !== '' &&\n\t\t\tvalue !== '-' && value !== '.' && value !== '-.'\n\t\t) {\n\t\t\tvalue = value - value % this.props.step;\n\t\t}\n\t\tthis.props.onChange( value );\n\t\tthis.props.onBlur( value );\n\t\tif ( value !== this.state.value ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue\n\t\t\t}, () => {\n\t\t\t\tif ( this.props.bind ) {\n\t\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t\t[ this.props.bind ]: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tif ( this.props.inline === true ) {\n\t\t\tconst input =\n\t\t\t\t<span className=\"input\" style={{ padding: '5px', ...this.props.style }}>\n\t\t\t\t\t{ this.props.legend ? <label htmlFor={this.id} > {this.props.legend} =  </label> : null }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t\t...this.props.inputStyle\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonBlur={this.finishChange}\n\t\t\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span>({this.props.description})</span> :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</span>;\n\t\t\treturn this.props.disabled ?\n\t\t\t\tinput:\n\t\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" tooltip={this.state.tooltip} >\n\t\t\t\t\t{input}\n\t\t\t\t</Tooltip>;\n\t\t}\n\t\tlet input = <input\n\t\t\tid={this.id}\n\t\t\ttype={this.props.numbersOnly ? 'number' : 'text'}\n\t\t\tname=\"input\"\n\t\t\tclassName=\"number-number-input\"\n\t\t\tdisabled={this.props.disabled}\n\t\t\tvalue={value}\n\t\t\tstep={this.props.step}\n\t\t\tmin={this.props.min}\n\t\t\tmax={this.props.max}\n\t\t\tstyle={{\n\t\t\t\twidth: '80px',\n\t\t\t\tmarginLeft: '24px',\n\t\t\t\t...this.props.inputStyle\n\t\t\t}}\n\t\t\tonChange={this.handleChange}\n\t\t\tonBlur={this.finishChange}\n\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\tautoComplete=\"off\"\n\t\t/>;\n\t\treturn ( <div className=\"input\" style={{\n\t\t\tmarginBottom: '4px',\n\t\t\tmarginTop: '4px',\n\t\t\t...this.props.style\n\t\t}}>\n\t\t\t{ this.props.legend ?\n\t\t\t\t<span>\n\t\t\t\t\t<label htmlFor={this.id} >\n\t\t\t\t\t\t{isString( this.props.legend ) ?\n\t\t\t\t\t\t\tthis.props.legend+':' :\n\t\t\t\t\t\t\tthis.props.legend\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t\t{ this.props.description ?\n\t\t\t\t\t\t<span> {this.props.description}</span> :\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</span> : null\n\t\t\t}\n\t\t\t<Tooltip\n\t\t\t\tid=\"number-input-tooltip\" placement={this.props.tooltipPlacement}\n\t\t\t\ttooltip={this.state.tooltip}\n\t\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t\t</div> );\n\t}\n}\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\nNumberInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}