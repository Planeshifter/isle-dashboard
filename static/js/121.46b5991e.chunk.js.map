{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/map.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/dashboard/index.js"],"names":["SCOPES","LOCATION_MODES","MapMenu","props","variables","groupingVariables","t","autoStart","title","content","onGenerate","locations","locationmode","scope","showLand","longitude","latitude","variable","plotId","randomstring","action","output","data","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_MAP","DATA_EXPLORER_MAP","onCreated","legend","options","clearable","defaultValue","style","marginTop","className","defaultProps","QuestionButton","popover","trigger","placement","rootClose","overlay","size","variant","CheckboxInput","context","newValue","setState","value","bind","global","lesson","event","target","checked","onChange","updateValue","state","this","globalVal","input","type","handleChange","disabled","aria-label","tooltip","inline","tooltipPlacement","marginLeft","role","tabIndex","color","onClick","handleSpanChange","onKeyPress","onSpanChange","noop","nextProps","prevState","newState","isEmptyObject","Input","propTypes","PropTypes","string","bool","func","oneOfType","node","oneOf","object","contextType","SessionContext","Dashboard","Loadable"],"mappings":"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","file":"static/js/121.46b5991e.chunk.js","sourcesContent":["// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Map from '@isle-project/components/plots/map';\nimport { DATA_EXPLORER_SHARE_MAP, DATA_EXPLORER_MAP } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst SCOPES = [\n\t'world',\n\t'usa',\n\t'europe',\n\t'asia',\n\t'africa',\n\t'north america',\n\t'south america'\n];\nconst LOCATION_MODES = [\n\t'ISO-3',\n\t'USA-states',\n\t'country names'\n];\n\n\n// MAIN //\n\nconst MapMenu = ( props ) => {\n\tconst { variables, groupingVariables, t } = props;\n\tconst generateMap = ( locations, locationmode, scope, showLand, longitude, latitude, variable ) => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable,\n\t\t\tlongitude,\n\t\t\tlatitude,\n\t\t\tlocations,\n\t\t\tscope,\n\t\t\tshowLand,\n\t\t\tplotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_MAP, action );\n\t\t};\n\t\tconst output = <Map\n\t\t\tdata={props.data} variable={variable} locations={locations}\n\t\t\tlongitude={longitude} latitude={latitude} locationmode={locationmode}\n\t\t\tscope={scope} showLand={showLand}\n\t\t\tid={plotId} action={action} onShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_MAP, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\tautoStart={false}\n\t\t\ttitle={<span>\n\t\t\t\t{t('Map')}\n\t\t\t\t<QuestionButton title={t('Map')} content={t('Map-description')} />\n\t\t\t</span>}\n\t\t\tonGenerate={generateMap}\n\t\t>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('locations')}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('location-encoding')}\n\t\t\t\t\t\toptions={LOCATION_MODES}\n\t\t\t\t\t\tdefaultValue=\"country names\"\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('scope')}\n\t\t\t\t\t\tdefaultValue=\"world\"\n\t\t\t\t\t\toptions={SCOPES}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('show-land')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tstyle={{ marginTop: 35 }}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<h4 className=\"center\">{t('or')}</h4>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('longitude')}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('latitude')}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<hr />\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\toptions={variables}\n\t\t\t\tclearable\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nMapMenu.defaultProps = {\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonCreated() {}\n};\n\nMapMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default MapMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={['hover', 'focus']} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmptyObject from '@stdlib/assert/is-empty-object';\nimport noop from '@stdlib/utils/noop';\nimport Input from '@isle-project/components/input/base';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './checkbox.css';\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nclass CheckboxInput extends Input {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tconst session = context;\n\t\tthis.state = {\n\t\t\tvalue: props.bind && session.state ?\n\t\t\t\tsession.state[ props.bind ]:\n\t\t\t\tprops.defaultValue,\n\t\t\tbind: props.bind,\n\t\t\tdefaultValue: props.defaultValue\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tlet newState = {};\n\t\tif ( nextProps.defaultValue !== prevState.defaultValue ) {\n\t\t\tnewState.value = nextProps.defaultValue;\n\t\t\tnewState.defaultValue = nextProps.defaultValue;\n\t\t}\n\t\telse if ( nextProps.bind !== prevState.bind ) {\n\t\t\tnewState.value = global.lesson.state[ nextProps.bind ];\n\t\t\tnewState.bind = nextProps.bind;\n\t\t}\n\t\tif ( !isEmptyObject( newState ) ) {\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.bind ) {\n\t\t\tlet globalVal = global.lesson.state[ this.props.bind ];\n\t\t\tif ( globalVal !== this.state.value ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: globalVal\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateValue = ( newValue ) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tif ( this.props.bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ this.props.bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleChange = ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\thandleSpanChange = ( event ) => {\n\t\tconst newValue = this.props.value !== null ? !this.props.value : !this.state.value;\n\t\tthis.props.onChange( newValue );\n\t\tthis.updateValue( newValue );\n\t}\n\n\trender() {\n\t\tlet { value } = this.state;\n\t\tif ( this.props.value !== null ) {\n\t\t\tvalue = this.props.value;\n\t\t}\n\t\tconst input = <input\n\t\t\tclassName=\"checkbox-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={value}\n\t\t\tvalue=\"checkbox\"\n\t\t\tonChange={this.handleChange}\n\t\t\tdisabled={this.props.disabled}\n\t\t\taria-label={this.props.tooltip}\n\t\t></input>;\n\t\tif ( this.props.inline === true ) {\n\t\t\treturn (\n\t\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t\t<span style={{ marginLeft: '8px', ...this.props.style }}>\n\t\t\t\t\t\t{input}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={this.handleSpanChange} onKeyPress={this.handleSpanChange}\n\t\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\t\tconst onSpanChange = this.props.disabled ? noop : this.handleSpanChange;\n\t\treturn (\n\t\t\t<Tooltip tooltip={this.props.tooltip} placement={this.props.tooltipPlacement} >\n\t\t\t\t<div className=\"input checkbox-input-div\" style={this.props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: this.props.disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t\t>{this.props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\nCheckboxInput.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n"],"sourceRoot":""}