"use strict";const axios=require("axios"),glob=require("glob"),fs=require("fs"),path=require("path"),qs=require("qs"),readJSON=require("@stdlib/fs/read-json"),objectKeys=require("@stdlib/utils/keys"),ENV=require("@stdlib/process/env"),LANGUAGE_TARGETS=["de","es","fr","it","ja","nl","pl","pt","ru","zh"],deepl={server:"https://api.deepl.com/v2/translate",auth_key:ENV.DEEPL_KEY},TOPLEVEL_DIR=path.resolve(__dirname,"..","..",".."),options={cwd:TOPLEVEL_DIR};glob("public/locales/en/*.json",options,(function(e,t){for(let s=0;s<t.length;s++){const e=path.resolve(TOPLEVEL_DIR,t[s]),r=readJSON.sync(e),o=objectKeys(r),n={};for(let t=0;t<o.length;t++){const e=o[t];n[e]=r[e]}fs.writeFileSync(e,JSON.stringify(n,null,"\t").concat("\n"));for(let t=0;t<LANGUAGE_TARGETS.length;t++){const s=LANGUAGE_TARGETS[t],n=e.replace("en",s);fs.existsSync(n)||fs.writeFileSync(n,JSON.stringify({}));const l=readJSON.sync(n),i=[],a=[];for(let e=0;e<o.length;e++){const t=o[e];if(!l[t]){const e=r[t];console.log("Translate `"+e+"` to "+s),a.push(t),i.push(axios.post(deepl.server,qs.stringify({auth_key:deepl.auth_key,source_lang:"EN",text:e,target_lang:"pt"===s?"PT-BR":s.toUpperCase()})))}}Promise.all(i).then((e=>{const t=e.map((e=>e.data.translations[0].text));for(let r=0;r<a.length;r++){const e=a[r];l[e]=t[r]}o.sort(((e,t)=>e.localeCompare(t)));const s={};for(let r=0;r<o.length;r++){const e=o[r];s[e]=l[e]}fs.writeFileSync(n,JSON.stringify(s,null,"\t").concat("\n"))})).catch((e=>{console.error(e)}))}}}));